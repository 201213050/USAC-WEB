/* The following code was generated by JFlex 1.6.1 */

package Source.CHTML;
import java_cup.runtime.Symbol;
import java.util.ArrayList;
import Principal.Errores;
import Principal.tablaSimbolos;
/*
Directivas:
public: clase publica
cup: compatibilidad con cup
full: extender el alfabeto con todos los valores de 8 bits
line: agrega la variable int yyline, para indicar la fila del lexema
char: agrega la variable int yychar, indica el indice del primer caracter del lexema
ignorecase: validar, indistitntamente si la letra es mayuscula o minuscula
eofval: especifica un valor de retorno al final del archivo
*/





/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>chtml.l</tt>
 */
public class Scanner implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int COMENTARIO = 2;
  public static final int ENCABEZADO1 = 4;
  public static final int ENCABEZADO2 = 6;
  public static final int CUERPO = 8;
  public static final int TITULO1 = 10;
  public static final int TITULO2 = 12;
  public static final int TITULO3 = 14;
  public static final int ELEMENTOS = 16;
  public static final int TEXTO1 = 18;
  public static final int TEXTO2 = 20;
  public static final int IMAGEN1 = 22;
  public static final int IMAGEN2 = 24;
  public static final int BOTON1 = 26;
  public static final int BOTON2 = 28;
  public static final int ENLACE1 = 30;
  public static final int ENLACE2 = 32;
  public static final int T1 = 34;
  public static final int T2 = 36;
  public static final int T3 = 38;
  public static final int T4 = 40;
  public static final int T5 = 42;
  public static final int T6 = 44;
  public static final int T7 = 46;
  public static final int TB = 48;
  public static final int TB2 = 50;
  public static final int TI = 52;
  public static final int TI2 = 54;
  public static final int TB3 = 56;
  public static final int TA1 = 58;
  public static final int TA2 = 60;
  public static final int CAJA1 = 62;
  public static final int CAJA2 = 64;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7, 
     8,  8,  9,  9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 
    14, 14, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 
    23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 14, 14, 29, 29, 
    30, 30
  };

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = {
     6,  6,  6,  6,  6,  6,  6,  6,  6,  1,  3, 51,  1,  1,  6,  6, 
     6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6, 
     2,  6,  8, 18,  6,  6,  6,  6, 11, 12, 13,  6,  6, 14,  5, 19, 
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  7, 48, 34, 47, 35,  6, 
     6, 28, 39, 29, 27, 25, 38, 42, 30, 21, 43, 50, 37, 36, 31, 33, 
    40, 23, 26, 45, 32, 24, 46, 15, 41, 15, 22,  6, 16,  6,  6, 17, 
     6, 28, 39, 29, 27, 25, 38, 42, 30, 21, 43, 50, 37, 36, 31, 33, 
    40, 23, 26, 45, 32, 24, 46, 15, 41, 15, 22,  6,  6,  6,  6,  6, 
     6,  6,  6,  6,  6, 51,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6, 
     6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6, 
     6, 10,  6,  6,  6,  6,  6,  6,  6, 10,  6,  6,  6, 10,  6,  6, 
     6, 10,  6, 10,  6,  6,  6,  6,  6,  6, 10,  6,  6,  6,  6,  6, 
     6,  6,  6,  9,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6, 
     6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6, 
     6,  6,  6,  9,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6, 
     6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6
  };

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\37\0\1\1\1\2\1\3\5\1\1\4\1\5\4\1"+
    "\1\6\1\7\1\6\1\1\1\10\1\11\4\1\1\12"+
    "\1\13\1\1\1\14\1\15\2\1\1\16\2\1\1\17"+
    "\1\20\1\21\10\1\1\22\1\1\1\23\1\24\3\1"+
    "\1\25\1\1\1\26\10\1\1\27\3\1\1\30\2\1"+
    "\1\31\1\32\1\33\2\1\1\34\1\1\1\35\1\36"+
    "\1\37\2\1\1\40\1\1\1\36\1\41\5\1\1\42"+
    "\1\1\1\43\1\44\1\45\1\1\1\46\3\1\1\47"+
    "\1\50\1\1\1\51\2\1\1\52\1\53\1\1\1\54"+
    "\1\55\2\1\1\56\5\1\1\57\2\1\1\60\1\61"+
    "\1\62\52\0\2\63\5\0\1\64\14\0\1\63\21\0"+
    "\1\65\1\66\11\0\1\67\30\0\2\70\31\0\1\71"+
    "\4\0\1\72\10\0\1\73\4\0\1\74\15\0\1\75"+
    "\26\0\1\76\26\0\1\77\17\0\1\100\4\0\1\101"+
    "\5\0\1\102\1\103\1\0\1\104\1\105\1\0\1\106"+
    "\2\0\1\107\1\110\1\0\1\111\1\112\10\0\1\113"+
    "\2\0\1\114\2\0\1\113\1\115\2\0\1\116\2\0"+
    "\1\113\2\0\1\117\4\0\1\120\1\0\1\121\1\116"+
    "\1\122\1\123\1\124\2\0\1\125\1\126\10\0\1\127"+
    "\1\130\2\0\1\131\2\0\1\132\1\133\3\0\1\134"+
    "\1\0\1\135\1\0\1\136\10\0\1\137\1\140\7\0"+
    "\1\141\1\142\1\143\10\0\1\144\1\145\11\0\1\146"+
    "\4\0\1\147\2\0\2\150\1\151\1\147\1\151\3\0"+
    "\1\147\1\0\2\152\1\151\3\0\1\153\5\0\1\154"+
    "\1\0\1\155\2\0\1\156\7\0\1\157\2\0\1\160"+
    "\1\161\1\162\1\0\1\163\1\164\2\0\1\165\14\0"+
    "\1\166\15\0\1\167\10\0\1\170\1\171\1\172\1\0"+
    "\1\173\12\0\1\174\12\0\1\175\4\0\1\176\36\0"+
    "\1\177\7\0\1\200\1\0\1\201\5\0\2\202\1\203"+
    "\1\202\7\0\1\204\6\0\2\205\5\0\1\206\1\207"+
    "\1\0\1\210\1\211\1\0\1\212\3\0\1\213\1\0"+
    "\1\214\1\215\1\0\1\216\1\0\1\217\1\0\1\220"+
    "\1\221\1\222\1\223\1\224\2\0\1\225\2\0\1\226"+
    "\1\0\1\227\1\0\1\230\2\0\1\231\1\232\5\0"+
    "\1\233\1\234";

  private static int [] zzUnpackAction() {
    int [] result = new int[762];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\65\0\152\0\237\0\324\0\u0109\0\u013e\0\u0173"+
    "\0\u01a8\0\u01dd\0\u0212\0\u0247\0\u027c\0\u02b1\0\u02e6\0\u031b"+
    "\0\u0350\0\u0385\0\u03ba\0\u03ef\0\u0424\0\u0459\0\u048e\0\u04c3"+
    "\0\u04f8\0\u052d\0\u0562\0\u0597\0\u05cc\0\u0601\0\u0636\0\u066b"+
    "\0\u066b\0\u066b\0\u06a0\0\u06d5\0\u070a\0\u073f\0\u0774\0\u07a9"+
    "\0\u066b\0\u07de\0\u0813\0\u0848\0\u087d\0\u066b\0\u066b\0\u08b2"+
    "\0\u08e7\0\u066b\0\u066b\0\u091c\0\u0951\0\u0986\0\u09bb\0\u09f0"+
    "\0\u066b\0\u0a25\0\u066b\0\u066b\0\u0a5a\0\u0a8f\0\u066b\0\u0ac4"+
    "\0\u0af9\0\u066b\0\u066b\0\u0b2e\0\u0b63\0\u0b98\0\u0bcd\0\u0c02"+
    "\0\u0c37\0\u0c6c\0\u0ca1\0\u0cd6\0\u066b\0\u0d0b\0\u066b\0\u066b"+
    "\0\u0d40\0\u0d75\0\u0daa\0\u066b\0\u0ddf\0\u066b\0\u0e14\0\u0e49"+
    "\0\u0e7e\0\u0eb3\0\u0ee8\0\u0f1d\0\u0f52\0\u0f87\0\u066b\0\u0fbc"+
    "\0\u0ff1\0\u1026\0\u105b\0\u1090\0\u10c5\0\u066b\0\u066b\0\u066b"+
    "\0\u10fa\0\u112f\0\u066b\0\u1164\0\u066b\0\u1199\0\u066b\0\u11ce"+
    "\0\u1203\0\u066b\0\u1238\0\u126d\0\u066b\0\u12a2\0\u12d7\0\u130c"+
    "\0\u1341\0\u1376\0\u066b\0\u13ab\0\u066b\0\u066b\0\u066b\0\u13e0"+
    "\0\u1415\0\u144a\0\u147f\0\u14b4\0\u066b\0\u066b\0\u14e9\0\u066b"+
    "\0\u151e\0\u1553\0\u1588\0\u066b\0\u15bd\0\u15f2\0\u066b\0\u1627"+
    "\0\u165c\0\u066b\0\u1691\0\u16c6\0\u16fb\0\u1730\0\u1765\0\u066b"+
    "\0\u179a\0\u17cf\0\u066b\0\u066b\0\u066b\0\u1804\0\u1839\0\u186e"+
    "\0\u18a3\0\u18d8\0\u190d\0\u1942\0\u1977\0\u19ac\0\u19e1\0\u1a16"+
    "\0\u1a4b\0\u1a80\0\u1ab5\0\u1aea\0\u1b1f\0\u1b54\0\u1b89\0\u1bbe"+
    "\0\u1bf3\0\u1c28\0\u1c5d\0\u1c92\0\u1cc7\0\u1cfc\0\u1d31\0\u1d66"+
    "\0\u1d9b\0\u1dd0\0\u1e05\0\u1e3a\0\u1e6f\0\u1ea4\0\u1ed9\0\u1f0e"+
    "\0\u1f43\0\u1f78\0\u1fad\0\u1fe2\0\u0bcd\0\u0b98\0\u2017\0\u066b"+
    "\0\u0bcd\0\u204c\0\u2081\0\u20b6\0\u20eb\0\u2120\0\u066b\0\u2155"+
    "\0\u218a\0\u21bf\0\u21f4\0\u2229\0\u225e\0\u2293\0\u22c8\0\u22fd"+
    "\0\u0e7e\0\u0e49\0\u2332\0\u0e7e\0\u2367\0\u239c\0\u23d1\0\u2406"+
    "\0\u243b\0\u2470\0\u1026\0\u24a5\0\u24da\0\u250f\0\u2544\0\u2579"+
    "\0\u25ae\0\u25e3\0\u2618\0\u264d\0\u2682\0\u066b\0\u066b\0\u26b7"+
    "\0\u26ec\0\u2721\0\u2756\0\u278b\0\u27c0\0\u27f5\0\u282a\0\u285f"+
    "\0\u066b\0\u2894\0\u28c9\0\u28fe\0\u2933\0\u2968\0\u299d\0\u29d2"+
    "\0\u2a07\0\u2a3c\0\u2a71\0\u1553\0\u2aa6\0\u2adb\0\u2b10\0\u2b45"+
    "\0\u2b7a\0\u2baf\0\u2be4\0\u2c19\0\u2c4e\0\u2c83\0\u2cb8\0\u2ced"+
    "\0\u2d22\0\u066b\0\u0bcd\0\u2d57\0\u2d8c\0\u2dc1\0\u2df6\0\u2e2b"+
    "\0\u2e60\0\u2e95\0\u2eca\0\u2eff\0\u2f34\0\u2f69\0\u2f9e\0\u2fd3"+
    "\0\u3008\0\u303d\0\u3072\0\u30a7\0\u30dc\0\u3111\0\u3146\0\u317b"+
    "\0\u31b0\0\u31e5\0\u321a\0\u324f\0\u066b\0\u3284\0\u32b9\0\u32ee"+
    "\0\u3323\0\u066b\0\u3358\0\u338d\0\u33c2\0\u33f7\0\u342c\0\u3461"+
    "\0\u3496\0\u34cb\0\u066b\0\u3500\0\u3535\0\u356a\0\u359f\0\u066b"+
    "\0\u35d4\0\u3609\0\u363e\0\u3673\0\u36a8\0\u36dd\0\u3712\0\u3747"+
    "\0\u377c\0\u37b1\0\u37e6\0\u381b\0\u3850\0\u066b\0\u3885\0\u38ba"+
    "\0\u38ef\0\u3924\0\u3959\0\u398e\0\u39c3\0\u39f8\0\u3a2d\0\u3a62"+
    "\0\u3a97\0\u3acc\0\u3b01\0\u3b36\0\u3b6b\0\u3ba0\0\u3bd5\0\u3c0a"+
    "\0\u3c3f\0\u3c74\0\u3ca9\0\u3cde\0\u066b\0\u3d13\0\u3d48\0\u3d7d"+
    "\0\u3db2\0\u3de7\0\u3e1c\0\u3e51\0\u3e86\0\u3ebb\0\u3ef0\0\u3f25"+
    "\0\u3f5a\0\u3f8f\0\u3fc4\0\u3ff9\0\u402e\0\u4063\0\u4098\0\u40cd"+
    "\0\u4102\0\u4137\0\u416c\0\u066b\0\u41a1\0\u41d6\0\u420b\0\u4240"+
    "\0\u4275\0\u42aa\0\u42df\0\u4314\0\u4349\0\u437e\0\u43b3\0\u43e8"+
    "\0\u441d\0\u4452\0\u4487\0\u44bc\0\u44f1\0\u4526\0\u455b\0\u4590"+
    "\0\u066b\0\u45c5\0\u45fa\0\u462f\0\u4664\0\u4699\0\u066b\0\u066b"+
    "\0\u46ce\0\u066b\0\u066b\0\u4703\0\u066b\0\u4738\0\u476d\0\u066b"+
    "\0\u066b\0\u47a2\0\u066b\0\u066b\0\u47d7\0\u480c\0\u4841\0\u4876"+
    "\0\u48ab\0\u48e0\0\u4915\0\u494a\0\u0bcd\0\u497f\0\u49b4\0\u066b"+
    "\0\u49e9\0\u4a1e\0\u066b\0\u066b\0\u4a53\0\u4a88\0\u0e7e\0\u4abd"+
    "\0\u4af2\0\u0e7e\0\u4b27\0\u4b5c\0\u066b\0\u4b91\0\u4bc6\0\u4bfb"+
    "\0\u4c30\0\u066b\0\u4c65\0\u066b\0\u066b\0\u066b\0\u066b\0\u066b"+
    "\0\u4c9a\0\u4ccf\0\u066b\0\u066b\0\u4d04\0\u4d39\0\u4d6e\0\u4da3"+
    "\0\u4dd8\0\u4e0d\0\u4e42\0\u4e77\0\u066b\0\u066b\0\u4eac\0\u4ee1"+
    "\0\u066b\0\u4f16\0\u4f4b\0\u066b\0\u066b\0\u4f80\0\u4fb5\0\u4fea"+
    "\0\u066b\0\u501f\0\u066b\0\u5054\0\u066b\0\u5089\0\u50be\0\u50f3"+
    "\0\u5128\0\u515d\0\u5192\0\u51c7\0\u51fc\0\u0bcd\0\u066b\0\u5231"+
    "\0\u5266\0\u529b\0\u52d0\0\u5305\0\u533a\0\u536f\0\u066b\0\u53a4"+
    "\0\u066b\0\u53d9\0\u540e\0\u5443\0\u5478\0\u54ad\0\u54e2\0\u5517"+
    "\0\u554c\0\u066b\0\u066b\0\u5581\0\u55b6\0\u55eb\0\u5620\0\u5655"+
    "\0\u568a\0\u56bf\0\u56f4\0\u5729\0\u066b\0\u575e\0\u5793\0\u57c8"+
    "\0\u57fd\0\u0bcd\0\u5832\0\u5867\0\u066b\0\u0bcd\0\u0bcd\0\u066b"+
    "\0\u066b\0\u589c\0\u58d1\0\u5906\0\u0e7e\0\u593b\0\u066b\0\u0e7e"+
    "\0\u0e7e\0\u5970\0\u59a5\0\u59da\0\u066b\0\u5a0f\0\u5a44\0\u5a79"+
    "\0\u5aae\0\u5ae3\0\u066b\0\u5b18\0\u066b\0\u5b4d\0\u5b82\0\u066b"+
    "\0\u5bb7\0\u5bec\0\u5c21\0\u5c56\0\u5c8b\0\u5cc0\0\u5cf5\0\u0bcd"+
    "\0\u5d2a\0\u5d5f\0\u0bcd\0\u0bcd\0\u066b\0\u5d94\0\u066b\0\u066b"+
    "\0\u5dc9\0\u5dfe\0\u066b\0\u5e33\0\u5e68\0\u5e9d\0\u5ed2\0\u5f07"+
    "\0\u5f3c\0\u5f71\0\u5fa6\0\u5fdb\0\u6010\0\u6045\0\u607a\0\u066b"+
    "\0\u60af\0\u60e4\0\u6119\0\u614e\0\u6183\0\u61b8\0\u61ed\0\u6222"+
    "\0\u6257\0\u628c\0\u62c1\0\u62f6\0\u632b\0\u6360\0\u6395\0\u63ca"+
    "\0\u63ff\0\u6434\0\u6469\0\u649e\0\u64d3\0\u6508\0\u066b\0\u066b"+
    "\0\u066b\0\u653d\0\u6572\0\u65a7\0\u65dc\0\u6611\0\u6646\0\u667b"+
    "\0\u66b0\0\u66e5\0\u671a\0\u674f\0\u6784\0\u066b\0\u67b9\0\u67ee"+
    "\0\u6823\0\u6858\0\u688d\0\u68c2\0\u68f7\0\u692c\0\u6961\0\u6996"+
    "\0\u066b\0\u69cb\0\u6a00\0\u6a35\0\u6a6a\0\u066b\0\u6a9f\0\u6ad4"+
    "\0\u6b09\0\u6b3e\0\u6b73\0\u6ba8\0\u6bdd\0\u6c12\0\u6c47\0\u6c7c"+
    "\0\u6cb1\0\u6ce6\0\u6d1b\0\u6d50\0\u6d85\0\u6dba\0\u6def\0\u6e24"+
    "\0\u6e59\0\u6e8e\0\u6ec3\0\u6ef8\0\u6f2d\0\u6f62\0\u6f97\0\u6fcc"+
    "\0\u7001\0\u7036\0\u706b\0\u70a0\0\u70d5\0\u710a\0\u713f\0\u7174"+
    "\0\u71a9\0\u71de\0\u7213\0\u7248\0\u066b\0\u727d\0\u066b\0\u72b2"+
    "\0\u72e7\0\u731c\0\u7351\0\u7386\0\u066b\0\u0bcd\0\u066b\0\u0e7e"+
    "\0\u73bb\0\u73f0\0\u7425\0\u745a\0\u748f\0\u74c4\0\u74f9\0\u066b"+
    "\0\u752e\0\u7563\0\u7598\0\u75cd\0\u7602\0\u7637\0\u066b\0\u0bcd"+
    "\0\u766c\0\u76a1\0\u76d6\0\u770b\0\u7740\0\u066b\0\u7775\0\u77aa"+
    "\0\u066b\0\u066b\0\u77df\0\u066b\0\u7814\0\u7849\0\u787e\0\u066b"+
    "\0\u78b3\0\u066b\0\u066b\0\u78e8\0\u066b\0\u791d\0\u066b\0\u7952"+
    "\0\u066b\0\u066b\0\u066b\0\u066b\0\u066b\0\u7987\0\u79bc\0\u066b"+
    "\0\u79f1\0\u7a26\0\u066b\0\u7a5b\0\u066b\0\u7a90\0\u066b\0\u7ac5"+
    "\0\u7afa\0\u066b\0\u066b\0\u7b2f\0\u7b64\0\u7b99\0\u7bce\0\u7c03"+
    "\0\u066b\0\u066b";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[762];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\40\2\41\1\42\20\40\2\43\3\40\1\44\3\40"+
    "\1\45\2\40\1\46\1\47\1\50\1\51\2\40\1\52"+
    "\1\53\1\54\3\40\2\55\5\40\2\0\1\56\2\57"+
    "\1\42\11\56\1\40\1\60\4\56\1\40\41\56\1\40"+
    "\2\57\1\42\36\40\1\61\1\62\17\40\2\0\1\40"+
    "\2\63\1\42\4\40\1\64\21\40\1\65\2\40\1\66"+
    "\2\40\1\67\1\40\1\70\1\71\2\40\1\72\10\40"+
    "\1\73\1\74\2\40\2\0\1\40\2\57\1\42\4\40"+
    "\1\75\31\40\1\76\1\77\2\40\1\100\10\40\1\73"+
    "\1\74\2\40\2\0\1\40\2\57\1\42\36\40\1\101"+
    "\1\102\17\40\2\0\3\103\1\42\11\103\1\40\5\103"+
    "\1\40\41\103\1\40\2\57\1\42\36\40\1\104\20\40"+
    "\2\0\1\40\2\57\1\42\4\40\1\105\1\106\5\40"+
    "\1\107\4\40\1\110\1\111\6\107\1\112\1\113\4\107"+
    "\1\114\1\115\6\107\1\116\1\107\1\40\2\107\1\117"+
    "\1\120\1\40\1\107\2\0\1\40\2\57\1\42\4\40"+
    "\1\105\13\40\2\121\6\40\1\122\5\40\1\123\1\124"+
    "\6\40\1\125\4\40\1\117\1\120\2\40\2\0\1\40"+
    "\2\126\1\42\20\126\1\40\27\126\1\40\4\126\1\40"+
    "\2\126\1\0\1\40\2\57\1\42\4\40\1\127\1\130"+
    "\5\40\1\131\4\40\1\110\1\132\4\131\1\133\1\131"+
    "\1\134\1\135\4\131\1\136\1\137\6\131\1\140\1\131"+
    "\1\40\2\131\1\117\1\120\1\40\1\131\2\0\1\40"+
    "\2\57\1\42\5\40\1\141\5\40\1\142\5\40\15\142"+
    "\1\143\1\40\2\142\1\144\5\142\1\40\2\142\3\40"+
    "\1\142\2\0\1\40\2\57\1\42\4\40\1\127\1\130"+
    "\5\40\1\131\4\40\1\110\1\132\4\131\1\133\1\131"+
    "\1\134\1\135\4\131\1\145\1\146\6\131\1\140\1\131"+
    "\1\40\2\131\1\117\1\120\1\40\1\131\2\0\1\40"+
    "\2\147\1\42\20\150\1\40\27\150\1\40\4\150\1\40"+
    "\2\150\1\0\1\40\2\57\1\42\4\40\1\127\13\40"+
    "\2\110\4\40\1\151\1\40\1\122\5\40\1\152\1\153"+
    "\6\40\1\125\4\40\1\117\1\120\2\40\2\0\1\40"+
    "\2\57\1\42\4\40\1\105\13\40\2\110\6\40\1\122"+
    "\5\40\1\154\1\155\6\40\1\125\4\40\1\117\1\120"+
    "\2\40\2\0\1\40\2\57\1\42\36\40\1\156\1\157"+
    "\2\40\1\160\14\40\2\0\1\40\2\57\1\42\4\40"+
    "\1\105\13\40\2\110\6\40\1\122\5\40\1\161\1\162"+
    "\6\40\1\125\4\40\1\117\1\120\2\40\2\0\1\40"+
    "\2\57\1\42\31\40\1\163\4\40\1\164\1\165\2\40"+
    "\1\166\14\40\2\0\1\40\2\57\1\42\4\40\1\167"+
    "\13\40\2\170\6\40\1\171\5\40\1\172\1\173\6\40"+
    "\1\174\4\40\1\175\1\176\2\40\2\0\1\40\2\147"+
    "\1\42\20\177\1\40\27\177\1\40\4\177\1\40\2\177"+
    "\1\0\1\40\2\57\1\42\20\40\2\200\14\40\1\201"+
    "\3\40\1\202\1\203\13\40\2\0\1\40\2\57\1\42"+
    "\4\40\1\127\1\130\5\40\1\131\4\40\1\110\1\132"+
    "\4\131\1\133\1\131\1\134\1\135\4\131\1\204\1\205"+
    "\6\131\1\140\1\131\1\40\2\131\1\117\1\120\1\40"+
    "\1\131\2\0\1\40\2\147\1\42\20\206\1\40\27\206"+
    "\1\40\4\206\1\40\2\206\1\0\1\40\2\57\1\42"+
    "\4\40\1\127\1\130\5\40\1\131\4\40\1\110\1\132"+
    "\4\131\1\133\1\131\1\134\1\135\4\131\1\207\1\210"+
    "\6\131\1\140\1\131\1\40\2\131\1\117\1\120\1\40"+
    "\1\131\2\0\1\40\2\57\1\42\5\40\1\211\5\40"+
    "\1\212\5\40\15\212\1\213\1\214\2\212\1\215\5\212"+
    "\1\40\2\212\3\40\1\212\2\0\1\40\2\57\1\42"+
    "\36\40\1\216\1\217\2\40\1\220\14\40\2\0\1\40"+
    "\2\57\1\42\4\40\1\105\13\40\2\110\6\40\1\122"+
    "\5\40\1\221\1\222\6\40\1\125\4\40\1\117\1\120"+
    "\2\40\2\0\1\40\2\57\1\42\4\40\1\223\1\106"+
    "\5\40\1\107\4\40\1\224\1\225\6\107\1\226\1\113"+
    "\4\107\1\227\1\230\6\107\1\231\1\107\1\40\1\107"+
    "\1\232\1\233\1\234\1\40\1\107\2\0\1\40\2\235"+
    "\1\42\20\235\1\40\27\235\1\40\4\235\1\40\2\235"+
    "\132\0\1\236\57\0\1\237\55\0\1\240\3\0\1\241"+
    "\1\0\1\242\57\0\1\243\2\0\1\244\100\0\1\245"+
    "\37\0\1\246\65\0\2\247\100\0\1\250\57\0\1\251"+
    "\64\0\1\252\13\0\1\253\37\0\1\254\64\0\1\255"+
    "\52\0\1\256\5\0\1\257\5\0\15\257\2\0\10\257"+
    "\1\0\2\257\3\0\1\257\32\0\1\260\71\0\1\261"+
    "\15\0\1\262\35\0\2\263\62\0\1\264\65\0\2\265"+
    "\43\0\1\266\4\0\1\267\5\0\1\270\2\0\1\271"+
    "\2\0\15\270\2\0\10\270\1\0\2\270\3\0\1\270"+
    "\25\0\1\272\102\0\1\273\46\0\1\274\64\0\1\275"+
    "\45\0\1\276\4\0\1\277\5\0\1\300\4\0\1\301"+
    "\1\302\5\300\1\303\1\300\1\304\4\300\2\0\10\300"+
    "\1\0\2\300\3\0\1\300\14\0\1\305\56\0\1\305"+
    "\4\0\1\306\1\0\1\307\2\0\2\305\1\0\1\305"+
    "\3\0\15\305\2\0\10\305\1\0\2\305\3\0\1\305"+
    "\35\0\1\310\35\0\1\305\4\0\1\306\1\0\1\307"+
    "\2\0\2\305\1\0\1\305\3\0\6\305\1\311\6\305"+
    "\2\0\10\305\1\0\2\305\3\0\1\305\6\0\1\305"+
    "\4\0\1\306\1\0\1\307\2\0\2\305\1\0\1\305"+
    "\3\0\12\305\1\312\2\305\2\0\1\305\1\313\6\305"+
    "\1\0\2\305\3\0\1\305\6\0\1\305\4\0\1\306"+
    "\1\0\1\307\2\0\2\305\1\0\1\305\3\0\15\305"+
    "\2\0\1\305\1\314\6\305\1\0\2\305\3\0\1\305"+
    "\25\0\1\315\45\0\1\305\4\0\1\306\1\0\1\307"+
    "\2\0\2\305\1\0\1\305\3\0\5\305\1\316\7\305"+
    "\2\0\10\305\1\0\2\305\3\0\1\305\35\0\1\317"+
    "\70\0\1\320\5\0\1\321\42\0\1\322\73\0\1\323"+
    "\36\0\1\276\4\0\1\324\5\0\1\325\4\0\1\301"+
    "\1\326\5\325\1\327\1\325\1\330\4\325\2\0\10\325"+
    "\1\0\2\325\3\0\1\325\14\0\1\331\56\0\1\331"+
    "\4\0\1\332\1\0\1\333\2\0\2\331\1\0\1\331"+
    "\3\0\15\331\2\0\10\331\1\0\2\331\3\0\1\331"+
    "\6\0\1\331\4\0\1\332\1\0\1\333\2\0\2\331"+
    "\1\0\1\331\3\0\6\331\1\334\6\331\2\0\10\331"+
    "\1\0\2\331\3\0\1\331\6\0\1\331\4\0\1\332"+
    "\1\0\1\333\2\0\2\331\1\0\1\331\3\0\3\331"+
    "\1\335\11\331\2\0\10\331\1\0\2\331\3\0\1\331"+
    "\6\0\1\331\4\0\1\332\1\0\1\333\2\0\2\331"+
    "\1\0\1\331\3\0\12\331\1\336\2\331\2\0\1\331"+
    "\1\337\6\331\1\0\2\331\3\0\1\331\6\0\1\331"+
    "\4\0\1\332\1\0\1\333\2\0\2\331\1\0\1\331"+
    "\3\0\15\331\2\0\1\331\1\340\6\331\1\0\2\331"+
    "\3\0\1\331\25\0\1\341\45\0\1\331\4\0\1\332"+
    "\1\0\1\333\2\0\2\331\1\0\1\331\3\0\5\331"+
    "\1\342\7\331\2\0\10\331\1\0\2\331\3\0\1\331"+
    "\14\0\1\343\61\0\1\344\100\0\1\345\50\0\1\344"+
    "\14\0\2\346\62\0\1\347\71\0\1\350\57\0\1\351"+
    "\64\0\1\352\64\0\1\353\65\0\2\354\62\0\1\355"+
    "\101\0\1\356\6\0\1\357\40\0\1\360\65\0\2\361"+
    "\43\0\1\362\4\0\1\363\5\0\1\364\4\0\1\365"+
    "\1\366\5\364\1\367\1\364\1\370\4\364\2\0\10\364"+
    "\1\0\2\364\3\0\1\364\35\0\1\371\70\0\1\372"+
    "\5\0\1\373\42\0\1\374\73\0\1\375\76\0\1\376"+
    "\43\0\1\377\65\0\2\u0100\100\0\1\u0101\46\0\1\u0102"+
    "\64\0\1\u0103\53\0\1\u0104\61\0\1\u0105\100\0\1\u0106"+
    "\50\0\1\u0105\14\0\2\u0107\62\0\1\u0108\65\0\2\u0109"+
    "\62\0\1\u010a\45\0\1\u010b\4\0\1\u010c\5\0\1\u010d"+
    "\4\0\1\u010e\1\u010f\5\u010d\1\u0110\1\u010d\1\u0111\4\u010d"+
    "\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d\35\0\1\u0112"+
    "\35\0\1\305\4\0\1\306\1\0\1\307\2\0\2\305"+
    "\1\0\1\305\3\0\6\305\1\u0113\6\305\2\0\10\305"+
    "\1\0\2\305\3\0\1\305\6\0\1\305\4\0\1\306"+
    "\1\0\1\307\2\0\2\305\1\0\1\305\3\0\12\305"+
    "\1\u0114\2\305\2\0\1\305\1\u0115\6\305\1\0\2\305"+
    "\3\0\1\305\25\0\1\u0116\45\0\1\305\4\0\1\306"+
    "\1\0\1\307\2\0\2\305\1\0\1\305\3\0\5\305"+
    "\1\u0117\7\305\2\0\10\305\1\0\2\305\3\0\1\305"+
    "\6\0\1\305\4\0\1\306\1\0\1\307\2\0\2\305"+
    "\1\0\1\305\3\0\7\305\1\u0118\5\305\2\0\10\305"+
    "\1\0\2\305\3\0\1\305\36\0\1\u0119\65\0\1\u011a"+
    "\7\0\1\u011b\50\0\1\u011c\106\0\1\u011d\51\0\1\u011e"+
    "\75\0\1\u011f\62\0\1\u0120\52\0\1\u0121\52\0\1\u0122"+
    "\100\0\1\u0123\65\0\1\u0124\63\0\1\u0125\72\0\1\u0126"+
    "\43\0\2\u0127\62\0\1\u0128\64\0\1\u0129\53\0\1\257"+
    "\61\0\1\u012a\115\0\1\u012b\100\0\2\u012c\63\0\2\u012d"+
    "\47\0\1\u012e\47\0\1\u012f\100\0\1\u0130\31\0\1\266"+
    "\1\u0131\2\0\1\u0132\66\0\1\270\56\0\1\270\3\0"+
    "\1\u0132\1\267\4\0\2\270\1\0\1\270\3\0\15\270"+
    "\2\0\10\270\1\0\2\270\3\0\1\270\6\0\1\u0133"+
    "\4\0\1\u0134\5\0\1\u0135\5\0\15\u0135\2\0\10\u0135"+
    "\1\0\2\u0135\3\0\1\u0135\25\0\1\u0136\100\0\1\u0137"+
    "\50\0\1\u0138\64\0\1\u0139\45\0\1\276\1\u013a\2\0"+
    "\1\u013b\66\0\1\300\56\0\1\300\3\0\1\u013b\1\277"+
    "\4\0\2\300\1\0\1\300\3\0\15\300\2\0\10\300"+
    "\1\0\2\300\3\0\1\300\30\0\1\u013c\42\0\1\300"+
    "\3\0\1\u013b\1\277\4\0\2\300\1\0\1\300\3\0"+
    "\1\300\1\u013d\13\300\2\0\10\300\1\0\2\300\3\0"+
    "\1\300\6\0\1\300\3\0\1\u013b\1\277\4\0\2\300"+
    "\1\0\1\300\3\0\4\300\1\u013e\10\300\2\0\10\300"+
    "\1\0\2\300\3\0\1\300\6\0\1\300\3\0\1\u013b"+
    "\1\277\4\0\2\300\1\0\1\300\3\0\4\300\1\u013f"+
    "\10\300\2\0\10\300\1\0\2\300\3\0\1\300\16\0"+
    "\1\u0140\54\0\1\305\4\0\1\306\1\0\1\307\2\0"+
    "\2\305\1\0\1\305\3\0\10\305\1\u0141\4\305\2\0"+
    "\10\305\1\0\2\305\3\0\1\305\6\0\1\305\4\0"+
    "\1\306\1\0\1\307\2\0\2\305\1\0\1\305\2\0"+
    "\1\u0142\1\u0143\12\305\1\u0144\1\305\2\0\10\305\1\0"+
    "\2\305\3\0\1\305\6\0\1\305\4\0\1\306\1\0"+
    "\1\307\2\0\2\305\1\0\1\305\2\0\1\u0145\1\u0146"+
    "\14\305\2\0\10\305\1\0\2\305\3\0\1\305\25\0"+
    "\1\u0147\45\0\1\305\4\0\1\306\1\0\1\307\2\0"+
    "\2\305\1\0\1\305\3\0\3\305\1\u0148\11\305\2\0"+
    "\10\305\1\0\2\305\3\0\1\305\37\0\1\u0149\53\0"+
    "\2\u0142\12\0\1\u014a\47\0\1\u014b\71\0\1\u014c\46\0"+
    "\1\325\56\0\1\300\2\0\1\u014d\1\u013b\1\277\4\0"+
    "\2\300\1\0\1\300\3\0\15\300\2\0\10\300\1\0"+
    "\2\300\3\0\1\300\6\0\1\300\2\0\1\u014d\1\u013b"+
    "\1\277\4\0\2\300\1\0\1\300\3\0\1\300\1\u013d"+
    "\13\300\2\0\10\300\1\0\2\300\3\0\1\300\6\0"+
    "\1\300\2\0\1\u014d\1\u013b\1\277\4\0\2\300\1\0"+
    "\1\300\3\0\4\300\1\u013e\10\300\2\0\10\300\1\0"+
    "\2\300\3\0\1\300\6\0\1\300\2\0\1\u014d\1\u013b"+
    "\1\277\4\0\2\300\1\0\1\300\3\0\4\300\1\u013f"+
    "\10\300\2\0\10\300\1\0\2\300\3\0\1\300\16\0"+
    "\1\u014e\54\0\1\331\4\0\1\332\1\0\1\333\2\0"+
    "\2\331\1\0\1\331\3\0\13\331\1\u014f\1\331\2\0"+
    "\10\331\1\0\2\331\3\0\1\331\6\0\1\331\4\0"+
    "\1\332\1\0\1\333\2\0\2\331\1\0\1\331\3\0"+
    "\10\331\1\u0150\4\331\2\0\10\331\1\0\2\331\3\0"+
    "\1\331\6\0\1\331\4\0\1\332\1\0\1\333\2\0"+
    "\2\331\1\0\1\331\2\0\1\u0142\1\u0151\12\331\1\u0152"+
    "\1\331\2\0\10\331\1\0\2\331\3\0\1\331\6\0"+
    "\1\331\4\0\1\332\1\0\1\333\2\0\2\331\1\0"+
    "\1\331\2\0\1\u0153\1\u0154\14\331\2\0\10\331\1\0"+
    "\2\331\3\0\1\331\25\0\1\u0155\45\0\1\331\4\0"+
    "\1\332\1\0\1\333\2\0\2\331\1\0\1\331\3\0"+
    "\3\331\1\u0156\11\331\2\0\10\331\1\0\2\331\3\0"+
    "\1\331\22\0\1\u0157\67\0\1\u0158\100\0\1\u0159\50\0"+
    "\1\u015a\101\0\1\u015b\47\0\1\u015c\64\0\1\u015d\64\0"+
    "\1\u015e\100\0\1\u015f\5\0\1\u0160\42\0\1\u0161\64\0"+
    "\1\u0162\100\0\1\u0163\31\0\1\362\1\u0164\2\0\1\u0165"+
    "\66\0\1\364\56\0\1\364\3\0\1\u0165\1\363\4\0"+
    "\2\364\1\0\1\364\3\0\15\364\2\0\10\364\1\0"+
    "\2\364\3\0\1\364\30\0\1\u0166\42\0\1\364\3\0"+
    "\1\u0165\1\363\4\0\2\364\1\0\1\364\3\0\1\364"+
    "\1\u0167\13\364\2\0\10\364\1\0\2\364\3\0\1\364"+
    "\6\0\1\364\3\0\1\u0165\1\363\4\0\2\364\1\0"+
    "\1\364\3\0\4\364\1\u0168\10\364\2\0\10\364\1\0"+
    "\2\364\3\0\1\364\6\0\1\364\3\0\1\u0165\1\363"+
    "\4\0\2\364\1\0\1\364\3\0\4\364\1\u0169\10\364"+
    "\2\0\10\364\1\0\2\364\3\0\1\364\37\0\1\u016a"+
    "\53\0\2\u016b\12\0\1\u016c\47\0\1\u016d\71\0\1\u016e"+
    "\70\0\1\u016f\53\0\1\u0170\100\0\1\u0171\65\0\1\u0172"+
    "\47\0\1\u0173\64\0\1\u0174\61\0\1\u0175\67\0\1\u0176"+
    "\100\0\1\u0177\50\0\1\u0178\100\0\1\u0179\50\0\1\u017a"+
    "\45\0\1\u010b\1\u017b\2\0\1\u017c\66\0\1\u010d\56\0"+
    "\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d"+
    "\3\0\15\u010d\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d"+
    "\30\0\1\u017d\42\0\1\u010d\3\0\1\u017c\1\u010c\4\0"+
    "\2\u010d\1\0\1\u010d\3\0\1\u010d\1\u017e\13\u010d\2\0"+
    "\10\u010d\1\0\2\u010d\3\0\1\u010d\6\0\1\u010d\3\0"+
    "\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0\4\u010d"+
    "\1\u017f\10\u010d\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d"+
    "\6\0\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d\1\0"+
    "\1\u010d\3\0\4\u010d\1\u0180\10\u010d\2\0\10\u010d\1\0"+
    "\2\u010d\3\0\1\u010d\6\0\1\305\4\0\1\306\1\0"+
    "\1\307\2\0\2\305\1\0\1\305\3\0\10\305\1\u0181"+
    "\4\305\2\0\10\305\1\0\2\305\3\0\1\305\6\0"+
    "\1\305\4\0\1\306\1\0\1\307\2\0\2\305\1\0"+
    "\1\305\2\0\1\u0182\1\u0183\12\305\1\u0184\1\305\2\0"+
    "\10\305\1\0\2\305\3\0\1\305\25\0\1\u0185\45\0"+
    "\1\305\4\0\1\306\1\0\1\307\2\0\2\305\1\0"+
    "\1\305\3\0\3\305\1\u0186\11\305\2\0\10\305\1\0"+
    "\2\305\3\0\1\305\6\0\1\305\4\0\1\306\1\0"+
    "\1\307\2\0\2\305\1\0\1\305\3\0\15\305\2\0"+
    "\1\305\1\u0187\6\305\1\0\2\305\3\0\1\305\54\0"+
    "\1\u0188\46\0\1\u0189\64\0\1\u018a\62\0\1\u018b\66\0"+
    "\1\u018c\74\0\1\u018d\60\0\1\u018e\71\0\1\u018f\43\0"+
    "\2\u0190\55\0\1\u0191\64\0\1\u0192\107\0\1\u0193\54\0"+
    "\1\u0194\73\0\1\u0195\63\0\1\u0196\70\0\1\u0197\37\0"+
    "\1\u0198\66\0\1\u0199\100\0\1\u019a\104\0\2\u019b\37\0"+
    "\1\u019c\52\0\1\u019d\64\0\1\u019e\52\0\1\u019f\64\0"+
    "\1\u0133\3\0\1\u01a0\1\u0134\5\0\1\u0135\5\0\15\u0135"+
    "\2\0\10\u0135\1\0\2\u0135\3\0\1\u0135\14\0\1\u0135"+
    "\56\0\1\u0135\3\0\1\u01a0\1\u0134\4\0\2\u0135\1\0"+
    "\1\u0135\3\0\15\u0135\2\0\10\u0135\1\0\2\u0135\3\0"+
    "\1\u0135\20\0\1\u01a1\101\0\1\u01a2\47\0\1\u01a3\64\0"+
    "\1\u01a4\52\0\1\u01a5\107\0\1\u01a6\41\0\1\300\3\0"+
    "\1\u013b\1\277\4\0\2\300\1\0\1\300\3\0\2\300"+
    "\1\u01a7\12\300\2\0\10\300\1\0\2\300\3\0\1\300"+
    "\6\0\1\300\3\0\1\u013b\1\277\4\0\2\300\1\0"+
    "\1\300\3\0\5\300\1\u01a8\7\300\2\0\10\300\1\0"+
    "\2\300\3\0\1\300\6\0\1\300\3\0\1\u013b\1\277"+
    "\4\0\2\300\1\0\1\300\3\0\12\300\1\u01a9\2\300"+
    "\2\0\10\300\1\0\2\300\3\0\1\300\6\0\1\305"+
    "\4\0\1\306\1\0\1\307\2\0\2\305\1\0\1\305"+
    "\3\0\11\305\1\u01aa\3\305\2\0\10\305\1\0\2\305"+
    "\3\0\1\305\41\0\1\u01ab\31\0\1\305\4\0\1\306"+
    "\1\0\1\307\2\0\2\305\1\0\1\305\3\0\12\305"+
    "\1\u01ac\2\305\2\0\10\305\1\0\2\305\3\0\1\305"+
    "\6\0\1\305\4\0\1\306\1\0\1\307\2\0\2\305"+
    "\1\0\1\305\3\0\14\305\1\u01ad\2\0\10\305\1\0"+
    "\2\305\3\0\1\305\37\0\1\u01ae\33\0\1\305\4\0"+
    "\1\306\1\0\1\307\2\0\2\305\1\0\1\305\3\0"+
    "\10\305\1\u01af\4\305\2\0\10\305\1\0\2\305\3\0"+
    "\1\305\20\0\1\u01b0\52\0\1\305\4\0\1\306\1\0"+
    "\1\307\2\0\2\305\1\0\1\305\3\0\15\305\2\0"+
    "\4\305\1\u01b1\3\305\1\0\2\305\3\0\1\305\40\0"+
    "\1\u01b2\67\0\1\u01b3\41\0\1\u01b4\116\0\1\u01b5\34\0"+
    "\1\u01b6\50\0\1\331\4\0\1\332\1\0\1\333\2\0"+
    "\2\331\1\0\1\331\3\0\7\331\1\u01b7\5\331\2\0"+
    "\10\331\1\0\2\331\3\0\1\331\6\0\1\331\4\0"+
    "\1\332\1\0\1\333\2\0\2\331\1\0\1\331\3\0"+
    "\11\331\1\u01b8\3\331\2\0\10\331\1\0\2\331\3\0"+
    "\1\331\6\0\1\331\4\0\1\332\1\0\1\333\2\0"+
    "\2\331\1\0\1\331\3\0\12\331\1\u01b9\2\331\2\0"+
    "\10\331\1\0\2\331\3\0\1\331\6\0\1\331\4\0"+
    "\1\332\1\0\1\333\2\0\2\331\1\0\1\331\3\0"+
    "\14\331\1\u01ba\2\0\10\331\1\0\2\331\3\0\1\331"+
    "\37\0\1\u01bb\33\0\1\331\4\0\1\332\1\0\1\333"+
    "\2\0\2\331\1\0\1\331\3\0\10\331\1\u01bc\4\331"+
    "\2\0\10\331\1\0\2\331\3\0\1\331\20\0\1\u01bd"+
    "\52\0\1\331\4\0\1\332\1\0\1\333\2\0\2\331"+
    "\1\0\1\331\3\0\15\331\2\0\4\331\1\u01be\3\331"+
    "\1\0\2\331\3\0\1\331\4\0\1\u01bf\6\0\1\u01c0"+
    "\5\0\1\u01c1\5\0\15\u01c1\2\0\10\u01c1\1\0\2\u01c1"+
    "\3\0\1\u01c1\20\0\1\u01c2\64\0\1\u01c3\64\0\1\u01c4"+
    "\102\0\1\u01c5\46\0\1\u01c6\64\0\1\u01c7\64\0\1\u01c8"+
    "\64\0\1\u01c9\67\0\1\u01ca\61\0\1\u01cb\64\0\1\u01cc"+
    "\64\0\1\u01cd\52\0\1\u01ce\107\0\1\u01cf\41\0\1\364"+
    "\3\0\1\u0165\1\363\4\0\2\364\1\0\1\364\3\0"+
    "\2\364\1\u01d0\12\364\2\0\10\364\1\0\2\364\3\0"+
    "\1\364\6\0\1\364\3\0\1\u0165\1\363\4\0\2\364"+
    "\1\0\1\364\3\0\5\364\1\u01d1\7\364\2\0\10\364"+
    "\1\0\2\364\3\0\1\364\6\0\1\364\3\0\1\u0165"+
    "\1\363\4\0\2\364\1\0\1\364\3\0\12\364\1\u01d2"+
    "\2\364\2\0\10\364\1\0\2\364\3\0\1\364\40\0"+
    "\1\u01d3\65\0\1\u01d4\66\0\1\u01d5\41\0\1\u01d6\116\0"+
    "\1\u01d7\66\0\1\u01d8\30\0\1\u01d9\64\0\1\u01da\107\0"+
    "\1\u01db\41\0\1\u01dc\64\0\1\u01dd\50\0\1\u01de\6\0"+
    "\1\u01df\5\0\1\u01e0\5\0\15\u01e0\2\0\10\u01e0\1\0"+
    "\2\u01e0\3\0\1\u01e0\20\0\1\u01e1\64\0\1\u01e2\64\0"+
    "\1\u01e3\64\0\1\u01e4\64\0\1\u01e5\52\0\1\u01e6\107\0"+
    "\1\u01e7\41\0\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d"+
    "\1\0\1\u010d\3\0\2\u010d\1\u01e8\12\u010d\2\0\10\u010d"+
    "\1\0\2\u010d\3\0\1\u010d\6\0\1\u010d\3\0\1\u017c"+
    "\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0\5\u010d\1\u01e9"+
    "\7\u010d\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d\6\0"+
    "\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d"+
    "\3\0\12\u010d\1\u01ea\2\u010d\2\0\10\u010d\1\0\2\u010d"+
    "\3\0\1\u010d\6\0\1\305\4\0\1\306\1\0\1\307"+
    "\2\0\2\305\1\0\1\305\3\0\11\305\1\u01eb\3\305"+
    "\2\0\10\305\1\0\2\305\3\0\1\305\41\0\1\u01ec"+
    "\31\0\1\305\4\0\1\306\1\0\1\307\2\0\2\305"+
    "\1\0\1\305\3\0\12\305\1\u01ed\2\305\2\0\10\305"+
    "\1\0\2\305\3\0\1\305\6\0\1\305\4\0\1\306"+
    "\1\0\1\307\2\0\2\305\1\0\1\305\3\0\14\305"+
    "\1\u01ee\2\0\10\305\1\0\2\305\3\0\1\305\20\0"+
    "\1\u01ef\52\0\1\305\4\0\1\306\1\0\1\307\2\0"+
    "\2\305\1\0\1\305\3\0\15\305\2\0\4\305\1\u01f0"+
    "\3\305\1\0\2\305\3\0\1\305\6\0\1\305\4\0"+
    "\1\306\1\0\1\307\2\0\2\305\1\0\1\305\3\0"+
    "\14\305\1\u01f1\2\0\10\305\1\0\2\305\3\0\1\305"+
    "\33\0\1\u01f2\102\0\1\u01f3\52\0\1\u01f4\77\0\1\u01f5"+
    "\35\0\1\u01f6\110\0\1\u01f7\60\0\1\u01f8\57\0\1\u01f9"+
    "\71\0\1\u01fa\54\0\1\u01fb\3\0\1\u01fc\2\0\1\u01fd"+
    "\1\u01fe\5\0\1\u01ff\1\u0200\3\0\2\u0201\46\0\1\u0202"+
    "\72\0\1\u0203\60\0\1\u0204\62\0\1\u0205\27\0\1\u0206"+
    "\6\0\1\u0207\5\0\1\u0208\5\0\15\u0208\2\0\10\u0208"+
    "\1\0\2\u0208\3\0\1\u0208\47\0\1\u0209\50\0\1\u020a"+
    "\3\0\1\u020b\2\0\1\u020c\30\0\1\u019f\3\0\1\u0132"+
    "\115\0\1\u020d\27\0\1\u01a5\3\0\1\u013b\104\0\1\u020e"+
    "\40\0\1\300\3\0\1\u013b\1\277\4\0\2\300\1\0"+
    "\1\300\3\0\3\300\1\u020f\11\300\2\0\10\300\1\0"+
    "\2\300\3\0\1\300\6\0\1\300\3\0\1\u013b\1\277"+
    "\4\0\2\300\1\0\1\300\3\0\4\300\1\u0210\10\300"+
    "\2\0\10\300\1\0\2\300\3\0\1\300\6\0\1\300"+
    "\3\0\1\u013b\1\277\4\0\2\300\1\0\1\300\3\0"+
    "\13\300\1\u0211\1\300\2\0\10\300\1\0\2\300\3\0"+
    "\1\300\6\0\1\305\4\0\1\306\1\0\1\307\2\0"+
    "\2\305\1\0\1\305\3\0\14\305\1\u0212\2\0\10\305"+
    "\1\0\2\305\3\0\1\305\33\0\1\u0213\37\0\1\305"+
    "\4\0\1\306\1\0\1\307\2\0\2\305\1\0\1\305"+
    "\3\0\4\305\1\u0214\10\305\2\0\10\305\1\0\2\305"+
    "\3\0\1\305\63\0\2\u0215\6\0\1\305\4\0\1\306"+
    "\1\0\1\307\2\0\2\305\1\0\1\305\3\0\15\305"+
    "\2\0\10\305\1\0\2\305\2\0\1\u0215\1\u0216\6\0"+
    "\1\305\4\0\1\306\1\0\1\307\2\0\2\305\1\0"+
    "\1\305\3\0\14\305\1\u0217\2\0\10\305\1\0\2\305"+
    "\3\0\1\305\43\0\1\u0218\64\0\1\u0219\25\0\1\u021a"+
    "\6\0\1\u021b\5\0\1\u021c\5\0\15\u021c\2\0\10\u021c"+
    "\1\0\2\u021c\3\0\1\u021c\6\0\1\331\4\0\1\332"+
    "\1\0\1\333\2\0\2\331\1\0\1\331\3\0\14\331"+
    "\1\u021d\2\0\10\331\1\0\2\331\3\0\1\331\6\0"+
    "\1\331\4\0\1\332\1\0\1\333\2\0\2\331\1\0"+
    "\1\331\3\0\4\331\1\u021e\10\331\2\0\10\331\1\0"+
    "\2\331\3\0\1\331\63\0\2\u021f\6\0\1\331\4\0"+
    "\1\332\1\0\1\333\2\0\2\331\1\0\1\331\3\0"+
    "\15\331\2\0\10\331\1\0\2\331\2\0\1\u021f\1\u0220"+
    "\6\0\1\331\4\0\1\332\1\0\1\333\2\0\2\331"+
    "\1\0\1\331\3\0\14\331\1\u0221\2\0\10\331\1\0"+
    "\2\331\3\0\1\331\4\0\1\u01bf\2\0\1\u0222\3\0"+
    "\1\u01c0\5\0\1\u01c1\1\u0157\4\0\15\u01c1\2\0\10\u01c1"+
    "\1\0\2\u01c1\3\0\1\u01c1\14\0\1\u01c1\54\0\1\u01bf"+
    "\1\0\1\u01c1\1\u0222\3\0\1\u01c0\4\0\2\u01c1\1\u0157"+
    "\1\u01c1\3\0\15\u01c1\2\0\10\u01c1\1\0\2\u01c1\3\0"+
    "\1\u01c1\26\0\2\u0223\77\0\1\u0224\64\0\1\u0225\72\0"+
    "\1\u0226\22\0\1\u01ce\3\0\1\u0165\104\0\1\u0227\40\0"+
    "\1\364\3\0\1\u0165\1\363\4\0\2\364\1\0\1\364"+
    "\3\0\3\364\1\u0228\11\364\2\0\10\364\1\0\2\364"+
    "\3\0\1\364\6\0\1\364\3\0\1\u0165\1\363\4\0"+
    "\2\364\1\0\1\364\3\0\4\364\1\u0229\10\364\2\0"+
    "\10\364\1\0\2\364\3\0\1\364\6\0\1\364\3\0"+
    "\1\u0165\1\363\4\0\2\364\1\0\1\364\3\0\13\364"+
    "\1\u022a\1\364\2\0\10\364\1\0\2\364\3\0\1\364"+
    "\43\0\1\u022b\54\0\1\u022c\74\0\1\u022d\54\0\1\u022e"+
    "\70\0\1\u022f\66\0\1\u0230\27\0\1\u01de\2\0\1\u0231"+
    "\3\0\1\u01df\5\0\1\u01e0\1\u0175\4\0\15\u01e0\2\0"+
    "\10\u01e0\1\0\2\u01e0\3\0\1\u01e0\14\0\1\u01e0\54\0"+
    "\1\u01de\1\0\1\u01e0\1\u0231\3\0\1\u01df\4\0\2\u01e0"+
    "\1\u0175\1\u01e0\3\0\15\u01e0\2\0\10\u01e0\1\0\2\u01e0"+
    "\3\0\1\u01e0\26\0\2\u0232\106\0\1\u0233\21\0\1\u01e6"+
    "\3\0\1\u017c\104\0\1\u0234\40\0\1\u010d\3\0\1\u017c"+
    "\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0\3\u010d\1\u0235"+
    "\11\u010d\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d\6\0"+
    "\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d"+
    "\3\0\4\u010d\1\u0236\10\u010d\2\0\10\u010d\1\0\2\u010d"+
    "\3\0\1\u010d\6\0\1\u010d\3\0\1\u017c\1\u010c\4\0"+
    "\2\u010d\1\0\1\u010d\3\0\13\u010d\1\u0237\1\u010d\2\0"+
    "\10\u010d\1\0\2\u010d\3\0\1\u010d\6\0\1\305\4\0"+
    "\1\306\1\0\1\307\2\0\2\305\1\0\1\305\3\0"+
    "\14\305\1\u0238\2\0\10\305\1\0\2\305\3\0\1\305"+
    "\33\0\1\u0239\37\0\1\305\4\0\1\306\1\0\1\307"+
    "\2\0\2\305\1\0\1\305\3\0\4\305\1\u023a\10\305"+
    "\2\0\10\305\1\0\2\305\3\0\1\305\6\0\1\305"+
    "\4\0\1\306\1\0\1\307\2\0\2\305\1\0\1\305"+
    "\3\0\14\305\1\u023b\2\0\10\305\1\0\2\305\3\0"+
    "\1\305\6\0\1\305\4\0\1\306\1\0\1\307\2\0"+
    "\2\305\1\0\1\305\3\0\5\305\1\u023c\7\305\2\0"+
    "\10\305\1\0\2\305\3\0\1\305\41\0\1\u023d\56\0"+
    "\1\u023e\64\0\1\u023f\74\0\1\u0240\63\0\1\u0241\45\0"+
    "\1\u0242\102\0\1\u0243\64\0\1\u0244\55\0\1\u0245\3\0"+
    "\1\u0246\1\0\1\u0247\57\0\1\u0248\103\0\1\u0249\55\0"+
    "\1\u024a\57\0\1\u024b\100\0\1\u024c\32\0\1\u024d\77\0"+
    "\1\u024e\35\0\1\u0206\2\0\1\u024f\3\0\1\u0207\5\0"+
    "\1\u0208\1\u0199\4\0\15\u0208\2\0\10\u0208\1\0\2\u0208"+
    "\3\0\1\u0208\14\0\1\u0208\54\0\1\u0206\1\0\1\u0208"+
    "\1\u024f\3\0\1\u0207\4\0\2\u0208\1\u0199\1\u0208\3\0"+
    "\15\u0208\2\0\10\u0208\1\0\2\u0208\3\0\1\u0208\43\0"+
    "\1\u0250\62\0\1\u0251\62\0\1\u0252\15\0\1\u0253\35\0"+
    "\2\u0254\63\0\2\u0255\43\0\1\300\3\0\1\u013b\1\277"+
    "\4\0\2\300\1\0\1\300\2\0\1\u0255\1\u0256\14\300"+
    "\2\0\10\300\1\0\2\300\3\0\1\300\6\0\1\300"+
    "\3\0\1\u013b\1\277\4\0\2\300\1\0\1\300\3\0"+
    "\10\300\1\u0257\4\300\2\0\10\300\1\0\2\300\3\0"+
    "\1\300\6\0\1\300\3\0\1\u013b\1\277\4\0\2\300"+
    "\1\0\1\300\3\0\5\300\1\u0258\7\300\2\0\10\300"+
    "\1\0\2\300\3\0\1\300\36\0\1\u0259\34\0\1\305"+
    "\4\0\1\306\1\0\1\307\2\0\2\305\1\0\1\305"+
    "\3\0\7\305\1\u025a\5\305\2\0\10\305\1\0\2\305"+
    "\3\0\1\305\4\0\1\u021a\2\0\1\u025b\3\0\1\u021b"+
    "\5\0\1\u021c\1\u01b6\4\0\15\u021c\2\0\10\u021c\1\0"+
    "\2\u021c\3\0\1\u021c\14\0\1\u021c\54\0\1\u021a\1\0"+
    "\1\u021c\1\u025b\3\0\1\u021b\4\0\2\u021c\1\u01b6\1\u021c"+
    "\3\0\15\u021c\2\0\10\u021c\1\0\2\u021c\3\0\1\u021c"+
    "\6\0\1\331\4\0\1\332\1\0\1\333\2\0\2\331"+
    "\1\0\1\331\3\0\7\331\1\u025c\5\331\2\0\10\331"+
    "\1\0\2\331\3\0\1\331\13\0\1\u025d\5\0\1\u025e"+
    "\5\0\15\u025e\2\0\10\u025e\1\0\2\u025e\3\0\1\u025e"+
    "\46\0\1\u025f\54\0\1\u0260\54\0\2\u0261\63\0\2\u0262"+
    "\43\0\1\364\3\0\1\u0165\1\363\4\0\2\364\1\0"+
    "\1\364\2\0\1\u0262\1\u0263\14\364\2\0\10\364\1\0"+
    "\2\364\3\0\1\364\6\0\1\364\3\0\1\u0165\1\363"+
    "\4\0\2\364\1\0\1\364\3\0\10\364\1\u0264\4\364"+
    "\2\0\10\364\1\0\2\364\3\0\1\364\6\0\1\364"+
    "\3\0\1\u0165\1\363\4\0\2\364\1\0\1\364\3\0"+
    "\5\364\1\u0265\7\364\2\0\10\364\1\0\2\364\3\0"+
    "\1\364\36\0\1\u0266\67\0\1\u0267\65\0\1\u0268\6\0"+
    "\1\u0269\26\0\1\u026a\5\0\1\u026b\5\0\15\u026b\2\0"+
    "\10\u026b\1\0\2\u026b\3\0\1\u026b\46\0\1\u026c\61\0"+
    "\1\u026d\47\0\2\u026e\43\0\1\u010d\3\0\1\u017c\1\u010c"+
    "\4\0\2\u010d\1\0\1\u010d\2\0\1\u026e\1\u026f\14\u010d"+
    "\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d\6\0\1\u010d"+
    "\3\0\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0"+
    "\10\u010d\1\u0270\4\u010d\2\0\10\u010d\1\0\2\u010d\3\0"+
    "\1\u010d\6\0\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d"+
    "\1\0\1\u010d\3\0\5\u010d\1\u0271\7\u010d\2\0\10\u010d"+
    "\1\0\2\u010d\3\0\1\u010d\36\0\1\u0272\34\0\1\305"+
    "\4\0\1\306\1\0\1\307\2\0\2\305\1\0\1\305"+
    "\3\0\7\305\1\u0273\5\305\2\0\10\305\1\0\2\305"+
    "\3\0\1\305\30\0\1\u0274\67\0\1\u0275\67\0\1\u0276"+
    "\75\0\1\u0277\50\0\1\u0278\106\0\1\u0279\51\0\1\u027a"+
    "\75\0\1\u027b\50\0\1\u027c\67\0\1\u027d\63\0\1\u027e"+
    "\51\0\2\u027f\105\0\1\u0280\50\0\1\u0281\43\0\1\u0282"+
    "\5\0\1\u0283\5\0\15\u0283\2\0\10\u0283\1\0\2\u0283"+
    "\3\0\1\u0283\37\0\1\u0284\103\0\2\u0285\63\0\2\u0286"+
    "\47\0\1\u0287\55\0\1\u0288\37\0\1\300\3\0\1\u013b"+
    "\1\277\4\0\2\300\1\0\1\300\3\0\4\300\1\u0289"+
    "\10\300\2\0\10\300\1\0\2\300\3\0\1\300\6\0"+
    "\1\300\3\0\1\u013b\1\277\4\0\2\300\1\0\1\300"+
    "\3\0\11\300\1\u028a\3\300\2\0\10\300\1\0\2\300"+
    "\3\0\1\300\6\0\1\300\3\0\1\u013b\1\277\4\0"+
    "\2\300\1\0\1\300\3\0\7\300\1\u028b\5\300\2\0"+
    "\10\300\1\0\2\300\3\0\1\300\35\0\1\u028c\35\0"+
    "\1\305\4\0\1\306\1\0\1\307\2\0\2\305\1\0"+
    "\1\305\3\0\6\305\1\u028d\6\305\2\0\10\305\1\0"+
    "\2\305\3\0\1\305\13\0\1\u028e\5\0\1\u028f\5\0"+
    "\15\u028f\2\0\10\u028f\1\0\2\u028f\3\0\1\u028f\6\0"+
    "\1\331\4\0\1\332\1\0\1\333\2\0\2\331\1\0"+
    "\1\331\3\0\6\331\1\u0290\6\331\2\0\10\331\1\0"+
    "\2\331\3\0\1\331\14\0\1\u025e\56\0\1\u025e\4\0"+
    "\1\u025d\4\0\2\u025e\1\0\1\u025e\3\0\15\u025e\2\0"+
    "\10\u025e\1\0\2\u025e\3\0\1\u025e\36\0\1\u0291\77\0"+
    "\1\u0292\62\0\1\u0293\50\0\1\u0294\37\0\1\364\3\0"+
    "\1\u0165\1\363\4\0\2\364\1\0\1\364\3\0\4\364"+
    "\1\u0295\10\364\2\0\10\364\1\0\2\364\3\0\1\364"+
    "\6\0\1\364\3\0\1\u0165\1\363\4\0\2\364\1\0"+
    "\1\364\3\0\11\364\1\u0296\3\364\2\0\10\364\1\0"+
    "\2\364\3\0\1\364\6\0\1\364\3\0\1\u0165\1\363"+
    "\4\0\2\364\1\0\1\364\3\0\7\364\1\u0297\5\364"+
    "\2\0\10\364\1\0\2\364\3\0\1\364\35\0\1\u0298"+
    "\43\0\1\u026b\56\0\1\u026b\4\0\1\u026a\4\0\2\u026b"+
    "\1\0\1\u026b\3\0\15\u026b\2\0\10\u026b\1\0\2\u026b"+
    "\3\0\1\u026b\36\0\1\u0299\70\0\1\u029a\55\0\1\u029b"+
    "\37\0\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d\1\0"+
    "\1\u010d\3\0\4\u010d\1\u029c\10\u010d\2\0\10\u010d\1\0"+
    "\2\u010d\3\0\1\u010d\6\0\1\u010d\3\0\1\u017c\1\u010c"+
    "\4\0\2\u010d\1\0\1\u010d\3\0\11\u010d\1\u029d\3\u010d"+
    "\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d\6\0\1\u010d"+
    "\3\0\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0"+
    "\7\u010d\1\u029e\5\u010d\2\0\10\u010d\1\0\2\u010d\3\0"+
    "\1\u010d\35\0\1\u029f\35\0\1\305\4\0\1\306\1\0"+
    "\1\307\2\0\2\305\1\0\1\305\3\0\6\305\1\u02a0"+
    "\6\305\2\0\10\305\1\0\2\305\3\0\1\305\36\0"+
    "\1\u02a1\101\0\1\u02a2\47\0\1\u02a3\62\0\1\u02a4\66\0"+
    "\1\u02a5\74\0\1\u02a6\60\0\1\u02a7\50\0\2\u02a8\100\0"+
    "\1\u02a9\54\0\1\u02aa\72\0\1\u02ab\51\0\2\u02ac\51\0"+
    "\1\u0283\56\0\1\u0283\3\0\1\u02ad\1\u0282\4\0\2\u0283"+
    "\1\0\1\u0283\3\0\15\u0283\2\0\10\u0283\1\0\2\u0283"+
    "\3\0\1\u0283\36\0\1\u02ae\104\0\2\u02af\37\0\1\u02b0"+
    "\66\0\1\u02b1\36\0\1\300\3\0\1\u013b\1\277\4\0"+
    "\2\300\1\0\1\300\3\0\5\300\1\u02b2\7\300\2\0"+
    "\10\300\1\0\2\300\3\0\1\300\6\0\1\300\3\0"+
    "\1\u013b\1\277\4\0\2\300\1\0\1\300\3\0\7\300"+
    "\1\u02b3\5\300\2\0\10\300\1\0\2\300\3\0\1\300"+
    "\6\0\1\300\3\0\1\u013b\1\277\4\0\2\300\1\0"+
    "\1\300\3\0\6\300\1\u02b4\6\300\2\0\10\300\1\0"+
    "\2\300\3\0\1\300\43\0\1\u02b5\27\0\1\305\4\0"+
    "\1\306\1\0\1\307\2\0\2\305\1\0\1\305\3\0"+
    "\14\305\1\u02b6\2\0\10\305\1\0\2\305\3\0\1\305"+
    "\14\0\1\u028f\56\0\1\u028f\3\0\1\u02b7\1\u028e\4\0"+
    "\2\u028f\1\0\1\u028f\3\0\15\u028f\2\0\10\u028f\1\0"+
    "\2\u028f\3\0\1\u028f\6\0\1\331\4\0\1\332\1\0"+
    "\1\333\2\0\2\331\1\0\1\331\3\0\14\331\1\u02b8"+
    "\2\0\10\331\1\0\2\331\3\0\1\331\54\0\1\u02b9"+
    "\57\0\1\u02ba\40\0\1\u02bb\75\0\1\u02bc\36\0\1\364"+
    "\3\0\1\u0165\1\363\4\0\2\364\1\0\1\364\3\0"+
    "\5\364\1\u02bd\7\364\2\0\10\364\1\0\2\364\3\0"+
    "\1\364\6\0\1\364\3\0\1\u0165\1\363\4\0\2\364"+
    "\1\0\1\364\3\0\7\364\1\u02be\5\364\2\0\10\364"+
    "\1\0\2\364\3\0\1\364\6\0\1\364\3\0\1\u0165"+
    "\1\363\4\0\2\364\1\0\1\364\3\0\6\364\1\u02bf"+
    "\6\364\2\0\10\364\1\0\2\364\3\0\1\364\43\0"+
    "\1\u02c0\75\0\1\u02c1\53\0\1\u02c2\55\0\1\u02c3\36\0"+
    "\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d"+
    "\3\0\5\u010d\1\u02c4\7\u010d\2\0\10\u010d\1\0\2\u010d"+
    "\3\0\1\u010d\6\0\1\u010d\3\0\1\u017c\1\u010c\4\0"+
    "\2\u010d\1\0\1\u010d\3\0\7\u010d\1\u02c5\5\u010d\2\0"+
    "\10\u010d\1\0\2\u010d\3\0\1\u010d\6\0\1\u010d\3\0"+
    "\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0\6\u010d"+
    "\1\u02c6\6\u010d\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d"+
    "\43\0\1\u02c7\27\0\1\305\4\0\1\306\1\0\1\307"+
    "\2\0\2\305\1\0\1\305\3\0\14\305\1\u02c8\2\0"+
    "\10\305\1\0\2\305\3\0\1\305\35\0\1\u02c9\71\0"+
    "\1\u02ca\61\0\1\u02cb\77\0\1\u02cc\35\0\1\u02cd\110\0"+
    "\1\u02ce\60\0\1\u02cf\64\0\1\u02d0\62\0\1\u02d1\72\0"+
    "\1\u02d2\56\0\1\u02d3\64\0\1\u02d4\74\0\1\u02d5\62\0"+
    "\1\u02d6\52\0\1\u02d7\35\0\1\300\3\0\1\u013b\1\277"+
    "\4\0\2\300\1\0\1\300\3\0\6\300\1\u028a\6\300"+
    "\2\0\10\300\1\0\2\300\3\0\1\300\6\0\1\300"+
    "\3\0\1\u02d8\1\277\4\0\2\300\1\0\1\300\3\0"+
    "\15\300\2\0\10\300\1\0\2\300\3\0\1\300\6\0"+
    "\1\300\3\0\1\u013b\1\277\4\0\2\300\1\0\1\300"+
    "\3\0\14\300\1\u02b3\2\0\10\300\1\0\2\300\3\0"+
    "\1\300\33\0\1\u02d9\67\0\1\u02da\70\0\1\u02db\57\0"+
    "\1\u02dc\35\0\1\364\3\0\1\u0165\1\363\4\0\2\364"+
    "\1\0\1\364\3\0\6\364\1\u0296\6\364\2\0\10\364"+
    "\1\0\2\364\3\0\1\364\6\0\1\364\3\0\1\u02dd"+
    "\1\363\4\0\2\364\1\0\1\364\3\0\15\364\2\0"+
    "\10\364\1\0\2\364\3\0\1\364\6\0\1\364\3\0"+
    "\1\u0165\1\363\4\0\2\364\1\0\1\364\3\0\14\364"+
    "\1\u02be\2\0\10\364\1\0\2\364\3\0\1\364\33\0"+
    "\1\u02de\72\0\1\u02df\60\0\1\u02e0\35\0\1\u010d\3\0"+
    "\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0\6\u010d"+
    "\1\u029d\6\u010d\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d"+
    "\6\0\1\u010d\3\0\1\u02e1\1\u010c\4\0\2\u010d\1\0"+
    "\1\u010d\3\0\15\u010d\2\0\10\u010d\1\0\2\u010d\3\0"+
    "\1\u010d\6\0\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d"+
    "\1\0\1\u010d\3\0\14\u010d\1\u02c5\2\0\10\u010d\1\0"+
    "\2\u010d\3\0\1\u010d\43\0\1\u02e2\64\0\1\u02e3\54\0"+
    "\1\u02e4\74\0\1\u02e5\63\0\1\u02e6\45\0\1\u02e7\102\0"+
    "\1\u02e8\56\0\1\u02e9\64\0\1\u02ea\74\0\1\u02eb\57\0"+
    "\1\u02ec\67\0\1\u02ed\61\0\1\u02ee\67\0\1\u02ef\61\0"+
    "\1\u02f0\61\0\1\u02f1\67\0\1\u02f2\62\0\1\u02f3\60\0"+
    "\1\u02f4\46\0\1\u02d8\64\0\1\u02dd\64\0\1\u02e1\125\0"+
    "\1\u02f5\47\0\1\u02f6\70\0\1\u02f7\57\0\1\u02f8\72\0"+
    "\1\u02f9\64\0\1\u02fa\23\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[31800];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\37\0\3\11\6\1\1\11\4\1\2\11\2\1\2\11"+
    "\5\1\1\11\1\1\2\11\2\1\1\11\2\1\2\11"+
    "\11\1\1\11\1\1\2\11\3\1\1\11\1\1\1\11"+
    "\10\1\1\11\6\1\3\11\2\1\1\11\1\1\1\11"+
    "\1\1\1\11\2\1\1\11\2\1\1\11\5\1\1\11"+
    "\1\1\3\11\5\1\2\11\1\1\1\11\3\1\1\11"+
    "\2\1\1\11\2\1\1\11\5\1\1\11\2\1\3\11"+
    "\52\0\1\11\1\1\5\0\1\11\14\0\1\1\21\0"+
    "\2\11\11\0\1\11\30\0\1\11\1\1\31\0\1\11"+
    "\4\0\1\11\10\0\1\11\4\0\1\11\15\0\1\11"+
    "\26\0\1\11\26\0\1\11\17\0\1\1\4\0\1\11"+
    "\5\0\2\11\1\0\2\11\1\0\1\11\2\0\2\11"+
    "\1\0\2\11\10\0\1\1\2\0\1\11\2\0\2\11"+
    "\2\0\1\1\2\0\1\1\2\0\1\11\4\0\1\11"+
    "\1\0\5\11\2\0\2\11\10\0\2\11\2\0\1\11"+
    "\2\0\2\11\3\0\1\11\1\0\1\11\1\0\1\11"+
    "\10\0\1\1\1\11\7\0\1\11\1\1\1\11\10\0"+
    "\2\11\11\0\1\11\4\0\1\1\2\0\1\11\2\1"+
    "\2\11\3\0\1\1\1\0\1\11\2\1\3\0\1\11"+
    "\5\0\1\11\1\0\1\11\2\0\1\11\7\0\1\1"+
    "\2\0\2\1\1\11\1\0\2\11\2\0\1\11\14\0"+
    "\1\11\15\0\1\1\10\0\3\11\1\0\1\1\12\0"+
    "\1\11\12\0\1\11\4\0\1\11\36\0\1\1\7\0"+
    "\1\11\1\0\1\11\5\0\1\11\1\1\1\11\1\1"+
    "\7\0\1\11\6\0\1\11\1\1\5\0\1\11\1\1"+
    "\1\0\2\11\1\0\1\11\3\0\1\11\1\0\2\11"+
    "\1\0\1\11\1\0\1\11\1\0\5\11\2\0\1\11"+
    "\2\0\1\11\1\0\1\11\1\0\1\11\2\0\2\11"+
    "\5\0\2\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[762];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public static ArrayList<Errores> listaLexico=new ArrayList();
    public static ArrayList<Errores> listaErrores = new ArrayList();
    public static ArrayList<tablaSimbolos> tablaSimbolos_ = new ArrayList();	
	public static String urlAuxliar="";
	public static Boolean fin=false;
	public static String txt_temporal="";
	public static int linea=0;
	public static int columna=0;



    public static int flagInicio = 0;
    public String cadena = "";
    public String estado="";


    public void addError(int linea, int columna, String valor)
    {
        Errores errorLexico=new Errores("Lexico",linea, columna, valor);
        listaErrores.add(errorLexico);
    }

    public static void addChtml(String tipo, int linea, int columna, String descripcion, String valor)
    {                
        tipo = tipo.toLowerCase();
        valor = valor.toLowerCase();
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo(tipo);
        simbolo.setLinea(linea);
        simbolo.setColumna(columna);
        simbolo.setDescripcion(descripcion);
        
        simbolo.setValor(valor);                 
        tablaSimbolos_.add(simbolo);	            
    }     
 



  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Scanner(java.io.Reader in) {
    this.zzReader = in;
  }



  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
          { 	return new Symbol(simbolos.EOF,new String("Fin del archivo"));
    /*({letra}":"("\\"({linea})+)+)*/
 }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { System.out.println("Caracter ilegal: " + yytext()+" Linea : "+yyline +" Columna: "+yychar); 
			Errores errorLexico=new Errores();
			errorLexico.setTipo("Lexico");
			errorLexico.setLinea(yyline);
			errorLexico.setColumna(yychar);
			errorLexico.setDescripcion("Caracter Ilegal: "+yytext());
			listaErrores.add(errorLexico);
			//Proyecto1_Compiladores.listaLexico.add(errorLexico);
			//Menu.listaLexico=Proyecto1_Compiladores.listaLexico;
            }
          case 157: break;
          case 2: 
            { System.out.println("Salto de linea");
            }
          case 158: break;
          case 3: 
            { yychar=0;
            }
          case 159: break;
          case 4: 
            { cadena = "";
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : Menor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	
        System.out.println("*****************************************************************");
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 160: break;
          case 5: 
            { cadena = "";
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	        
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 161: break;
          case 6: 
            { System.out.print(yytext());
            }
          case 162: break;
          case 7: 
            { 
            }
          case 163: break;
          case 8: 
            { yybegin(ENCABEZADO2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	
        
        
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 164: break;
          case 9: 
            { cadena = "";
            }
          case 165: break;
          case 10: 
            { //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : Menor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	
       
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 166: break;
          case 11: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);


        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 167: break;
          case 12: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("asignacion");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("= : Asignacion");
        
        simbolo.setValor(yytext());                
        tablaSimbolos_.add(simbolo);
             
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.asignacion, yychar, yyline, yytext());
            }
          case 168: break;
          case 13: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("puntoComa");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("; : Punto coma");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
            
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.puntoComa, yychar, yyline, yytext());
            }
          case 169: break;
          case 14: 
            { yybegin(YYINITIAL);                           
        System.out.println("Saltar a estado ENCABEZADO2");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	
        
        
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 170: break;
          case 15: 
            { yybegin(TITULO2);                           
        System.out.println("Saltar a estado TITULO2");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	
        
        
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 171: break;
          case 16: 
            { if(!yytext().equals("<"))
        {
            if(yytext().equals("\n"))
            {
                cadena  = cadena + "\\n";
            }
            else
            {
                cadena  = cadena + yytext();            
            }
            
        }
        else  
        {           
            yybegin(ENCABEZADO2);
                                            
            //Generamos la entrada en la tabla de simbolos.
            tablaSimbolos simbolo=new tablaSimbolos();
            simbolo.setTipo("cadena");
            simbolo.setLinea(yyline);
            simbolo.setColumna(yychar);
            simbolo.setDescripcion("Cadena : cadena de texto");
            
            if(cadena.equals("")){cadena=" ";} simbolo.setValor(cadena);                 
            tablaSimbolos_.add(simbolo);
            yypushback(1);	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 
        }
            }
          case 172: break;
          case 17: 
            { yybegin(ENCABEZADO2);  
        System.out.println("----------------------------------------------Saliendo de titulo3");                         
        System.out.println("Saltar a estado ENCABEZADO2");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : Menor que titulo");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 173: break;
          case 18: 
            { yybegin(YYINITIAL);                           
        System.out.println("Saltar a estado ENCABEZADO2");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 174: break;
          case 19: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("asignacion");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("= : Asignacion");
        
        simbolo.setValor(yytext());                
        tablaSimbolos_.add(simbolo);
                             
        return new Symbol(simbolos.asignacion, yychar, yyline, yytext());
            }
          case 175: break;
          case 20: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("puntoComa");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("; : Punto coma");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                    
        return new Symbol(simbolos.puntoComa, yychar, yyline, yytext());
            }
          case 176: break;
          case 21: 
            { yybegin(TEXTO2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 177: break;
          case 22: 
            { System.out.print(yytext());
        if(!yytext().equals("<"))
        {
            if(yytext().equals("\n"))
            {
                cadena  = cadena + "\\n";
            }
            else
            {
                cadena  = cadena + yytext();            
            }
            
        }
        else  
        {

            //cadena = cadena + yytext();
            
            yybegin(YYINITIAL);
                                            
            //Generamos la entrada en la tabla de simbolos.
            tablaSimbolos simbolo=new tablaSimbolos();
            simbolo.setTipo("cadena");
            simbolo.setLinea(yyline);
            simbolo.setColumna(yychar);
            simbolo.setDescripcion("Cadena : cadena de texto");
            
            if(cadena.equals("")){cadena=" ";} simbolo.setValor(cadena);                 
            tablaSimbolos_.add(simbolo);
            yypushback(1);	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 

        }
            }
          case 178: break;
          case 23: 
            { yybegin(IMAGEN2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 179: break;
          case 24: 
            { //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : MenorQue fin Imagen");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 180: break;
          case 25: 
            { yybegin(BOTON2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 181: break;
          case 26: 
            { cadena  = cadena + yytext();
            }
          case 182: break;
          case 27: 
            { if(!yytext().equals("<"))
        {
            if(yytext().equals("\n"))
            {
                cadena  = cadena + "\\n";
            }
            else
            {
                cadena  = cadena + yytext();            
            }
            
        }
        else 
        {

            //cadena = cadena + yytext();
            
            yybegin(YYINITIAL);
                                            
            //Generamos la entrada en la tabla de simbolos.
            tablaSimbolos simbolo=new tablaSimbolos();
            simbolo.setTipo("cadena");
            simbolo.setLinea(yyline);
            simbolo.setColumna(yychar);
            simbolo.setDescripcion("Cadena : cadena de texto");
            
            if(cadena.equals("")){cadena=" ";} simbolo.setValor(cadena);                 
            tablaSimbolos_.add(simbolo);
            yypushback(1);	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 

        }
            }
          case 183: break;
          case 28: 
            { yybegin(ENLACE2);                           
        System.out.println("Saltar a estado ENLACE2");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 184: break;
          case 29: 
            { yybegin(T2);  
        cadena = "";                         
        System.out.println("Saltar a estado ENCABEZADO2");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 185: break;
          case 30: 
            { cadena = "";
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : Menor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 186: break;
          case 31: 
            { cadena = "";
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	
        System.out.println("*****************************************************************");
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 187: break;
          case 32: 
            { cadena = "";
        yybegin(T4);                           
        System.out.println("Saltar a estado t4");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 188: break;
          case 33: 
            { cadena = "";
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que T4");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	        
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 189: break;
          case 34: 
            { cadena = "";
        yybegin(T6);                           
        System.out.println("Saltar a T6");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que T5");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 190: break;
          case 35: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("asignacion");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("= : Asignacion T5");
        
        simbolo.setValor(yytext());                
        tablaSimbolos_.add(simbolo);
                             
        return new Symbol(simbolos.asignacion, yychar, yyline, yytext());
            }
          case 191: break;
          case 36: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("puntoComa");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("; : Punto coma T5");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                    
        return new Symbol(simbolos.puntoComa, yychar, yyline, yytext());
            }
          case 192: break;
          case 37: 
            { if(!yytext().equals("<"))
        {
            if(yytext().equals("\n"))
            {
                cadena  = cadena + "\\n";
            }
            else
            {
                cadena  = cadena + yytext();            
            }
            
        }
        else 
        {

            //cadena = cadena + yytext();
            
            yybegin(T7);
                                            
            //Generamos la entrada en la tabla de simbolos.
            tablaSimbolos simbolo=new tablaSimbolos();
            simbolo.setTipo("cadena");
            simbolo.setLinea(yyline);
            simbolo.setColumna(yychar);
            simbolo.setDescripcion("Cadena : cadena de texto");
            
            if(cadena.equals("")){cadena=" ";} simbolo.setValor(cadena);                 
            tablaSimbolos_.add(simbolo);
            yypushback(1);	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 

        }
            }
          case 193: break;
          case 38: 
            { //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : MenorQue T7");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 194: break;
          case 39: 
            { yybegin(TB2);  
        cadena = "";                         
        System.out.println("Saltar a estado ENCABEZADO2");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 195: break;
          case 40: 
            { if(!yytext().equals("<"))
        {
            if(yytext().equals("\n"))
            {
                cadena  = cadena + "\\n";
            }
            else
            {
                cadena  = cadena + yytext();            
            }
            
        }
        else  
        {

            //cadena = cadena + yytext();
            
            yybegin(TB3);
                                            
            //Generamos la entrada en la tabla de simbolos.
            tablaSimbolos simbolo=new tablaSimbolos();
            simbolo.setTipo("cadena");
            simbolo.setLinea(yyline);
            simbolo.setColumna(yychar);
            simbolo.setDescripcion("Cadena : cadena de texto");
            
            if(cadena.equals("")){cadena=" ";} simbolo.setValor(cadena);                 
            tablaSimbolos_.add(simbolo);
            yypushback(1);	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 

        }
            }
          case 196: break;
          case 41: 
            { cadena = "";
        yybegin(TI2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 197: break;
          case 42: 
            { //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : MenorQue inicio TI2");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 198: break;
          case 43: 
            { //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : mayorQue fin Imagen TI2");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	
        yybegin(T6); 
        cadena = "";               
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 199: break;
          case 44: 
            { //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : MenorQue inicio TB3");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 200: break;
          case 45: 
            { cadena="";
        yybegin(T6);                           
        System.out.println("Saltar a estado ENCABEZADO2");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que TB3");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 201: break;
          case 46: 
            { yybegin(TA2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 202: break;
          case 47: 
            { yybegin(CAJA2);                           
        addChtml("mayorQue",yyline,yychar,"> : Mayor que",yytext());                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 203: break;
          case 48: 
            { addChtml("asignacion",yyline,yychar,"= : Asignacion",yytext());                      
        return new Symbol(simbolos.asignacion, yychar, yyline, yytext());
            }
          case 204: break;
          case 49: 
            { addChtml("puntoComa",yyline,yychar,"; : Punto coma",yytext());            
        return new Symbol(simbolos.puntoComa, yychar, yyline, yytext());
            }
          case 205: break;
          case 50: 
            { if(!yytext().equals("<"))
        {
            if(yytext().equals("\n"))
            {
                cadena  = cadena + "\\n";
            }
            else
            {
                cadena  = cadena + yytext();            
            }
            
        }
        else 
        {
            yybegin(YYINITIAL);
            yypushback(1);
            addChtml("cadena",yyline,yychar,"Cadena : cadena de texto",cadena); 	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 
        }
            }
          case 206: break;
          case 51: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id Ccss");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id : Identificador grupo ccss");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.idCcss, yychar, yyline, yytext());
            }
          case 207: break;
          case 52: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id Ccss");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id : Identificador grupo ccss");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);                            
        return new Symbol(simbolos.idCcss, yychar, yyline, yytext());
            }
          case 208: break;
          case 53: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("ct");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("ct: Inicio Celda");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
        yybegin(T5); 
        cadena = "";   
        System.out.println("SALTAR A T5");                                
        return new Symbol(simbolos.inicioCelda, yychar, yyline, yytext());
            }
          case 209: break;
          case 54: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("cb");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("cb: Inicio Celda cabecera");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
        yybegin(T5);   
        System.out.println("SALTAR A T5");
        cadena = "";
        return new Symbol(simbolos.inicioCeldaCabecera, yychar, yyline, yytext());
            }
          case 210: break;
          case 55: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id Ccss");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id : Identificador grupo ccss T5");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);                            
        return new Symbol(simbolos.idCcss, yychar, yyline, yytext());
            }
          case 211: break;
          case 56: 
            { addChtml("idCcss",yyline,yychar,"id : Identificador grupo ccss",yytext());                    
        return new Symbol(simbolos.idCcss, yychar, yyline, yytext());
            }
          case 212: break;
          case 57: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("inicioCjs");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("CJS : Inicio etiqueta CJS");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
              
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.inicioCjs, yychar, yyline, yytext());
            }
          case 213: break;
          case 58: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id: Posible nombre de color.");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
               
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.id, yychar, yyline, yytext());
            }
          case 214: break;
          case 59: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id: Posible nombre de color.");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);

        return new Symbol(simbolos.id, yychar, yyline, yytext());
            }
          case 215: break;
          case 60: 
            { addChtml("metodo",yyline,yychar, yytext() +" : llamada a metodo",yytext());            
        return new Symbol(simbolos.metodo, yychar, yyline, yytext());
            }
          case 216: break;
          case 61: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("metodo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("metodo : Llamada a metodo");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.metodo, yychar, yyline, yytext());
            }
          case 217: break;
          case 62: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id: Posible nombre de color. T5");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);

        return new Symbol(simbolos.id, yychar, yyline, yytext());
            }
          case 218: break;
          case 63: 
            { addChtml("id",yyline,yychar,"id: Posible nombre de color.",yytext());
        return new Symbol(simbolos.id, yychar, yyline, yytext());
            }
          case 219: break;
          case 64: 
            { addChtml("inicioCajaOpciones",yyline,yychar,"caja: Inico Caja opciones",yytext()); 
        yybegin(ELEMENTOS);                                       
        return new Symbol(simbolos.inicioCajaOpciones, yychar, yyline, yytext());
            }
          case 220: break;
          case 65: 
            { estado="YYINITIAL";
        yybegin(COMENTARIO);
            }
          case 221: break;
          case 66: 
            { switch(estado)
                {
                    case "COMENTARIO":
                        yybegin(COMENTARIO);	
                        break;
                    case "ENCABEZADO1":
                        yybegin(ENCABEZADO1);	
                        break;                    
                    case "ENCABEZADO2":
                        yybegin(ENCABEZADO2);	
                        break;                    
                    case "CUERPO":
                        yybegin(CUERPO);	
                        break;                    
                    case "TITULO1":
                        yybegin(TITULO1);	
                        break;                    
                    case "TITULO2":
                        yybegin(TITULO2);	
                        break;                    
                    case "TITULO3":
                        yybegin(TITULO3);	
                        break;                    
                    case "ELEMENTOS":
                        yybegin(ELEMENTOS);	
                        break;
                    case "TEXTO1":
                        yybegin(TEXTO1);	
                        break;
                    case "TEXTO2":
                        yybegin(TEXTO2);	
                        break;
                    case "IMAGEN1":
                        yybegin(IMAGEN1);	
                        break;
                    case "IMAGEN2":
                        yybegin(IMAGEN2);	
                        break;
                    case "BOTON1":
                        yybegin(BOTON1);	
                        break;
                    case "BOTON2":
                        yybegin(BOTON2);	
                        break;
                    case "ENLACE1":
                        yybegin(ENLACE1);	
                        break;
                    case "ENLACE2":
                        yybegin(ENLACE2);	
                        break;
                    case "T1":
                        yybegin(T1);	
                        break;
                    case  "T2":
                        yybegin(T2);	
                        break;
                    case "T3":
                        yybegin(T3);	
                        break;
                    case "T4":
                        yybegin(T4);	
                        break;
                    case "T5":
                        yybegin(T5);	
                        break;
                    case "T6":
                        yybegin(T6);	
                        break;
                    case "T7":
                        yybegin(T7);	
                        break;
                    case "TB":
                        yybegin(TB);	
                        break;
                    case "TB2":
                        yybegin(TB2);	
                        break;
                    case "TI":
                        yybegin(TI);	
                        break;
                        
                    case "TI2":
                        yybegin(TI2);	
                        break;
                    case "TB3":
                        yybegin(TB3);	
                        break;
                    case "TA1":
                        yybegin(TA1);	
                        break;
                    case "TA2":
                        yybegin(TA2);	
                        break;
                    case "CAJA1":
                        yybegin(CAJA1);	
                        break;
                    case "CAJA2":
                        yybegin(CAJA2);	
                        break;
                    case "YYINITIAL":
                        yybegin(YYINITIAL);	
                        break;                        
                }
            }
          case 222: break;
          case 67: 
            { estado="ENCABEZADO1";
        yybegin(COMENTARIO);
            }
          case 223: break;
          case 68: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("ruta");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("ruta : Declaración ruta archivo");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
               
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.ruta, yychar, yyline, yytext());
            }
          case 224: break;
          case 69: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("inicioCcss");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("CCSS : Inicio etiqueta CCSS");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
              
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.inicioCcss, yychar, yyline, yytext());
            }
          case 225: break;
          case 70: 
            { estado="ENCABEZADO2";
        yybegin(COMENTARIO);
            }
          case 226: break;
          case 71: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("rgb");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("rgb: Posible nombre de color.");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
               
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.rgb, yychar, yyline, yytext());
            }
          case 227: break;
          case 72: 
            { estado="CUERPO";
        yybegin(COMENTARIO);
            }
          case 228: break;
          case 73: 
            { estado="TITULO1";
        yybegin(COMENTARIO);
            }
          case 229: break;
          case 74: 
            { estado="TITULO3";
        yybegin(COMENTARIO);
            }
          case 230: break;
          case 75: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("alto");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("alto : Altura objeto");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.alto, yychar, yyline, yytext());
            }
          case 231: break;
          case 76: 
            { estado="ELEMENTOS";
        yybegin(COMENTARIO);
            }
          case 232: break;
          case 77: 
            { estado="TEXTO1";
        yybegin(COMENTARIO);
            }
          case 233: break;
          case 78: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("ruta");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("ruta : Declaración ruta archivo");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
               
        return new Symbol(simbolos.ruta, yychar, yyline, yytext());
            }
          case 234: break;
          case 79: 
            { estado="IMAGEN1";
        yybegin(COMENTARIO);
            }
          case 235: break;
          case 80: 
            { estado="IMAGEN2";
        yybegin(COMENTARIO);
            }
          case 236: break;
          case 81: 
            { estado="BOTON1";
        yybegin(COMENTARIO);
            }
          case 237: break;
          case 82: 
            { estado="ENLACE1";
        yybegin(COMENTARIO);
            }
          case 238: break;
          case 83: 
            { estado="T1";
        yybegin(COMENTARIO);
            }
          case 239: break;
          case 84: 
            { estado="T2";
        yybegin(COMENTARIO);
            }
          case 240: break;
          case 85: 
            { estado="T3";
        yybegin(COMENTARIO);
            }
          case 241: break;
          case 86: 
            { estado="T4";
        yybegin(COMENTARIO);
            }
          case 242: break;
          case 87: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("alto");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("alto : Altura objeto T5");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.alto, yychar, yyline, yytext());
            }
          case 243: break;
          case 88: 
            { estado="T5";
        yybegin(COMENTARIO);
            }
          case 244: break;
          case 89: 
            { estado="T7";
        yybegin(COMENTARIO);
            }
          case 245: break;
          case 90: 
            { estado="TB";
        yybegin(COMENTARIO);
            }
          case 246: break;
          case 91: 
            { estado="TI";
        yybegin(COMENTARIO);
            }
          case 247: break;
          case 92: 
            { estado="TI2";
        yybegin(COMENTARIO);
            }
          case 248: break;
          case 93: 
            { estado="TB3";
        yybegin(COMENTARIO);
            }
          case 249: break;
          case 94: 
            { estado="TA1";
        yybegin(COMENTARIO);
            }
          case 250: break;
          case 95: 
            { addChtml("alto",yyline,yychar,"alto : Altura objeto",yytext());                    
        return new Symbol(simbolos.alto, yychar, yyline, yytext());
            }
          case 251: break;
          case 96: 
            { estado="CAJA1";
        yybegin(COMENTARIO);
            }
          case 252: break;
          case 97: 
            { //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("inicioChtml");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("CHTML : Inicio Documento");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	
        
        return new Symbol(simbolos.inicioChtml, yychar, yyline, yytext());
            }
          case 253: break;
          case 98: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("texto");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("texto: Inicio texto");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
        yybegin(TEXTO1);                            
        return new Symbol(simbolos.inicioTexto, yychar, yyline, yytext());
            }
          case 254: break;
          case 99: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("tabla");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("tabla: Inicio tabla");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
        yybegin(T1);                                    
        return new Symbol(simbolos.inicioTabla, yychar, yyline, yytext());
            }
          case 255: break;
          case 100: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("boton");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("boton: Inicio boton");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
        yybegin(BOTON1);                                    
        return new Symbol(simbolos.inicioBoton, yychar, yyline, yytext());
            }
          case 256: break;
          case 101: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("inicioPanel");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("panel: Declaracion panel");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
               
        yybegin(ELEMENTOS);        
        return new Symbol(simbolos.inicioPanel, yychar, yyline, yytext());
            }
          case 257: break;
          case 102: 
            { //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("fondo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fondo : declaracion fondo");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	
       
        return new Symbol(simbolos.fondo, yychar, yyline, yytext());
            }
          case 258: break;
          case 103: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("ancho");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("ancho : Anchura objeto");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.ancho, yychar, yyline, yytext());
            }
          case 259: break;
          case 104: 
            { addChtml("click",yyline,yychar,"click : evento",yytext());            
        return new Symbol(simbolos.click, yychar, yyline, yytext());
            }
          case 260: break;
          case 105: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("grupo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("grupo : grupo ccss");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.grupo, yychar, yyline, yytext());
            }
          case 261: break;
          case 106: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("click");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("click : Evento Click");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);                            
        return new Symbol(simbolos.click, yychar, yyline, yytext());
            }
          case 262: break;
          case 107: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fil_t");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fil_t: Inicio fila");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo); 
        yybegin(T3);                                
        return new Symbol(simbolos.inicioFila, yychar, yyline, yytext());
            }
          case 263: break;
          case 108: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("ancho");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("ancho : Anchura objeto T5");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.ancho, yychar, yyline, yytext());
            }
          case 264: break;
          case 109: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("grupo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("grupo : grupo ccss T5");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.grupo, yychar, yyline, yytext());
            }
          case 265: break;
          case 110: 
            { cadena="";
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("boton");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("boton : Inicio boton");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);    
        yybegin(TB);                        
        return new Symbol(simbolos.inicioBoton, yychar, yyline, yytext());
            }
          case 266: break;
          case 111: 
            { addChtml("ancho",yyline,yychar,"ancho : Anchura objeto",yytext());                    
        return new Symbol(simbolos.ancho, yychar, yyline, yytext());
            }
          case 267: break;
          case 112: 
            { addChtml("grupo",yyline,yychar,"grupo : grupo ccss",yytext());                      
        return new Symbol(simbolos.grupo, yychar, yyline, yytext());
            }
          case 268: break;
          case 113: 
            { addChtml("valor",yyline,yychar,yytext() + "valor de opcion",yytext());                    
        return new Symbol(simbolos.valor, yychar, yyline, yytext());
            }
          case 269: break;
          case 114: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("imagen");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("imagen: Inicio imagen");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
        yybegin(IMAGEN1);                                    
        return new Symbol(simbolos.inicioImagen, yychar, yyline, yytext());
            }
          case 270: break;
          case 115: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("enlace");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("enlace: Inicio enlace");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
        yybegin(ENLACE1);                                    
        return new Symbol(simbolos.inicioEnlace, yychar, yyline, yytext());
            }
          case 271: break;
          case 116: 
            { yybegin(CUERPO);
        System.out.println("Saltar a estado CUERPO");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("cuerpo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("cuerpo : Inicio cuerpo");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);        	        
        return new Symbol(simbolos.inicioCuerpo, yychar, yyline, yytext());
            }
          case 272: break;
          case 117: 
            { addChtml("inicioOpcion",yyline,yychar,"Opcion: Inico Opcion",yytext()); 
        yybegin(CAJA1);                                       
        return new Symbol(simbolos.inicioOpcion, yychar, yyline, yytext());
            }
          case 273: break;
          case 118: 
            { yybegin(TITULO1);
        System.out.println("Saltar a estado CUERPO");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("titulo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("titulo : Inicio titulo");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);        	        
        return new Symbol(simbolos.inicioTitulo, yychar, yyline, yytext());
            }
          case 274: break;
          case 119: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("path");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("path : Direccion a imagen");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);                          
        return new Symbol(simbolos.path, yychar, yyline, yytext());
            }
          case 275: break;
          case 120: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("imagen");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("imagen : Inicio imagen");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);    
        yybegin(TI);
        cadena="";                        
        return new Symbol(simbolos.inicioImagen, yychar, yyline, yytext());
            }
          case 276: break;
          case 121: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finCeldaCabecera");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("finCeldaCabecera : Fin cabecera");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);    
        yybegin(T4);  
        System.out.println("SALTAR A T4"); 
        cadena = "";                              
        return new Symbol(simbolos.finCelda, yychar, yyline, yytext());
            }
          case 277: break;
          case 122: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finCelda");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("finCelda : Fin Celda");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
        yybegin(T4);       
        System.out.println("SALTAR A T4");  
        cadena = "";                         
        return new Symbol(simbolos.finCeldaCabecera, yychar, yyline, yytext());
            }
          case 278: break;
          case 123: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("path");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("path : Direccion a imagen TI2");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);                          
        return new Symbol(simbolos.path, yychar, yyline, yytext());
            }
          case 279: break;
          case 124: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("inicioCajaArea");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("inicioCajaArea: Inicio caja area de texto");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
        yybegin(TA1);                                    
        return new Symbol(simbolos.inicioCajaArea, yychar, yyline, yytext());
            }
          case 280: break;
          case 125: 
            { addChtml("inicioSpinner",yyline,yychar,"spinner: Inico Spinner",yytext()); 
        yybegin(TA1);                                       
        return new Symbol(simbolos.inicioSpinner, yychar, yyline, yytext());
            }
          case 281: break;
          case 126: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finCjs");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-cjs : finCJs");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
             
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.finCjs, yychar, yyline, yytext());
            }
          case 282: break;
          case 127: 
            { addChtml("finCajaOpciones",yyline,yychar,"fin-caja: Fin caja Opciones",yytext());                                              
        return new Symbol(simbolos.finCajaOpciones, yychar, yyline, yytext());
            }
          case 283: break;
          case 128: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("pathComillas");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("Path: Ruta a archivo");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
               
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.pathComillas, yychar, yyline, yytext());
            }
          case 284: break;
          case 129: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finCcss");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-CCSS : fin etiqueta CCSS");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
             
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.finCcss, yychar, yyline, yytext());
            }
          case 285: break;
          case 130: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("alineado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("alineado : Alineación objeto");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.alineado, yychar, yyline, yytext());
            }
          case 286: break;
          case 131: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("path");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("path : Direccion a imagen");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.pathComillas, yychar, yyline, yytext());
            }
          case 287: break;
          case 132: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("alineado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("alineado : Alineación objeto T5");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.alineado, yychar, yyline, yytext());
            }
          case 288: break;
          case 133: 
            { addChtml("alineado",yyline,yychar,"alineado : Alineación objeto",yytext());                    
        return new Symbol(simbolos.alineado, yychar, yyline, yytext());
            }
          case 289: break;
          case 134: 
            { //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("finChtml");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("FIN-CHTML : Fin Documento");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	
        
        return new Symbol(simbolos.finChtml, yychar, yyline, yytext());
            }
          case 290: break;
          case 135: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-texto");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-texto: Fin texto");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);                                    
        return new Symbol(simbolos.finTexto, yychar, yyline, yytext());
            }
          case 291: break;
          case 136: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-boton");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-boton: Fin boton");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);                                 
        return new Symbol(simbolos.finBoton, yychar, yyline, yytext());
            }
          case 292: break;
          case 137: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finPanel");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-panel: Cierre panel");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                          
        return new Symbol(simbolos.finPanel, yychar, yyline, yytext());
            }
          case 293: break;
          case 138: 
            { addChtml("salto",yyline,yychar,"salto: salto :v",yytext());                                              
        return new Symbol(simbolos.salto, yychar, yyline, yytext());
            }
          case 294: break;
          case 139: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("valorAlineado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("valorAlineado : Alineación");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.valorAlineado, yychar, yyline, yytext());
            }
          case 295: break;
          case 140: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-tabla");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-tabla: Fin tabla");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);  
        yybegin(YYINITIAL);
        return new Symbol(simbolos.finTabla, yychar, yyline, yytext());
            }
          case 296: break;
          case 141: 
            { //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("fin-fil_t");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-fil_t : Fin Fila");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);   
        yybegin(T2);     	        
        return new Symbol(simbolos.finFila, yychar, yyline, yytext());
            }
          case 297: break;
          case 142: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("valorAlineado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("valorAlineado : Alineación T5");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.valorAlineado, yychar, yyline, yytext());
            }
          case 298: break;
          case 143: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-boton");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-boton: Fin boton TB3");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);  
        cadena = "";          
        return new Symbol(simbolos.finBoton, yychar, yyline, yytext());
            }
          case 299: break;
          case 144: 
            { addChtml("valorAlineado",yyline,yychar, yytext() +" : Alineación",yytext());                    
        return new Symbol(simbolos.valorAlineado, yychar, yyline, yytext());
            }
          case 300: break;
          case 145: 
            { yybegin(ENCABEZADO1);
        System.out.println("Saltar a estado ENCABEZADO1");
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("inicioEncabezado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("encabezado : Inicio encabezado");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);        	        
        return new Symbol(simbolos.inicioEncabezado, yychar, yyline, yytext());
            }
          case 301: break;
          case 146: 
            { addChtml("inicioCaja",yyline,yychar,"caja_texto: Inico caja texto",yytext()); 
        yybegin(TA1);                                       
        return new Symbol(simbolos.inicioCaja, yychar, yyline, yytext());
            }
          case 302: break;
          case 147: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-enlace");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-enlace: Fin enlace");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);                                 
        return new Symbol(simbolos.finEnlace, yychar, yyline, yytext());
            }
          case 303: break;
          case 148: 
            { //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("fin-cuerpo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-cuerpo : Fin cuerpo");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);        	        
        return new Symbol(simbolos.finCuerpo, yychar, yyline, yytext());
            }
          case 304: break;
          case 149: 
            { addChtml("finOpcion",yyline,yychar,"fin-opcion: Fin Opcion",yytext());                                              
        return new Symbol(simbolos.finOpcion, yychar, yyline, yytext());
            }
          case 305: break;
          case 150: 
            { //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("fin-titulo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-titulo : Fin titulo");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);        	        
        return new Symbol(simbolos.finTitulo, yychar, yyline, yytext());
            }
          case 306: break;
          case 151: 
            { yybegin(YYINITIAL); 
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-imagen");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-imagen: Fin imagen");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);                                    
        return new Symbol(simbolos.finImagen, yychar, yyline, yytext());
            }
          case 307: break;
          case 152: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-imagen");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-imagen: Fin imagen TI2");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);      
        cadena = "";                              
        return new Symbol(simbolos.finImagen, yychar, yyline, yytext());
            }
          case 308: break;
          case 153: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finCajaArea");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("finCajaArea: Fin caja area de texto");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);                                           
        return new Symbol(simbolos.finCajaArea, yychar, yyline, yytext());
            }
          case 309: break;
          case 154: 
            { addChtml("finSpinner",yyline,yychar,"fin-spinner: Fin Spinner",yytext());                                              
        return new Symbol(simbolos.finSpinner, yychar, yyline, yytext());
            }
          case 310: break;
          case 155: 
            { addChtml("finCaja",yyline,yychar,"fin-caja_texto: Fin caja texto",yytext());                                            
        return new Symbol(simbolos.finCaja, yychar, yyline, yytext());
            }
          case 311: break;
          case 156: 
            { yybegin(YYINITIAL);
                                        
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("finEncabezado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("FIN-ENCABEZADO : Fin Encabezado");
        
        simbolo.setValor(yytext());                 
        tablaSimbolos_.add(simbolo);	
        
        return new Symbol(simbolos.finEncabezado, yychar, yyline, yytext());
            }
          case 312: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
