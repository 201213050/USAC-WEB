/* The following code was generated by JFlex 1.6.1 */

package Source.CHTML;
import java_cup.runtime.Symbol;
import java.util.ArrayList;
import Principal.Errores;
import Principal.Interfaz;
import Principal.tablaSimbolos;
/*
Directivas:
public: clase publica
cup: compatibilidad con cup
full: extender el alfabeto con todos los valores de 8 bits
line: agrega la variable int yyline, para indicar la fila del lexema
char: agrega la variable int yychar, indica el indice del primer caracter del lexema
ignorecase: validar, indistitntamente si la letra es mayuscula o minuscula
eofval: especifica un valor de retorno al final del archivo
*/





/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>chtml.l</tt>
 */
public class Scanner implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int COMENTARIO = 2;
  public static final int ENCABEZADO1 = 4;
  public static final int ENCABEZADO2 = 6;
  public static final int CUERPO = 8;
  public static final int TITULO1 = 10;
  public static final int TITULO2 = 12;
  public static final int TITULO3 = 14;
  public static final int ELEMENTOS = 16;
  public static final int TEXTO1 = 18;
  public static final int TEXTO2 = 20;
  public static final int IMAGEN1 = 22;
  public static final int IMAGEN2 = 24;
  public static final int BOTON1 = 26;
  public static final int BOTON2 = 28;
  public static final int ENLACE1 = 30;
  public static final int ENLACE2 = 32;
  public static final int T1 = 34;
  public static final int T2 = 36;
  public static final int T3 = 38;
  public static final int T4 = 40;
  public static final int T5 = 42;
  public static final int T6 = 44;
  public static final int T7 = 46;
  public static final int TB = 48;
  public static final int TB2 = 50;
  public static final int TI = 52;
  public static final int TI2 = 54;
  public static final int TB3 = 56;
  public static final int TA1 = 58;
  public static final int TA2 = 60;
  public static final int CAJA1 = 62;
  public static final int CAJA2 = 64;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7, 
     8,  8,  9,  9, 10, 10, 11, 11, 12, 12, 13, 13, 10, 10, 14, 14, 
    10, 10, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 
    22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 10, 10, 28, 28, 
    29, 29
  };

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = {
     5,  5,  5,  5,  5,  5,  5,  5,  5,  1,  2, 50,  1,  1,  5,  5, 
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5, 
     1,  5,  7, 17,  5,  5,  5,  5, 10, 11, 12,  5,  5, 13,  4, 18, 
     3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  6, 47, 33, 46, 34,  5, 
     5, 27, 38, 28, 26, 24, 37, 41, 29, 20, 42, 49, 36, 35, 30, 32, 
    39, 22, 25, 44, 31, 23, 45, 14, 40, 14, 21,  5, 15,  5,  5, 16, 
     5, 27, 38, 28, 26, 24, 37, 41, 29, 20, 42, 49, 36, 35, 30, 32, 
    39, 22, 25, 44, 31, 23, 45, 14, 40, 14, 21,  5,  5,  5,  5,  5, 
     5,  5,  5,  5,  5, 50,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5, 
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5, 
     5,  9,  5,  5,  5,  5,  5,  5,  5,  9,  5,  5,  5,  9,  5,  5, 
     5,  9,  5,  9,  5,  5,  5,  5,  5,  5,  9,  5,  5,  5,  5,  5, 
     5,  5,  5,  8,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5, 
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5, 
     5,  5,  5,  8,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5, 
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5
  };

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\36\0\1\1\1\2\1\3\5\1\1\4\1\5\4\1"+
    "\1\6\1\7\1\6\1\10\1\11\4\1\1\12\1\13"+
    "\1\1\1\14\1\15\1\1\1\16\1\1\1\17\1\20"+
    "\1\21\1\22\7\1\1\23\1\1\1\24\1\25\2\1"+
    "\1\26\1\1\1\27\7\1\1\30\3\1\1\31\1\1"+
    "\1\32\1\1\1\33\1\34\1\35\1\36\1\1\1\37"+
    "\1\1\1\40\4\1\1\41\1\1\1\42\1\43\1\44"+
    "\1\1\1\45\2\1\1\46\1\47\1\50\2\1\1\51"+
    "\1\52\1\1\1\53\1\54\1\1\1\55\4\1\1\56"+
    "\2\1\1\57\1\60\1\61\45\0\2\62\4\0\1\63"+
    "\13\0\1\62\12\0\1\64\1\65\10\0\1\66\21\0"+
    "\2\67\27\0\1\70\3\0\1\71\4\0\1\72\4\0"+
    "\1\73\13\0\1\74\16\0\1\75\17\0\1\76\16\0"+
    "\1\77\4\0\1\100\5\0\1\101\1\0\1\102\1\103"+
    "\3\0\1\104\11\0\1\105\4\0\1\105\2\0\1\106"+
    "\2\0\1\105\6\0\1\106\12\0\1\107\20\0\1\110"+
    "\7\0\1\111\1\112\1\113\10\0\1\114\1\115\10\0"+
    "\1\116\4\0\1\117\2\0\2\120\1\121\1\117\1\121"+
    "\2\0\1\117\1\0\2\122\1\121\3\0\1\123\5\0"+
    "\1\124\1\0\1\125\2\0\1\126\7\0\1\127\2\0"+
    "\1\130\1\131\1\132\1\0\1\133\1\134\2\0\1\135"+
    "\14\0\1\136\15\0\1\137\10\0\1\140\1\141\1\142"+
    "\1\0\1\143\12\0\1\144\12\0\1\145\4\0\1\146"+
    "\36\0\1\147\7\0\1\150\1\0\1\151\5\0\2\152"+
    "\1\153\1\152\7\0\1\154\6\0\2\155\5\0\1\156"+
    "\1\157\1\0\1\160\1\161\1\0\1\162\3\0\1\163"+
    "\1\0\1\164\1\165\1\0\1\166\1\0\1\167\1\0"+
    "\1\170\1\171\1\172\1\173\1\174\2\0\1\175\2\0"+
    "\1\176\1\0\1\177\1\0\1\200\2\0\1\201\1\202"+
    "\5\0\1\203\1\204";

  private static int [] zzUnpackAction() {
    int [] result = new int[670];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\64\0\150\0\234\0\320\0\u0104\0\u0138\0\u016c"+
    "\0\u01a0\0\u01d4\0\u0208\0\u023c\0\u0270\0\u02a4\0\u02d8\0\u030c"+
    "\0\u0340\0\u0374\0\u03a8\0\u03dc\0\u0410\0\u0444\0\u0478\0\u04ac"+
    "\0\u04e0\0\u0514\0\u0548\0\u057c\0\u05b0\0\u05e4\0\u0618\0\u0618"+
    "\0\u0618\0\u064c\0\u0680\0\u06b4\0\u06e8\0\u071c\0\u0750\0\u0618"+
    "\0\u0784\0\u07b8\0\u07ec\0\u0820\0\u0618\0\u0618\0\u0854\0\u0618"+
    "\0\u0618\0\u0888\0\u08bc\0\u08f0\0\u0924\0\u0618\0\u0618\0\u0958"+
    "\0\u0618\0\u0618\0\u098c\0\u0618\0\u09c0\0\u0618\0\u0618\0\u0618"+
    "\0\u0618\0\u09f4\0\u0a28\0\u0a5c\0\u0a90\0\u0ac4\0\u0af8\0\u0b2c"+
    "\0\u0618\0\u0b60\0\u0618\0\u0618\0\u0b94\0\u0bc8\0\u0618\0\u0bfc"+
    "\0\u0618\0\u0c30\0\u0c64\0\u0c98\0\u0ccc\0\u0d00\0\u0d34\0\u0d68"+
    "\0\u0618\0\u0d9c\0\u0dd0\0\u0e04\0\u0618\0\u0e38\0\u0618\0\u0e6c"+
    "\0\u0618\0\u0618\0\u0618\0\u0618\0\u0ea0\0\u0618\0\u0ed4\0\u0618"+
    "\0\u0f08\0\u0f3c\0\u0f70\0\u0fa4\0\u0618\0\u0fd8\0\u0618\0\u0618"+
    "\0\u0618\0\u100c\0\u0618\0\u1040\0\u1074\0\u0618\0\u0618\0\u0618"+
    "\0\u10a8\0\u10dc\0\u0618\0\u0618\0\u1110\0\u0618\0\u0618\0\u1144"+
    "\0\u0618\0\u1178\0\u11ac\0\u11e0\0\u1214\0\u0618\0\u1248\0\u127c"+
    "\0\u0618\0\u0618\0\u0618\0\u12b0\0\u12e4\0\u1318\0\u134c\0\u1380"+
    "\0\u13b4\0\u13e8\0\u141c\0\u1450\0\u1484\0\u14b8\0\u14ec\0\u1520"+
    "\0\u1554\0\u1588\0\u15bc\0\u15f0\0\u1624\0\u1658\0\u168c\0\u16c0"+
    "\0\u16f4\0\u1728\0\u175c\0\u1790\0\u17c4\0\u17f8\0\u182c\0\u1860"+
    "\0\u1894\0\u18c8\0\u18fc\0\u1930\0\u1964\0\u0a5c\0\u0a28\0\u1998"+
    "\0\u0618\0\u0a5c\0\u19cc\0\u1a00\0\u1a34\0\u1a68\0\u0618\0\u1a9c"+
    "\0\u1ad0\0\u1b04\0\u1b38\0\u1b6c\0\u1ba0\0\u1bd4\0\u1c08\0\u0c98"+
    "\0\u0c64\0\u1c3c\0\u0c98\0\u1c70\0\u1ca4\0\u1cd8\0\u1d0c\0\u1d40"+
    "\0\u0e04\0\u1d74\0\u1da8\0\u1ddc\0\u1e10\0\u0618\0\u0618\0\u1e44"+
    "\0\u1e78\0\u1eac\0\u1ee0\0\u1f14\0\u1f48\0\u1f7c\0\u1fb0\0\u0618"+
    "\0\u1fe4\0\u2018\0\u204c\0\u2080\0\u20b4\0\u20e8\0\u10dc\0\u211c"+
    "\0\u2150\0\u2184\0\u21b8\0\u21ec\0\u2220\0\u2254\0\u2288\0\u22bc"+
    "\0\u22f0\0\u0618\0\u0a5c\0\u2324\0\u2358\0\u238c\0\u23c0\0\u23f4"+
    "\0\u2428\0\u245c\0\u2490\0\u24c4\0\u24f8\0\u252c\0\u2560\0\u2594"+
    "\0\u25c8\0\u25fc\0\u2630\0\u2664\0\u2698\0\u26cc\0\u2700\0\u2734"+
    "\0\u2768\0\u279c\0\u0618\0\u27d0\0\u2804\0\u2838\0\u0618\0\u286c"+
    "\0\u28a0\0\u28d4\0\u2908\0\u0618\0\u293c\0\u2970\0\u29a4\0\u29d8"+
    "\0\u0618\0\u2a0c\0\u2a40\0\u2a74\0\u2aa8\0\u2adc\0\u2b10\0\u2b44"+
    "\0\u2b78\0\u2bac\0\u2be0\0\u2c14\0\u0618\0\u2c48\0\u2c7c\0\u2cb0"+
    "\0\u2ce4\0\u2d18\0\u2d4c\0\u2d80\0\u2db4\0\u2de8\0\u2e1c\0\u2e50"+
    "\0\u2e84\0\u2eb8\0\u2eec\0\u0618\0\u2f20\0\u2f54\0\u2f88\0\u2fbc"+
    "\0\u2ff0\0\u3024\0\u3058\0\u308c\0\u30c0\0\u30f4\0\u3128\0\u315c"+
    "\0\u3190\0\u31c4\0\u31f8\0\u0618\0\u322c\0\u3260\0\u3294\0\u32c8"+
    "\0\u32fc\0\u3330\0\u3364\0\u3398\0\u33cc\0\u3400\0\u3434\0\u3468"+
    "\0\u349c\0\u34d0\0\u3504\0\u3538\0\u356c\0\u35a0\0\u35d4\0\u0618"+
    "\0\u3608\0\u363c\0\u3670\0\u36a4\0\u36d8\0\u0618\0\u370c\0\u0618"+
    "\0\u0618\0\u3740\0\u3774\0\u37a8\0\u0618\0\u37dc\0\u3810\0\u3844"+
    "\0\u3878\0\u38ac\0\u38e0\0\u3914\0\u3948\0\u397c\0\u0a5c\0\u39b0"+
    "\0\u39e4\0\u3a18\0\u3a4c\0\u0618\0\u3a80\0\u3ab4\0\u0c98\0\u3ae8"+
    "\0\u3b1c\0\u0c98\0\u3b50\0\u3b84\0\u3bb8\0\u3bec\0\u3c20\0\u3c54"+
    "\0\u0618\0\u3c88\0\u3cbc\0\u3cf0\0\u3d24\0\u3d58\0\u3d8c\0\u3dc0"+
    "\0\u3df4\0\u3e28\0\u3e5c\0\u0618\0\u3e90\0\u3ec4\0\u3ef8\0\u3f2c"+
    "\0\u3f60\0\u3f94\0\u3fc8\0\u3ffc\0\u4030\0\u4064\0\u4098\0\u40cc"+
    "\0\u4100\0\u4134\0\u4168\0\u419c\0\u0a5c\0\u41d0\0\u4204\0\u4238"+
    "\0\u426c\0\u42a0\0\u42d4\0\u4308\0\u0618\0\u433c\0\u0618\0\u4370"+
    "\0\u43a4\0\u43d8\0\u440c\0\u4440\0\u4474\0\u44a8\0\u44dc\0\u0618"+
    "\0\u0618\0\u4510\0\u4544\0\u4578\0\u45ac\0\u45e0\0\u4614\0\u4648"+
    "\0\u467c\0\u0618\0\u46b0\0\u46e4\0\u4718\0\u474c\0\u0a5c\0\u4780"+
    "\0\u47b4\0\u0618\0\u0a5c\0\u0a5c\0\u0618\0\u0618\0\u47e8\0\u481c"+
    "\0\u0c98\0\u4850\0\u0618\0\u0c98\0\u0c98\0\u4884\0\u48b8\0\u48ec"+
    "\0\u0618\0\u4920\0\u4954\0\u4988\0\u49bc\0\u49f0\0\u0618\0\u4a24"+
    "\0\u0618\0\u4a58\0\u4a8c\0\u0618\0\u4ac0\0\u4af4\0\u4b28\0\u4b5c"+
    "\0\u4b90\0\u4bc4\0\u4bf8\0\u0a5c\0\u4c2c\0\u4c60\0\u0a5c\0\u0a5c"+
    "\0\u0618\0\u4c94\0\u0618\0\u0618\0\u4cc8\0\u4cfc\0\u0618\0\u4d30"+
    "\0\u4d64\0\u4d98\0\u4dcc\0\u4e00\0\u4e34\0\u4e68\0\u4e9c\0\u4ed0"+
    "\0\u4f04\0\u4f38\0\u4f6c\0\u0618\0\u4fa0\0\u4fd4\0\u5008\0\u503c"+
    "\0\u5070\0\u50a4\0\u50d8\0\u510c\0\u5140\0\u5174\0\u51a8\0\u51dc"+
    "\0\u5210\0\u5244\0\u5278\0\u52ac\0\u52e0\0\u5314\0\u5348\0\u537c"+
    "\0\u53b0\0\u53e4\0\u0618\0\u0618\0\u0618\0\u5418\0\u544c\0\u5480"+
    "\0\u54b4\0\u54e8\0\u551c\0\u5550\0\u5584\0\u55b8\0\u55ec\0\u5620"+
    "\0\u5654\0\u0618\0\u5688\0\u56bc\0\u56f0\0\u5724\0\u5758\0\u578c"+
    "\0\u57c0\0\u57f4\0\u5828\0\u585c\0\u0618\0\u5890\0\u58c4\0\u58f8"+
    "\0\u592c\0\u0618\0\u5960\0\u5994\0\u59c8\0\u59fc\0\u5a30\0\u5a64"+
    "\0\u5a98\0\u5acc\0\u5b00\0\u5b34\0\u5b68\0\u5b9c\0\u5bd0\0\u5c04"+
    "\0\u5c38\0\u5c6c\0\u5ca0\0\u5cd4\0\u5d08\0\u5d3c\0\u5d70\0\u5da4"+
    "\0\u5dd8\0\u5e0c\0\u5e40\0\u5e74\0\u5ea8\0\u5edc\0\u5f10\0\u5f44"+
    "\0\u5f78\0\u5fac\0\u5fe0\0\u6014\0\u6048\0\u607c\0\u60b0\0\u60e4"+
    "\0\u0618\0\u6118\0\u0618\0\u614c\0\u6180\0\u61b4\0\u61e8\0\u621c"+
    "\0\u0618\0\u0a5c\0\u0618\0\u0c98\0\u6250\0\u6284\0\u62b8\0\u62ec"+
    "\0\u6320\0\u6354\0\u6388\0\u0618\0\u63bc\0\u63f0\0\u6424\0\u6458"+
    "\0\u648c\0\u64c0\0\u0618\0\u0a5c\0\u64f4\0\u6528\0\u655c\0\u6590"+
    "\0\u65c4\0\u0618\0\u65f8\0\u662c\0\u0618\0\u0618\0\u6660\0\u0618"+
    "\0\u6694\0\u66c8\0\u66fc\0\u0618\0\u6730\0\u0618\0\u0618\0\u6764"+
    "\0\u0618\0\u6798\0\u0618\0\u67cc\0\u0618\0\u0618\0\u0618\0\u0618"+
    "\0\u0618\0\u6800\0\u6834\0\u0618\0\u6868\0\u689c\0\u0618\0\u68d0"+
    "\0\u0618\0\u6904\0\u0618\0\u6938\0\u696c\0\u0618\0\u0618\0\u69a0"+
    "\0\u69d4\0\u6a08\0\u6a3c\0\u6a70\0\u0618\0\u0618";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[670];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\37\1\40\1\41\20\37\2\42\3\37\1\43\3\37"+
    "\1\44\2\37\1\45\1\46\1\47\1\50\2\37\1\51"+
    "\1\52\1\53\3\37\2\54\5\37\2\0\1\55\1\56"+
    "\1\41\11\55\1\37\1\57\4\55\1\37\41\55\1\37"+
    "\1\56\1\41\37\37\1\60\17\37\2\0\1\37\1\61"+
    "\1\41\4\37\1\62\21\37\1\63\2\37\1\64\2\37"+
    "\1\65\1\37\1\66\1\67\2\37\1\70\10\37\1\71"+
    "\1\72\2\37\2\0\1\37\1\56\1\41\4\37\1\73"+
    "\32\37\1\74\2\37\1\75\10\37\1\71\1\72\2\37"+
    "\2\0\1\37\1\56\1\41\37\37\1\76\17\37\2\0"+
    "\1\37\1\77\1\41\20\100\1\37\27\100\1\37\4\100"+
    "\1\37\2\100\1\0\1\37\1\56\1\41\36\37\1\101"+
    "\20\37\2\0\1\37\1\56\1\41\4\37\1\102\1\103"+
    "\5\37\1\104\4\37\1\105\1\106\6\104\1\107\1\110"+
    "\4\104\1\37\1\111\6\104\1\112\1\104\1\37\2\104"+
    "\1\113\1\114\1\37\1\104\2\0\1\37\1\56\1\41"+
    "\4\37\1\102\13\37\2\115\6\37\1\116\6\37\1\117"+
    "\6\37\1\120\4\37\1\113\1\114\2\37\2\0\1\37"+
    "\1\77\1\41\20\121\1\37\27\121\1\37\4\121\1\37"+
    "\2\121\1\0\1\37\1\56\1\41\4\37\1\122\1\123"+
    "\5\37\1\124\4\37\1\105\1\125\4\124\1\126\1\124"+
    "\1\127\1\130\4\124\1\37\1\131\6\124\1\132\1\124"+
    "\1\37\2\124\1\113\1\114\1\37\1\124\2\0\1\37"+
    "\1\56\1\41\5\37\1\133\5\37\1\134\5\37\15\134"+
    "\1\135\1\37\2\134\1\136\5\134\1\37\2\134\3\37"+
    "\1\134\2\0\1\37\1\56\1\41\4\37\1\122\1\123"+
    "\5\37\1\124\4\37\1\105\1\125\4\124\1\126\1\124"+
    "\1\127\1\130\4\124\1\37\1\137\6\124\1\132\1\124"+
    "\1\37\2\124\1\113\1\114\1\37\1\124\2\0\1\37"+
    "\1\56\1\41\4\37\1\122\13\37\2\105\4\37\1\140"+
    "\1\37\1\116\6\37\1\141\6\37\1\120\4\37\1\113"+
    "\1\114\2\37\2\0\1\37\1\56\1\41\4\37\1\102"+
    "\13\37\2\105\6\37\1\116\6\37\1\142\6\37\1\120"+
    "\4\37\1\113\1\114\2\37\2\0\1\37\1\56\1\41"+
    "\36\37\1\143\1\144\2\37\1\145\14\37\2\0\1\37"+
    "\1\56\1\41\4\37\1\102\13\37\2\105\6\37\1\116"+
    "\6\37\1\146\6\37\1\120\4\37\1\113\1\114\2\37"+
    "\2\0\1\37\1\56\1\41\31\37\1\147\4\37\1\143"+
    "\1\150\2\37\1\151\14\37\2\0\1\37\1\56\1\41"+
    "\4\37\1\152\13\37\2\153\6\37\1\154\6\37\1\155"+
    "\6\37\1\156\4\37\1\157\1\160\2\37\2\0\1\37"+
    "\1\77\1\41\20\161\1\37\27\161\1\37\4\161\1\37"+
    "\2\161\1\0\1\37\1\56\1\41\20\37\2\162\14\37"+
    "\1\163\3\37\1\164\1\165\13\37\2\0\1\37\1\56"+
    "\1\41\4\37\1\122\1\123\5\37\1\124\4\37\1\105"+
    "\1\125\4\124\1\126\1\124\1\127\1\130\4\124\1\37"+
    "\1\166\6\124\1\132\1\124\1\37\2\124\1\113\1\114"+
    "\1\37\1\124\2\0\1\37\1\77\1\41\20\167\1\37"+
    "\27\167\1\37\4\167\1\37\2\167\1\0\1\37\1\56"+
    "\1\41\4\37\1\122\1\123\5\37\1\124\4\37\1\105"+
    "\1\125\4\124\1\126\1\124\1\127\1\130\4\124\1\37"+
    "\1\170\6\124\1\132\1\124\1\37\2\124\1\113\1\114"+
    "\1\37\1\124\2\0\1\37\1\56\1\41\5\37\1\171"+
    "\5\37\1\172\5\37\15\172\1\173\1\174\2\172\1\175"+
    "\5\172\1\37\2\172\3\37\1\172\2\0\1\37\1\56"+
    "\1\41\36\37\1\176\1\177\2\37\1\200\14\37\2\0"+
    "\1\37\1\56\1\41\4\37\1\102\13\37\2\105\6\37"+
    "\1\116\6\37\1\201\6\37\1\120\4\37\1\113\1\114"+
    "\2\37\2\0\1\37\1\56\1\41\4\37\1\202\1\103"+
    "\5\37\1\104\4\37\1\203\1\204\6\104\1\205\1\110"+
    "\4\104\1\37\1\206\6\104\1\207\1\104\1\37\1\104"+
    "\1\210\1\211\1\212\1\37\1\104\2\0\1\37\1\77"+
    "\1\41\20\213\1\37\27\213\1\37\4\213\1\37\2\213"+
    "\130\0\1\214\56\0\1\215\54\0\1\216\3\0\1\217"+
    "\1\0\1\220\56\0\1\221\2\0\1\222\77\0\1\223"+
    "\36\0\1\224\64\0\2\225\77\0\1\226\56\0\1\227"+
    "\63\0\1\230\13\0\1\231\36\0\1\232\51\0\1\233"+
    "\5\0\1\234\5\0\15\234\2\0\10\234\1\0\2\234"+
    "\3\0\1\234\31\0\1\235\70\0\1\236\15\0\1\237"+
    "\34\0\2\240\62\0\2\241\42\0\1\242\4\0\1\243"+
    "\5\0\1\244\2\0\1\245\2\0\15\244\2\0\10\244"+
    "\1\0\2\244\3\0\1\244\42\0\1\246\26\0\1\247"+
    "\4\0\1\250\5\0\1\251\4\0\1\252\1\253\5\251"+
    "\1\254\1\251\1\255\4\251\2\0\10\251\1\0\2\251"+
    "\3\0\1\251\13\0\1\256\55\0\1\256\4\0\1\257"+
    "\1\0\1\260\2\0\2\256\1\0\1\256\3\0\15\256"+
    "\2\0\10\256\1\0\2\256\3\0\1\256\34\0\1\261"+
    "\34\0\1\256\4\0\1\257\1\0\1\260\2\0\2\256"+
    "\1\0\1\256\3\0\6\256\1\262\6\256\2\0\10\256"+
    "\1\0\2\256\3\0\1\256\5\0\1\256\4\0\1\257"+
    "\1\0\1\260\2\0\2\256\1\0\1\256\3\0\12\256"+
    "\1\263\2\256\2\0\1\256\1\264\6\256\1\0\2\256"+
    "\3\0\1\256\5\0\1\256\4\0\1\257\1\0\1\260"+
    "\2\0\2\256\1\0\1\256\3\0\15\256\2\0\1\256"+
    "\1\265\6\256\1\0\2\256\3\0\1\256\5\0\1\256"+
    "\4\0\1\257\1\0\1\260\2\0\2\256\1\0\1\256"+
    "\3\0\5\256\1\266\7\256\2\0\10\256\1\0\2\256"+
    "\3\0\1\256\34\0\1\267\67\0\1\270\5\0\1\271"+
    "\50\0\1\272\35\0\1\247\4\0\1\273\5\0\1\274"+
    "\4\0\1\252\1\275\5\274\1\276\1\274\1\277\4\274"+
    "\2\0\10\274\1\0\2\274\3\0\1\274\13\0\1\300"+
    "\55\0\1\300\4\0\1\301\1\0\1\302\2\0\2\300"+
    "\1\0\1\300\3\0\15\300\2\0\10\300\1\0\2\300"+
    "\3\0\1\300\5\0\1\300\4\0\1\301\1\0\1\302"+
    "\2\0\2\300\1\0\1\300\3\0\6\300\1\303\6\300"+
    "\2\0\10\300\1\0\2\300\3\0\1\300\5\0\1\300"+
    "\4\0\1\301\1\0\1\302\2\0\2\300\1\0\1\300"+
    "\3\0\3\300\1\304\11\300\2\0\10\300\1\0\2\300"+
    "\3\0\1\300\5\0\1\300\4\0\1\301\1\0\1\302"+
    "\2\0\2\300\1\0\1\300\3\0\12\300\1\305\2\300"+
    "\2\0\1\300\1\306\6\300\1\0\2\300\3\0\1\300"+
    "\5\0\1\300\4\0\1\301\1\0\1\302\2\0\2\300"+
    "\1\0\1\300\3\0\15\300\2\0\1\300\1\307\6\300"+
    "\1\0\2\300\3\0\1\300\5\0\1\300\4\0\1\301"+
    "\1\0\1\302\2\0\2\300\1\0\1\300\3\0\5\300"+
    "\1\310\7\300\2\0\10\300\1\0\2\300\3\0\1\300"+
    "\13\0\1\311\60\0\1\312\63\0\1\312\14\0\2\313"+
    "\66\0\1\314\57\0\2\315\76\0\1\316\6\0\1\317"+
    "\40\0\2\320\42\0\1\321\4\0\1\322\5\0\1\323"+
    "\4\0\1\324\1\325\5\323\1\326\1\323\1\327\4\323"+
    "\2\0\10\323\1\0\2\323\3\0\1\323\34\0\1\330"+
    "\67\0\1\331\5\0\1\332\50\0\1\333\75\0\1\334"+
    "\43\0\2\335\77\0\1\336\34\0\1\337\60\0\1\340"+
    "\63\0\1\340\14\0\2\341\62\0\2\342\42\0\1\343"+
    "\4\0\1\344\5\0\1\345\4\0\1\346\1\347\5\345"+
    "\1\350\1\345\1\351\4\345\2\0\10\345\1\0\2\345"+
    "\3\0\1\345\34\0\1\352\34\0\1\256\4\0\1\257"+
    "\1\0\1\260\2\0\2\256\1\0\1\256\3\0\6\256"+
    "\1\353\6\256\2\0\10\256\1\0\2\256\3\0\1\256"+
    "\5\0\1\256\4\0\1\257\1\0\1\260\2\0\2\256"+
    "\1\0\1\256\3\0\12\256\1\354\2\256\2\0\1\256"+
    "\1\355\6\256\1\0\2\256\3\0\1\256\5\0\1\256"+
    "\4\0\1\257\1\0\1\260\2\0\2\256\1\0\1\256"+
    "\3\0\5\256\1\356\7\256\2\0\10\256\1\0\2\256"+
    "\3\0\1\256\5\0\1\256\4\0\1\257\1\0\1\260"+
    "\2\0\2\256\1\0\1\256\3\0\7\256\1\357\5\256"+
    "\2\0\10\256\1\0\2\256\3\0\1\256\35\0\1\360"+
    "\64\0\1\361\7\0\1\362\47\0\1\363\105\0\1\364"+
    "\50\0\1\365\74\0\1\366\61\0\1\367\51\0\1\370"+
    "\51\0\1\371\77\0\1\372\64\0\1\373\62\0\1\374"+
    "\71\0\1\375\42\0\2\376\61\0\1\377\52\0\1\234"+
    "\60\0\1\u0100\114\0\1\u0101\77\0\2\u0102\62\0\2\u0103"+
    "\46\0\1\u0104\62\0\1\u0105\30\0\1\242\1\u0106\2\0"+
    "\1\u0107\65\0\1\244\55\0\1\244\3\0\1\u0107\1\243"+
    "\4\0\2\244\1\0\1\244\3\0\15\244\2\0\10\244"+
    "\1\0\2\244\3\0\1\244\5\0\1\245\4\0\1\u0108"+
    "\5\0\1\u0109\5\0\15\u0109\2\0\10\u0109\1\0\2\u0109"+
    "\3\0\1\u0109\40\0\1\u010a\30\0\1\247\1\u010b\2\0"+
    "\1\u010c\65\0\1\251\55\0\1\251\3\0\1\u010c\1\250"+
    "\4\0\2\251\1\0\1\251\3\0\15\251\2\0\10\251"+
    "\1\0\2\251\3\0\1\251\27\0\1\u010d\41\0\1\251"+
    "\3\0\1\u010c\1\250\4\0\2\251\1\0\1\251\3\0"+
    "\1\251\1\u010e\13\251\2\0\10\251\1\0\2\251\3\0"+
    "\1\251\5\0\1\251\3\0\1\u010c\1\250\4\0\2\251"+
    "\1\0\1\251\3\0\4\251\1\u010f\10\251\2\0\10\251"+
    "\1\0\2\251\3\0\1\251\5\0\1\251\3\0\1\u010c"+
    "\1\250\4\0\2\251\1\0\1\251\3\0\4\251\1\u0110"+
    "\10\251\2\0\10\251\1\0\2\251\3\0\1\251\15\0"+
    "\1\u0111\53\0\1\256\4\0\1\257\1\0\1\260\2\0"+
    "\2\256\1\0\1\256\3\0\10\256\1\u0112\4\256\2\0"+
    "\10\256\1\0\2\256\3\0\1\256\5\0\1\256\4\0"+
    "\1\257\1\0\1\260\2\0\2\256\1\0\1\256\2\0"+
    "\1\u0113\1\u0114\12\256\1\u0115\1\256\2\0\10\256\1\0"+
    "\2\256\3\0\1\256\5\0\1\256\4\0\1\257\1\0"+
    "\1\260\2\0\2\256\1\0\1\256\2\0\1\u0116\1\u0117"+
    "\14\256\2\0\10\256\1\0\2\256\3\0\1\256\5\0"+
    "\1\256\4\0\1\257\1\0\1\260\2\0\2\256\1\0"+
    "\1\256\3\0\3\256\1\u0118\11\256\2\0\10\256\1\0"+
    "\2\256\3\0\1\256\36\0\1\u0119\52\0\2\u0113\12\0"+
    "\1\u011a\53\0\1\u011b\45\0\1\274\55\0\1\251\2\0"+
    "\1\u011c\1\u010c\1\250\4\0\2\251\1\0\1\251\3\0"+
    "\15\251\2\0\10\251\1\0\2\251\3\0\1\251\5\0"+
    "\1\251\2\0\1\u011c\1\u010c\1\250\4\0\2\251\1\0"+
    "\1\251\3\0\1\251\1\u010e\13\251\2\0\10\251\1\0"+
    "\2\251\3\0\1\251\5\0\1\251\2\0\1\u011c\1\u010c"+
    "\1\250\4\0\2\251\1\0\1\251\3\0\4\251\1\u010f"+
    "\10\251\2\0\10\251\1\0\2\251\3\0\1\251\5\0"+
    "\1\251\2\0\1\u011c\1\u010c\1\250\4\0\2\251\1\0"+
    "\1\251\3\0\4\251\1\u0110\10\251\2\0\10\251\1\0"+
    "\2\251\3\0\1\251\15\0\1\u011d\53\0\1\300\4\0"+
    "\1\301\1\0\1\302\2\0\2\300\1\0\1\300\3\0"+
    "\13\300\1\u011e\1\300\2\0\10\300\1\0\2\300\3\0"+
    "\1\300\5\0\1\300\4\0\1\301\1\0\1\302\2\0"+
    "\2\300\1\0\1\300\3\0\10\300\1\u011f\4\300\2\0"+
    "\10\300\1\0\2\300\3\0\1\300\5\0\1\300\4\0"+
    "\1\301\1\0\1\302\2\0\2\300\1\0\1\300\2\0"+
    "\1\u0113\1\u0120\12\300\1\u0121\1\300\2\0\10\300\1\0"+
    "\2\300\3\0\1\300\5\0\1\300\4\0\1\301\1\0"+
    "\1\302\2\0\2\300\1\0\1\300\2\0\1\u0122\1\u0123"+
    "\14\300\2\0\10\300\1\0\2\300\3\0\1\300\5\0"+
    "\1\300\4\0\1\301\1\0\1\302\2\0\2\300\1\0"+
    "\1\300\3\0\3\300\1\u0124\11\300\2\0\10\300\1\0"+
    "\2\300\3\0\1\300\21\0\1\u0125\102\0\1\u0126\64\0"+
    "\1\u0127\62\0\1\u0128\5\0\1\u0129\55\0\1\u012a\30\0"+
    "\1\321\1\u012b\2\0\1\u012c\65\0\1\323\55\0\1\323"+
    "\3\0\1\u012c\1\322\4\0\2\323\1\0\1\323\3\0"+
    "\15\323\2\0\10\323\1\0\2\323\3\0\1\323\27\0"+
    "\1\u012d\41\0\1\323\3\0\1\u012c\1\322\4\0\2\323"+
    "\1\0\1\323\3\0\1\323\1\u012e\13\323\2\0\10\323"+
    "\1\0\2\323\3\0\1\323\5\0\1\323\3\0\1\u012c"+
    "\1\322\4\0\2\323\1\0\1\323\3\0\4\323\1\u012f"+
    "\10\323\2\0\10\323\1\0\2\323\3\0\1\323\5\0"+
    "\1\323\3\0\1\u012c\1\322\4\0\2\323\1\0\1\323"+
    "\3\0\4\323\1\u0130\10\323\2\0\10\323\1\0\2\323"+
    "\3\0\1\323\36\0\1\u0131\52\0\2\u0132\12\0\1\u0133"+
    "\53\0\1\u0134\67\0\1\u0135\66\0\1\u0136\64\0\1\u0137"+
    "\43\0\1\u0138\102\0\1\u0139\63\0\1\u013a\30\0\1\343"+
    "\1\u013b\2\0\1\u013c\65\0\1\345\55\0\1\345\3\0"+
    "\1\u013c\1\344\4\0\2\345\1\0\1\345\3\0\15\345"+
    "\2\0\10\345\1\0\2\345\3\0\1\345\27\0\1\u013d"+
    "\41\0\1\345\3\0\1\u013c\1\344\4\0\2\345\1\0"+
    "\1\345\3\0\1\345\1\u013e\13\345\2\0\10\345\1\0"+
    "\2\345\3\0\1\345\5\0\1\345\3\0\1\u013c\1\344"+
    "\4\0\2\345\1\0\1\345\3\0\4\345\1\u013f\10\345"+
    "\2\0\10\345\1\0\2\345\3\0\1\345\5\0\1\345"+
    "\3\0\1\u013c\1\344\4\0\2\345\1\0\1\345\3\0"+
    "\4\345\1\u0140\10\345\2\0\10\345\1\0\2\345\3\0"+
    "\1\345\5\0\1\256\4\0\1\257\1\0\1\260\2\0"+
    "\2\256\1\0\1\256\3\0\10\256\1\u0141\4\256\2\0"+
    "\10\256\1\0\2\256\3\0\1\256\5\0\1\256\4\0"+
    "\1\257\1\0\1\260\2\0\2\256\1\0\1\256\2\0"+
    "\1\u0142\1\u0143\12\256\1\u0144\1\256\2\0\10\256\1\0"+
    "\2\256\3\0\1\256\5\0\1\256\4\0\1\257\1\0"+
    "\1\260\2\0\2\256\1\0\1\256\3\0\3\256\1\u0145"+
    "\11\256\2\0\10\256\1\0\2\256\3\0\1\256\5\0"+
    "\1\256\4\0\1\257\1\0\1\260\2\0\2\256\1\0"+
    "\1\256\3\0\15\256\2\0\1\256\1\u0146\6\256\1\0"+
    "\2\256\3\0\1\256\53\0\1\u0147\45\0\1\u0148\63\0"+
    "\1\u0149\61\0\1\u014a\65\0\1\u014b\73\0\1\u014c\57\0"+
    "\1\u014d\70\0\1\u014e\42\0\2\u014f\54\0\1\u0150\63\0"+
    "\1\u0151\106\0\1\u0152\53\0\1\u0153\72\0\1\u0154\62\0"+
    "\1\u0155\67\0\1\u0156\40\0\1\u0157\77\0\1\u0158\103\0"+
    "\2\u0159\36\0\1\u015a\51\0\1\u015b\51\0\1\u015c\71\0"+
    "\1\u0109\55\0\1\u0109\3\0\1\u015d\1\u0108\4\0\2\u0109"+
    "\1\0\1\u0109\3\0\15\u0109\2\0\10\u0109\1\0\2\u0109"+
    "\3\0\1\u0109\34\0\1\u015e\34\0\1\u015f\106\0\1\u0160"+
    "\40\0\1\251\3\0\1\u010c\1\250\4\0\2\251\1\0"+
    "\1\251\3\0\2\251\1\u0161\12\251\2\0\10\251\1\0"+
    "\2\251\3\0\1\251\5\0\1\251\3\0\1\u010c\1\250"+
    "\4\0\2\251\1\0\1\251\3\0\5\251\1\u0162\7\251"+
    "\2\0\10\251\1\0\2\251\3\0\1\251\5\0\1\251"+
    "\3\0\1\u010c\1\250\4\0\2\251\1\0\1\251\3\0"+
    "\12\251\1\u0163\2\251\2\0\10\251\1\0\2\251\3\0"+
    "\1\251\5\0\1\256\4\0\1\257\1\0\1\260\2\0"+
    "\2\256\1\0\1\256\3\0\11\256\1\u0164\3\256\2\0"+
    "\10\256\1\0\2\256\3\0\1\256\40\0\1\u0165\30\0"+
    "\1\256\4\0\1\257\1\0\1\260\2\0\2\256\1\0"+
    "\1\256\3\0\12\256\1\u0166\2\256\2\0\10\256\1\0"+
    "\2\256\3\0\1\256\5\0\1\256\4\0\1\257\1\0"+
    "\1\260\2\0\2\256\1\0\1\256\3\0\14\256\1\u0167"+
    "\2\0\10\256\1\0\2\256\3\0\1\256\36\0\1\u0168"+
    "\32\0\1\256\4\0\1\257\1\0\1\260\2\0\2\256"+
    "\1\0\1\256\3\0\10\256\1\u0169\4\256\2\0\10\256"+
    "\1\0\2\256\3\0\1\256\5\0\1\256\4\0\1\257"+
    "\1\0\1\260\2\0\2\256\1\0\1\256\3\0\15\256"+
    "\2\0\4\256\1\u016a\3\256\1\0\2\256\3\0\1\256"+
    "\37\0\1\u016b\66\0\1\u016c\72\0\1\u016d\33\0\1\u016e"+
    "\47\0\1\300\4\0\1\301\1\0\1\302\2\0\2\300"+
    "\1\0\1\300\3\0\7\300\1\u016f\5\300\2\0\10\300"+
    "\1\0\2\300\3\0\1\300\5\0\1\300\4\0\1\301"+
    "\1\0\1\302\2\0\2\300\1\0\1\300\3\0\11\300"+
    "\1\u0170\3\300\2\0\10\300\1\0\2\300\3\0\1\300"+
    "\5\0\1\300\4\0\1\301\1\0\1\302\2\0\2\300"+
    "\1\0\1\300\3\0\12\300\1\u0171\2\300\2\0\10\300"+
    "\1\0\2\300\3\0\1\300\5\0\1\300\4\0\1\301"+
    "\1\0\1\302\2\0\2\300\1\0\1\300\3\0\14\300"+
    "\1\u0172\2\0\10\300\1\0\2\300\3\0\1\300\36\0"+
    "\1\u0173\32\0\1\300\4\0\1\301\1\0\1\302\2\0"+
    "\2\300\1\0\1\300\3\0\10\300\1\u0174\4\300\2\0"+
    "\10\300\1\0\2\300\3\0\1\300\5\0\1\300\4\0"+
    "\1\301\1\0\1\302\2\0\2\300\1\0\1\300\3\0"+
    "\15\300\2\0\4\300\1\u0175\3\300\1\0\2\300\3\0"+
    "\1\300\12\0\1\u0176\5\0\1\u0177\5\0\15\u0177\2\0"+
    "\10\u0177\1\0\2\u0177\3\0\1\u0177\17\0\1\u0178\101\0"+
    "\1\u0179\45\0\1\u017a\66\0\1\u017b\60\0\1\u017c\51\0"+
    "\1\u017d\106\0\1\u017e\40\0\1\323\3\0\1\u012c\1\322"+
    "\4\0\2\323\1\0\1\323\3\0\2\323\1\u017f\12\323"+
    "\2\0\10\323\1\0\2\323\3\0\1\323\5\0\1\323"+
    "\3\0\1\u012c\1\322\4\0\2\323\1\0\1\323\3\0"+
    "\5\323\1\u0180\7\323\2\0\10\323\1\0\2\323\3\0"+
    "\1\323\5\0\1\323\3\0\1\u012c\1\322\4\0\2\323"+
    "\1\0\1\323\3\0\12\323\1\u0181\2\323\2\0\10\323"+
    "\1\0\2\323\3\0\1\323\37\0\1\u0182\64\0\1\u0183"+
    "\65\0\1\u0184\72\0\1\u0185\65\0\1\u0186\27\0\1\u0187"+
    "\106\0\1\u0188\33\0\1\u0189\5\0\1\u018a\5\0\15\u018a"+
    "\2\0\10\u018a\1\0\2\u018a\3\0\1\u018a\17\0\1\u018b"+
    "\63\0\1\u018c\51\0\1\u018d\106\0\1\u018e\40\0\1\345"+
    "\3\0\1\u013c\1\344\4\0\2\345\1\0\1\345\3\0"+
    "\2\345\1\u018f\12\345\2\0\10\345\1\0\2\345\3\0"+
    "\1\345\5\0\1\345\3\0\1\u013c\1\344\4\0\2\345"+
    "\1\0\1\345\3\0\5\345\1\u0190\7\345\2\0\10\345"+
    "\1\0\2\345\3\0\1\345\5\0\1\345\3\0\1\u013c"+
    "\1\344\4\0\2\345\1\0\1\345\3\0\12\345\1\u0191"+
    "\2\345\2\0\10\345\1\0\2\345\3\0\1\345\5\0"+
    "\1\256\4\0\1\257\1\0\1\260\2\0\2\256\1\0"+
    "\1\256\3\0\11\256\1\u0192\3\256\2\0\10\256\1\0"+
    "\2\256\3\0\1\256\40\0\1\u0193\30\0\1\256\4\0"+
    "\1\257\1\0\1\260\2\0\2\256\1\0\1\256\3\0"+
    "\12\256\1\u0194\2\256\2\0\10\256\1\0\2\256\3\0"+
    "\1\256\5\0\1\256\4\0\1\257\1\0\1\260\2\0"+
    "\2\256\1\0\1\256\3\0\14\256\1\u0195\2\0\10\256"+
    "\1\0\2\256\3\0\1\256\5\0\1\256\4\0\1\257"+
    "\1\0\1\260\2\0\2\256\1\0\1\256\3\0\15\256"+
    "\2\0\4\256\1\u0196\3\256\1\0\2\256\3\0\1\256"+
    "\5\0\1\256\4\0\1\257\1\0\1\260\2\0\2\256"+
    "\1\0\1\256\3\0\14\256\1\u0197\2\0\10\256\1\0"+
    "\2\256\3\0\1\256\32\0\1\u0198\101\0\1\u0199\51\0"+
    "\1\u019a\76\0\1\u019b\34\0\1\u019c\107\0\1\u019d\57\0"+
    "\1\u019e\56\0\1\u019f\70\0\1\u01a0\53\0\1\u01a1\3\0"+
    "\1\u01a2\2\0\1\u01a3\1\u01a4\5\0\1\u01a5\1\u01a6\3\0"+
    "\2\u01a7\45\0\1\u01a8\71\0\1\u01a9\57\0\1\u01aa\61\0"+
    "\1\u01ab\35\0\1\u01ac\5\0\1\u01ad\5\0\15\u01ad\2\0"+
    "\10\u01ad\1\0\2\u01ad\3\0\1\u01ad\46\0\1\u01ae\47\0"+
    "\1\u01af\3\0\1\u01b0\2\0\1\u01b1\27\0\1\u015c\3\0"+
    "\1\u0107\114\0\1\u01b2\26\0\1\u015f\3\0\1\u010c\103\0"+
    "\1\u01b3\37\0\1\251\3\0\1\u010c\1\250\4\0\2\251"+
    "\1\0\1\251\3\0\3\251\1\u01b4\11\251\2\0\10\251"+
    "\1\0\2\251\3\0\1\251\5\0\1\251\3\0\1\u010c"+
    "\1\250\4\0\2\251\1\0\1\251\3\0\4\251\1\u01b5"+
    "\10\251\2\0\10\251\1\0\2\251\3\0\1\251\5\0"+
    "\1\251\3\0\1\u010c\1\250\4\0\2\251\1\0\1\251"+
    "\3\0\13\251\1\u01b6\1\251\2\0\10\251\1\0\2\251"+
    "\3\0\1\251\5\0\1\256\4\0\1\257\1\0\1\260"+
    "\2\0\2\256\1\0\1\256\3\0\14\256\1\u01b7\2\0"+
    "\10\256\1\0\2\256\3\0\1\256\32\0\1\u01b8\36\0"+
    "\1\256\4\0\1\257\1\0\1\260\2\0\2\256\1\0"+
    "\1\256\3\0\4\256\1\u01b9\10\256\2\0\10\256\1\0"+
    "\2\256\3\0\1\256\62\0\2\u01ba\5\0\1\256\4\0"+
    "\1\257\1\0\1\260\2\0\2\256\1\0\1\256\3\0"+
    "\15\256\2\0\10\256\1\0\2\256\2\0\1\u01ba\1\u01bb"+
    "\5\0\1\256\4\0\1\257\1\0\1\260\2\0\2\256"+
    "\1\0\1\256\3\0\14\256\1\u01bc\2\0\10\256\1\0"+
    "\2\256\3\0\1\256\42\0\1\u01bd\63\0\1\u01be\33\0"+
    "\1\u01bf\5\0\1\u01c0\5\0\15\u01c0\2\0\10\u01c0\1\0"+
    "\2\u01c0\3\0\1\u01c0\5\0\1\300\4\0\1\301\1\0"+
    "\1\302\2\0\2\300\1\0\1\300\3\0\14\300\1\u01c1"+
    "\2\0\10\300\1\0\2\300\3\0\1\300\5\0\1\300"+
    "\4\0\1\301\1\0\1\302\2\0\2\300\1\0\1\300"+
    "\3\0\4\300\1\u01c2\10\300\2\0\10\300\1\0\2\300"+
    "\3\0\1\300\62\0\2\u01c3\5\0\1\300\4\0\1\301"+
    "\1\0\1\302\2\0\2\300\1\0\1\300\3\0\15\300"+
    "\2\0\10\300\1\0\2\300\2\0\1\u01c3\1\u01c4\5\0"+
    "\1\300\4\0\1\301\1\0\1\302\2\0\2\300\1\0"+
    "\1\300\3\0\14\300\1\u01c5\2\0\10\300\1\0\2\300"+
    "\3\0\1\300\13\0\1\u0177\55\0\1\u0177\1\u01c6\3\0"+
    "\1\u0176\4\0\2\u0177\1\u0125\1\u0177\3\0\15\u0177\2\0"+
    "\10\u0177\1\0\2\u0177\3\0\1\u0177\25\0\2\u01c7\76\0"+
    "\1\u01c8\63\0\1\u01c9\71\0\1\u01ca\21\0\1\u017d\3\0"+
    "\1\u012c\103\0\1\u01cb\37\0\1\323\3\0\1\u012c\1\322"+
    "\4\0\2\323\1\0\1\323\3\0\3\323\1\u01cc\11\323"+
    "\2\0\10\323\1\0\2\323\3\0\1\323\5\0\1\323"+
    "\3\0\1\u012c\1\322\4\0\2\323\1\0\1\323\3\0"+
    "\4\323\1\u01cd\10\323\2\0\10\323\1\0\2\323\3\0"+
    "\1\323\5\0\1\323\3\0\1\u012c\1\322\4\0\2\323"+
    "\1\0\1\323\3\0\13\323\1\u01ce\1\323\2\0\10\323"+
    "\1\0\2\323\3\0\1\323\42\0\1\u01cf\53\0\1\u01d0"+
    "\73\0\1\u01d1\53\0\1\u01d2\67\0\1\u01d3\65\0\1\u01d4"+
    "\36\0\1\u018a\55\0\1\u018a\1\u01d5\3\0\1\u0189\4\0"+
    "\2\u018a\1\u0138\1\u018a\3\0\15\u018a\2\0\10\u018a\1\0"+
    "\2\u018a\3\0\1\u018a\25\0\2\u01d6\105\0\1\u01d7\20\0"+
    "\1\u018d\3\0\1\u013c\103\0\1\u01d8\37\0\1\345\3\0"+
    "\1\u013c\1\344\4\0\2\345\1\0\1\345\3\0\3\345"+
    "\1\u01d9\11\345\2\0\10\345\1\0\2\345\3\0\1\345"+
    "\5\0\1\345\3\0\1\u013c\1\344\4\0\2\345\1\0"+
    "\1\345\3\0\4\345\1\u01da\10\345\2\0\10\345\1\0"+
    "\2\345\3\0\1\345\5\0\1\345\3\0\1\u013c\1\344"+
    "\4\0\2\345\1\0\1\345\3\0\13\345\1\u01db\1\345"+
    "\2\0\10\345\1\0\2\345\3\0\1\345\5\0\1\256"+
    "\4\0\1\257\1\0\1\260\2\0\2\256\1\0\1\256"+
    "\3\0\14\256\1\u01dc\2\0\10\256\1\0\2\256\3\0"+
    "\1\256\32\0\1\u01dd\36\0\1\256\4\0\1\257\1\0"+
    "\1\260\2\0\2\256\1\0\1\256\3\0\4\256\1\u01de"+
    "\10\256\2\0\10\256\1\0\2\256\3\0\1\256\5\0"+
    "\1\256\4\0\1\257\1\0\1\260\2\0\2\256\1\0"+
    "\1\256\3\0\14\256\1\u01df\2\0\10\256\1\0\2\256"+
    "\3\0\1\256\5\0\1\256\4\0\1\257\1\0\1\260"+
    "\2\0\2\256\1\0\1\256\3\0\5\256\1\u01e0\7\256"+
    "\2\0\10\256\1\0\2\256\3\0\1\256\40\0\1\u01e1"+
    "\55\0\1\u01e2\63\0\1\u01e3\73\0\1\u01e4\62\0\1\u01e5"+
    "\44\0\1\u01e6\101\0\1\u01e7\63\0\1\u01e8\54\0\1\u01e9"+
    "\3\0\1\u01ea\1\0\1\u01eb\56\0\1\u01ec\102\0\1\u01ed"+
    "\54\0\1\u01ee\56\0\1\u01ef\77\0\1\u01f0\31\0\1\u01f1"+
    "\76\0\1\u01f2\44\0\1\u01ad\55\0\1\u01ad\1\u01f3\3\0"+
    "\1\u01ac\4\0\2\u01ad\1\u0157\1\u01ad\3\0\15\u01ad\2\0"+
    "\10\u01ad\1\0\2\u01ad\3\0\1\u01ad\42\0\1\u01f4\61\0"+
    "\1\u01f5\61\0\1\u01f6\15\0\1\u01f7\34\0\2\u01f8\62\0"+
    "\2\u01f9\42\0\1\251\3\0\1\u010c\1\250\4\0\2\251"+
    "\1\0\1\251\2\0\1\u01f9\1\u01fa\14\251\2\0\10\251"+
    "\1\0\2\251\3\0\1\251\5\0\1\251\3\0\1\u010c"+
    "\1\250\4\0\2\251\1\0\1\251\3\0\10\251\1\u01fb"+
    "\4\251\2\0\10\251\1\0\2\251\3\0\1\251\5\0"+
    "\1\251\3\0\1\u010c\1\250\4\0\2\251\1\0\1\251"+
    "\3\0\5\251\1\u01fc\7\251\2\0\10\251\1\0\2\251"+
    "\3\0\1\251\35\0\1\u01fd\33\0\1\256\4\0\1\257"+
    "\1\0\1\260\2\0\2\256\1\0\1\256\3\0\7\256"+
    "\1\u01fe\5\256\2\0\10\256\1\0\2\256\3\0\1\256"+
    "\13\0\1\u01c0\55\0\1\u01c0\1\u01ff\3\0\1\u01bf\4\0"+
    "\2\u01c0\1\u016e\1\u01c0\3\0\15\u01c0\2\0\10\u01c0\1\0"+
    "\2\u01c0\3\0\1\u01c0\5\0\1\300\4\0\1\301\1\0"+
    "\1\302\2\0\2\300\1\0\1\300\3\0\7\300\1\u0200"+
    "\5\300\2\0\10\300\1\0\2\300\3\0\1\300\12\0"+
    "\1\u0201\5\0\1\u0202\5\0\15\u0202\2\0\10\u0202\1\0"+
    "\2\u0202\3\0\1\u0202\45\0\1\u0203\53\0\1\u0204\53\0"+
    "\2\u0205\62\0\2\u0206\42\0\1\323\3\0\1\u012c\1\322"+
    "\4\0\2\323\1\0\1\323\2\0\1\u0206\1\u0207\14\323"+
    "\2\0\10\323\1\0\2\323\3\0\1\323\5\0\1\323"+
    "\3\0\1\u012c\1\322\4\0\2\323\1\0\1\323\3\0"+
    "\10\323\1\u0208\4\323\2\0\10\323\1\0\2\323\3\0"+
    "\1\323\5\0\1\323\3\0\1\u012c\1\322\4\0\2\323"+
    "\1\0\1\323\3\0\5\323\1\u0209\7\323\2\0\10\323"+
    "\1\0\2\323\3\0\1\323\35\0\1\u020a\66\0\1\u020b"+
    "\64\0\1\u020c\6\0\1\u020d\25\0\1\u020e\5\0\1\u020f"+
    "\5\0\15\u020f\2\0\10\u020f\1\0\2\u020f\3\0\1\u020f"+
    "\45\0\1\u0210\60\0\1\u0211\46\0\2\u0212\42\0\1\345"+
    "\3\0\1\u013c\1\344\4\0\2\345\1\0\1\345\2\0"+
    "\1\u0212\1\u0213\14\345\2\0\10\345\1\0\2\345\3\0"+
    "\1\345\5\0\1\345\3\0\1\u013c\1\344\4\0\2\345"+
    "\1\0\1\345\3\0\10\345\1\u0214\4\345\2\0\10\345"+
    "\1\0\2\345\3\0\1\345\5\0\1\345\3\0\1\u013c"+
    "\1\344\4\0\2\345\1\0\1\345\3\0\5\345\1\u0215"+
    "\7\345\2\0\10\345\1\0\2\345\3\0\1\345\35\0"+
    "\1\u0216\33\0\1\256\4\0\1\257\1\0\1\260\2\0"+
    "\2\256\1\0\1\256\3\0\7\256\1\u0217\5\256\2\0"+
    "\10\256\1\0\2\256\3\0\1\256\27\0\1\u0218\66\0"+
    "\1\u0219\66\0\1\u021a\74\0\1\u021b\47\0\1\u021c\105\0"+
    "\1\u021d\50\0\1\u021e\74\0\1\u021f\47\0\1\u0220\66\0"+
    "\1\u0221\62\0\1\u0222\50\0\2\u0223\104\0\1\u0224\47\0"+
    "\1\u0225\42\0\1\u0226\5\0\1\u0227\5\0\15\u0227\2\0"+
    "\10\u0227\1\0\2\u0227\3\0\1\u0227\36\0\1\u0228\102\0"+
    "\2\u0229\62\0\2\u022a\46\0\1\u022b\54\0\1\u022c\36\0"+
    "\1\251\3\0\1\u010c\1\250\4\0\2\251\1\0\1\251"+
    "\3\0\4\251\1\u022d\10\251\2\0\10\251\1\0\2\251"+
    "\3\0\1\251\5\0\1\251\3\0\1\u010c\1\250\4\0"+
    "\2\251\1\0\1\251\3\0\11\251\1\u022e\3\251\2\0"+
    "\10\251\1\0\2\251\3\0\1\251\5\0\1\251\3\0"+
    "\1\u010c\1\250\4\0\2\251\1\0\1\251\3\0\7\251"+
    "\1\u022f\5\251\2\0\10\251\1\0\2\251\3\0\1\251"+
    "\34\0\1\u0230\34\0\1\256\4\0\1\257\1\0\1\260"+
    "\2\0\2\256\1\0\1\256\3\0\6\256\1\u0231\6\256"+
    "\2\0\10\256\1\0\2\256\3\0\1\256\12\0\1\u0232"+
    "\5\0\1\u0233\5\0\15\u0233\2\0\10\u0233\1\0\2\u0233"+
    "\3\0\1\u0233\5\0\1\300\4\0\1\301\1\0\1\302"+
    "\2\0\2\300\1\0\1\300\3\0\6\300\1\u0234\6\300"+
    "\2\0\10\300\1\0\2\300\3\0\1\300\13\0\1\u0202"+
    "\55\0\1\u0202\4\0\1\u0201\4\0\2\u0202\1\0\1\u0202"+
    "\3\0\15\u0202\2\0\10\u0202\1\0\2\u0202\3\0\1\u0202"+
    "\35\0\1\u0235\76\0\1\u0236\61\0\1\u0237\47\0\1\u0238"+
    "\36\0\1\323\3\0\1\u012c\1\322\4\0\2\323\1\0"+
    "\1\323\3\0\4\323\1\u0239\10\323\2\0\10\323\1\0"+
    "\2\323\3\0\1\323\5\0\1\323\3\0\1\u012c\1\322"+
    "\4\0\2\323\1\0\1\323\3\0\11\323\1\u023a\3\323"+
    "\2\0\10\323\1\0\2\323\3\0\1\323\5\0\1\323"+
    "\3\0\1\u012c\1\322\4\0\2\323\1\0\1\323\3\0"+
    "\7\323\1\u023b\5\323\2\0\10\323\1\0\2\323\3\0"+
    "\1\323\34\0\1\u023c\42\0\1\u020f\55\0\1\u020f\4\0"+
    "\1\u020e\4\0\2\u020f\1\0\1\u020f\3\0\15\u020f\2\0"+
    "\10\u020f\1\0\2\u020f\3\0\1\u020f\35\0\1\u023d\67\0"+
    "\1\u023e\54\0\1\u023f\36\0\1\345\3\0\1\u013c\1\344"+
    "\4\0\2\345\1\0\1\345\3\0\4\345\1\u0240\10\345"+
    "\2\0\10\345\1\0\2\345\3\0\1\345\5\0\1\345"+
    "\3\0\1\u013c\1\344\4\0\2\345\1\0\1\345\3\0"+
    "\11\345\1\u0241\3\345\2\0\10\345\1\0\2\345\3\0"+
    "\1\345\5\0\1\345\3\0\1\u013c\1\344\4\0\2\345"+
    "\1\0\1\345\3\0\7\345\1\u0242\5\345\2\0\10\345"+
    "\1\0\2\345\3\0\1\345\34\0\1\u0243\34\0\1\256"+
    "\4\0\1\257\1\0\1\260\2\0\2\256\1\0\1\256"+
    "\3\0\6\256\1\u0244\6\256\2\0\10\256\1\0\2\256"+
    "\3\0\1\256\35\0\1\u0245\100\0\1\u0246\46\0\1\u0247"+
    "\61\0\1\u0248\65\0\1\u0249\73\0\1\u024a\57\0\1\u024b"+
    "\47\0\2\u024c\77\0\1\u024d\53\0\1\u024e\71\0\1\u024f"+
    "\50\0\2\u0250\50\0\1\u0227\55\0\1\u0227\3\0\1\u0251"+
    "\1\u0226\4\0\2\u0227\1\0\1\u0227\3\0\15\u0227\2\0"+
    "\10\u0227\1\0\2\u0227\3\0\1\u0227\35\0\1\u0252\103\0"+
    "\2\u0253\36\0\1\u0254\65\0\1\u0255\35\0\1\251\3\0"+
    "\1\u010c\1\250\4\0\2\251\1\0\1\251\3\0\5\251"+
    "\1\u0256\7\251\2\0\10\251\1\0\2\251\3\0\1\251"+
    "\5\0\1\251\3\0\1\u010c\1\250\4\0\2\251\1\0"+
    "\1\251\3\0\7\251\1\u0257\5\251\2\0\10\251\1\0"+
    "\2\251\3\0\1\251\5\0\1\251\3\0\1\u010c\1\250"+
    "\4\0\2\251\1\0\1\251\3\0\6\251\1\u0258\6\251"+
    "\2\0\10\251\1\0\2\251\3\0\1\251\42\0\1\u0259"+
    "\26\0\1\256\4\0\1\257\1\0\1\260\2\0\2\256"+
    "\1\0\1\256\3\0\14\256\1\u025a\2\0\10\256\1\0"+
    "\2\256\3\0\1\256\13\0\1\u0233\55\0\1\u0233\3\0"+
    "\1\u025b\1\u0232\4\0\2\u0233\1\0\1\u0233\3\0\15\u0233"+
    "\2\0\10\u0233\1\0\2\u0233\3\0\1\u0233\5\0\1\300"+
    "\4\0\1\301\1\0\1\302\2\0\2\300\1\0\1\300"+
    "\3\0\14\300\1\u025c\2\0\10\300\1\0\2\300\3\0"+
    "\1\300\53\0\1\u025d\56\0\1\u025e\37\0\1\u025f\74\0"+
    "\1\u0260\35\0\1\323\3\0\1\u012c\1\322\4\0\2\323"+
    "\1\0\1\323\3\0\5\323\1\u0261\7\323\2\0\10\323"+
    "\1\0\2\323\3\0\1\323\5\0\1\323\3\0\1\u012c"+
    "\1\322\4\0\2\323\1\0\1\323\3\0\7\323\1\u0262"+
    "\5\323\2\0\10\323\1\0\2\323\3\0\1\323\5\0"+
    "\1\323\3\0\1\u012c\1\322\4\0\2\323\1\0\1\323"+
    "\3\0\6\323\1\u0263\6\323\2\0\10\323\1\0\2\323"+
    "\3\0\1\323\42\0\1\u0264\74\0\1\u0265\52\0\1\u0266"+
    "\54\0\1\u0267\35\0\1\345\3\0\1\u013c\1\344\4\0"+
    "\2\345\1\0\1\345\3\0\5\345\1\u0268\7\345\2\0"+
    "\10\345\1\0\2\345\3\0\1\345\5\0\1\345\3\0"+
    "\1\u013c\1\344\4\0\2\345\1\0\1\345\3\0\7\345"+
    "\1\u0269\5\345\2\0\10\345\1\0\2\345\3\0\1\345"+
    "\5\0\1\345\3\0\1\u013c\1\344\4\0\2\345\1\0"+
    "\1\345\3\0\6\345\1\u026a\6\345\2\0\10\345\1\0"+
    "\2\345\3\0\1\345\42\0\1\u026b\26\0\1\256\4\0"+
    "\1\257\1\0\1\260\2\0\2\256\1\0\1\256\3\0"+
    "\14\256\1\u026c\2\0\10\256\1\0\2\256\3\0\1\256"+
    "\34\0\1\u026d\70\0\1\u026e\60\0\1\u026f\76\0\1\u0270"+
    "\34\0\1\u0271\107\0\1\u0272\57\0\1\u0273\63\0\1\u0274"+
    "\61\0\1\u0275\71\0\1\u0276\55\0\1\u0277\63\0\1\u0278"+
    "\73\0\1\u0279\61\0\1\u027a\51\0\1\u027b\34\0\1\251"+
    "\3\0\1\u010c\1\250\4\0\2\251\1\0\1\251\3\0"+
    "\6\251\1\u022e\6\251\2\0\10\251\1\0\2\251\3\0"+
    "\1\251\5\0\1\251\3\0\1\u027c\1\250\4\0\2\251"+
    "\1\0\1\251\3\0\15\251\2\0\10\251\1\0\2\251"+
    "\3\0\1\251\5\0\1\251\3\0\1\u010c\1\250\4\0"+
    "\2\251\1\0\1\251\3\0\14\251\1\u0257\2\0\10\251"+
    "\1\0\2\251\3\0\1\251\32\0\1\u027d\66\0\1\u027e"+
    "\67\0\1\u027f\56\0\1\u0280\34\0\1\323\3\0\1\u012c"+
    "\1\322\4\0\2\323\1\0\1\323\3\0\6\323\1\u023a"+
    "\6\323\2\0\10\323\1\0\2\323\3\0\1\323\5\0"+
    "\1\323\3\0\1\u0281\1\322\4\0\2\323\1\0\1\323"+
    "\3\0\15\323\2\0\10\323\1\0\2\323\3\0\1\323"+
    "\5\0\1\323\3\0\1\u012c\1\322\4\0\2\323\1\0"+
    "\1\323\3\0\14\323\1\u0262\2\0\10\323\1\0\2\323"+
    "\3\0\1\323\32\0\1\u0282\71\0\1\u0283\57\0\1\u0284"+
    "\34\0\1\345\3\0\1\u013c\1\344\4\0\2\345\1\0"+
    "\1\345\3\0\6\345\1\u0241\6\345\2\0\10\345\1\0"+
    "\2\345\3\0\1\345\5\0\1\345\3\0\1\u0285\1\344"+
    "\4\0\2\345\1\0\1\345\3\0\15\345\2\0\10\345"+
    "\1\0\2\345\3\0\1\345\5\0\1\345\3\0\1\u013c"+
    "\1\344\4\0\2\345\1\0\1\345\3\0\14\345\1\u0269"+
    "\2\0\10\345\1\0\2\345\3\0\1\345\42\0\1\u0286"+
    "\63\0\1\u0287\53\0\1\u0288\73\0\1\u0289\62\0\1\u028a"+
    "\44\0\1\u028b\101\0\1\u028c\55\0\1\u028d\63\0\1\u028e"+
    "\73\0\1\u028f\56\0\1\u0290\66\0\1\u0291\60\0\1\u0292"+
    "\66\0\1\u0293\60\0\1\u0294\60\0\1\u0295\66\0\1\u0296"+
    "\61\0\1\u0297\57\0\1\u0298\45\0\1\u027c\63\0\1\u0281"+
    "\63\0\1\u0285\124\0\1\u0299\46\0\1\u029a\67\0\1\u029b"+
    "\56\0\1\u029c\71\0\1\u029d\63\0\1\u029e\23\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[27300];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\36\0\3\11\6\1\1\11\4\1\2\11\1\1\2\11"+
    "\4\1\2\11\1\1\2\11\1\1\1\11\1\1\4\11"+
    "\7\1\1\11\1\1\2\11\2\1\1\11\1\1\1\11"+
    "\7\1\1\11\3\1\1\11\1\1\1\11\1\1\4\11"+
    "\1\1\1\11\1\1\1\11\4\1\1\11\1\1\3\11"+
    "\1\1\1\11\2\1\3\11\2\1\2\11\1\1\2\11"+
    "\1\1\1\11\4\1\1\11\2\1\3\11\45\0\1\11"+
    "\1\1\4\0\1\11\13\0\1\1\12\0\2\11\10\0"+
    "\1\11\21\0\1\11\1\1\27\0\1\11\3\0\1\11"+
    "\4\0\1\11\4\0\1\11\13\0\1\11\16\0\1\11"+
    "\17\0\1\11\16\0\1\1\4\0\1\11\5\0\1\11"+
    "\1\0\2\11\3\0\1\11\11\0\1\1\4\0\1\11"+
    "\2\0\1\1\2\0\1\1\6\0\1\11\12\0\1\11"+
    "\20\0\1\1\7\0\1\11\1\1\1\11\10\0\2\11"+
    "\10\0\1\11\4\0\1\1\2\0\1\11\2\1\2\11"+
    "\2\0\1\1\1\0\1\11\2\1\3\0\1\11\5\0"+
    "\1\11\1\0\1\11\2\0\1\11\7\0\1\1\2\0"+
    "\2\1\1\11\1\0\2\11\2\0\1\11\14\0\1\11"+
    "\15\0\1\1\10\0\3\11\1\0\1\1\12\0\1\11"+
    "\12\0\1\11\4\0\1\11\36\0\1\1\7\0\1\11"+
    "\1\0\1\11\5\0\1\11\1\1\1\11\1\1\7\0"+
    "\1\11\6\0\1\11\1\1\5\0\1\11\1\1\1\0"+
    "\2\11\1\0\1\11\3\0\1\11\1\0\2\11\1\0"+
    "\1\11\1\0\1\11\1\0\5\11\2\0\1\11\2\0"+
    "\1\11\1\0\1\11\1\0\1\11\2\0\2\11\5\0"+
    "\2\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[670];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
	public static String urlAuxliar="";
	public static Boolean fin=false;
	public static String txt_temporal="";
	public static int linea=0;
	public static int columna=0;



    public static int flagInicio = 0;
    public String cadena = "";


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Scanner(java.io.Reader in) {
    this.zzReader = in;
  }



  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
          { 	return new Symbol(simbolos.EOF,new String("Fin del archivo"));
    /*({letra}":"("\\"({linea})+)+)*/
 }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { System.out.println("Caracter ilegal: " + yytext()+" Linea : "+yyline +" Columna: "+yychar); 
			Errores errorLexico=new Errores();
			errorLexico.setTipo("Lexico");
			errorLexico.setLinea(yyline);
			errorLexico.setColumna(yychar);
			errorLexico.setDescripcion("Caracter Ilegal: "+yytext());
			Interfaz.erroresLexicos.add(errorLexico);
			//Proyecto1_Compiladores.listaLexico.add(errorLexico);
			//Menu.listaLexico=Proyecto1_Compiladores.listaLexico;
            }
          case 133: break;
          case 2: 
            { System.out.println("Salto de linea");
            }
          case 134: break;
          case 3: 
            { yychar=0;
            }
          case 135: break;
          case 4: 
            { cadena = "";
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : Menor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        System.out.println("*****************************************************************");
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 136: break;
          case 5: 
            { cadena = "";
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	        
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 137: break;
          case 6: 
            { System.out.print(yytext());
            }
          case 138: break;
          case 7: 
            { 
            }
          case 139: break;
          case 8: 
            { yybegin(ENCABEZADO2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        
        
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 140: break;
          case 9: 
            { cadena = "";
            }
          case 141: break;
          case 10: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : Menor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
       
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 142: break;
          case 11: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);


        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 143: break;
          case 12: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("asignacion");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("= : Asignacion");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                
        Interfaz.tablaSimbolos_.add(simbolo);
             
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.asignacion, yychar, yyline, yytext());
            }
          case 144: break;
          case 13: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("puntoComa");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("; : Punto coma");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
            
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.puntoComa, yychar, yyline, yytext());
            }
          case 145: break;
          case 14: 
            { yybegin(YYINITIAL);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        
        
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 146: break;
          case 15: 
            { yybegin(TITULO2);                           
        System.out.println("Saltar a estado TITULO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        
        
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 147: break;
          case 16: 
            { cadena  = cadena + yytext();
            }
          case 148: break;
          case 17: 
            { if(!yytext().equals("<"))
        {
            cadena  = cadena + yytext();
            //System.out.println(cadena);
        }
        else 
        {

            //cadena = cadena + yytext();
            
            yybegin(ENCABEZADO2);
            Interfaz.auxContador++;                                
            //Generamos la entrada en la tabla de simbolos.
            tablaSimbolos simbolo=new tablaSimbolos();
            simbolo.setTipo("cadena");
            simbolo.setLinea(yyline);
            simbolo.setColumna(yychar);
            simbolo.setDescripcion("Cadena : cadena de texto");
            simbolo.setIndex(Interfaz.auxContador);
            simbolo.setValor(cadena);                 
            Interfaz.tablaSimbolos_.add(simbolo);
            yypushback(1);	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 

        }
            }
          case 149: break;
          case 18: 
            { yybegin(ENCABEZADO2);  
        System.out.println("----------------------------------------------Saliendo de titulo3");                         
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : Menor que titulo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 150: break;
          case 19: 
            { yybegin(YYINITIAL);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 151: break;
          case 20: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("asignacion");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("= : Asignacion");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                
        Interfaz.tablaSimbolos_.add(simbolo);
                             
        return new Symbol(simbolos.asignacion, yychar, yyline, yytext());
            }
          case 152: break;
          case 21: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("puntoComa");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("; : Punto coma");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                    
        return new Symbol(simbolos.puntoComa, yychar, yyline, yytext());
            }
          case 153: break;
          case 22: 
            { yybegin(TEXTO2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 154: break;
          case 23: 
            { if(!yytext().equals("<"))
        {
            cadena  = cadena + yytext();
            //System.out.println(cadena);
        }
        else 
        {

            //cadena = cadena + yytext();
            
            yybegin(YYINITIAL);
            Interfaz.auxContador++;                                
            //Generamos la entrada en la tabla de simbolos.
            tablaSimbolos simbolo=new tablaSimbolos();
            simbolo.setTipo("cadena");
            simbolo.setLinea(yyline);
            simbolo.setColumna(yychar);
            simbolo.setDescripcion("Cadena : cadena de texto");
            simbolo.setIndex(Interfaz.auxContador);
            simbolo.setValor(cadena);                 
            Interfaz.tablaSimbolos_.add(simbolo);
            yypushback(1);	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 

        }
            }
          case 155: break;
          case 24: 
            { yybegin(IMAGEN2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 156: break;
          case 25: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : MenorQue fin Imagen");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 157: break;
          case 26: 
            { yybegin(BOTON2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 158: break;
          case 27: 
            { yybegin(ENLACE2);                           
        System.out.println("Saltar a estado ENLACE2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 159: break;
          case 28: 
            { yybegin(T2);  
        cadena = "";                         
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 160: break;
          case 29: 
            { cadena = "";
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : Menor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 161: break;
          case 30: 
            { cadena = "";
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        System.out.println("*****************************************************************");
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 162: break;
          case 31: 
            { cadena = "";
        yybegin(T4);                           
        System.out.println("Saltar a estado t4");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 163: break;
          case 32: 
            { cadena = "";
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que T4");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	        
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 164: break;
          case 33: 
            { cadena = "";
        yybegin(T6);                           
        System.out.println("Saltar a T6");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que T5");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 165: break;
          case 34: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("asignacion");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("= : Asignacion T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                
        Interfaz.tablaSimbolos_.add(simbolo);
                             
        return new Symbol(simbolos.asignacion, yychar, yyline, yytext());
            }
          case 166: break;
          case 35: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("puntoComa");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("; : Punto coma T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                    
        return new Symbol(simbolos.puntoComa, yychar, yyline, yytext());
            }
          case 167: break;
          case 36: 
            { if(!yytext().equals("<"))
        {
            cadena  = cadena + yytext();
            //System.out.println(cadena);
        }
        else 
        {

            //cadena = cadena + yytext();
            
            yybegin(T7);
            Interfaz.auxContador++;                                
            //Generamos la entrada en la tabla de simbolos.
            tablaSimbolos simbolo=new tablaSimbolos();
            simbolo.setTipo("cadena");
            simbolo.setLinea(yyline);
            simbolo.setColumna(yychar);
            simbolo.setDescripcion("Cadena : cadena de texto");
            simbolo.setIndex(Interfaz.auxContador);
            simbolo.setValor(cadena);                 
            Interfaz.tablaSimbolos_.add(simbolo);
            yypushback(1);	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 

        }
            }
          case 168: break;
          case 37: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : MenorQue T7");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 169: break;
          case 38: 
            { yybegin(TB2);  
        cadena = "";                         
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 170: break;
          case 39: 
            { if(!yytext().equals("<"))
        {
            cadena  = cadena + yytext();
            //System.out.println(cadena);
        }
        else 
        {

            //cadena = cadena + yytext();
            
            yybegin(TB3);
            Interfaz.auxContador++;                                
            //Generamos la entrada en la tabla de simbolos.
            tablaSimbolos simbolo=new tablaSimbolos();
            simbolo.setTipo("cadena");
            simbolo.setLinea(yyline);
            simbolo.setColumna(yychar);
            simbolo.setDescripcion("Cadena : cadena de texto");
            simbolo.setIndex(Interfaz.auxContador);
            simbolo.setValor(cadena);                 
            Interfaz.tablaSimbolos_.add(simbolo);
            yypushback(1);	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 

        }
            }
          case 171: break;
          case 40: 
            { cadena = "";
        yybegin(TI2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 172: break;
          case 41: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : MenorQue inicio TI2");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 173: break;
          case 42: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : mayorQue fin Imagen TI2");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        yybegin(T6); 
        cadena = "";               
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 174: break;
          case 43: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : MenorQue inicio TB3");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 175: break;
          case 44: 
            { cadena="";
        yybegin(T6);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que TB3");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 176: break;
          case 45: 
            { yybegin(TA2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 177: break;
          case 46: 
            { yybegin(CAJA2);                           
        Interfaz.addChtml("mayorQue",yyline,yychar,"> : Mayor que",yytext());                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 178: break;
          case 47: 
            { Interfaz.addChtml("asignacion",yyline,yychar,"= : Asignacion",yytext());                      
        return new Symbol(simbolos.asignacion, yychar, yyline, yytext());
            }
          case 179: break;
          case 48: 
            { Interfaz.addChtml("puntoComa",yyline,yychar,"; : Punto coma",yytext());            
        return new Symbol(simbolos.puntoComa, yychar, yyline, yytext());
            }
          case 180: break;
          case 49: 
            { if(!yytext().equals("<"))
        {
            cadena  = cadena + yytext();            
        }
        else 
        {
            yybegin(YYINITIAL);
            yypushback(1);
            Interfaz.addChtml("cadena",yyline,yychar,"Cadena : cadena de texto",yytext()); 	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 
        }
            }
          case 181: break;
          case 50: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id Ccss");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id : Identificador grupo ccss");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.idCcss, yychar, yyline, yytext());
            }
          case 182: break;
          case 51: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id Ccss");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id : Identificador grupo ccss");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                            
        return new Symbol(simbolos.idCcss, yychar, yyline, yytext());
            }
          case 183: break;
          case 52: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("ct");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("ct: Inicio Celda");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(T5); 
        cadena = "";   
        System.out.println("SALTAR A T5");                                
        return new Symbol(simbolos.inicioCelda, yychar, yyline, yytext());
            }
          case 184: break;
          case 53: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("cb");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("cb: Inicio Celda cabecera");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(T5);   
        System.out.println("SALTAR A T5");
        cadena = "";
        return new Symbol(simbolos.inicioCeldaCabecera, yychar, yyline, yytext());
            }
          case 185: break;
          case 54: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id Ccss");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id : Identificador grupo ccss T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                            
        return new Symbol(simbolos.idCcss, yychar, yyline, yytext());
            }
          case 186: break;
          case 55: 
            { Interfaz.addChtml("idCcss",yyline,yychar,"id : Identificador grupo ccss",yytext());                    
        return new Symbol(simbolos.idCcss, yychar, yyline, yytext());
            }
          case 187: break;
          case 56: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("inicioCjs");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("CJS : Inicio etiqueta CJS");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
              
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.inicioCjs, yychar, yyline, yytext());
            }
          case 188: break;
          case 57: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id: Posible nombre de color.");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
               
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.id, yychar, yyline, yytext());
            }
          case 189: break;
          case 58: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id: Posible nombre de color.");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);

        return new Symbol(simbolos.id, yychar, yyline, yytext());
            }
          case 190: break;
          case 59: 
            { Interfaz.addChtml("metodo",yyline,yychar, yytext() +" : llamada a metodo",yytext());            
        return new Symbol(simbolos.metodo, yychar, yyline, yytext());
            }
          case 191: break;
          case 60: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("metodo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("metodo : Llamada a metodo");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.metodo, yychar, yyline, yytext());
            }
          case 192: break;
          case 61: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id: Posible nombre de color. T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);

        return new Symbol(simbolos.id, yychar, yyline, yytext());
            }
          case 193: break;
          case 62: 
            { Interfaz.addChtml("id",yyline,yychar,"id: Posible nombre de color.",yytext());
        return new Symbol(simbolos.id, yychar, yyline, yytext());
            }
          case 194: break;
          case 63: 
            { Interfaz.addChtml("inicioCajaOpciones",yyline,yychar,"caja: Inico Caja opciones",yytext()); 
        yybegin(ELEMENTOS);                                       
        return new Symbol(simbolos.inicioCajaOpciones, yychar, yyline, yytext());
            }
          case 195: break;
          case 64: 
            { yybegin(COMENTARIO);
            }
          case 196: break;
          case 65: 
            { yybegin(YYINITIAL);
            }
          case 197: break;
          case 66: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("ruta");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("ruta : Declaración ruta archivo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
               
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.ruta, yychar, yyline, yytext());
            }
          case 198: break;
          case 67: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("inicioCcss");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("CCSS : Inicio etiqueta CCSS");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
              
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.inicioCcss, yychar, yyline, yytext());
            }
          case 199: break;
          case 68: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("rgb");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("rgb: Posible nombre de color.");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
               
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.rgb, yychar, yyline, yytext());
            }
          case 200: break;
          case 69: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("alto");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("alto : Altura objeto");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.alto, yychar, yyline, yytext());
            }
          case 201: break;
          case 70: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("ruta");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("ruta : Declaración ruta archivo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
               
        return new Symbol(simbolos.ruta, yychar, yyline, yytext());
            }
          case 202: break;
          case 71: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("alto");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("alto : Altura objeto T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.alto, yychar, yyline, yytext());
            }
          case 203: break;
          case 72: 
            { Interfaz.addChtml("alto",yyline,yychar,"alto : Altura objeto",yytext());                    
        return new Symbol(simbolos.alto, yychar, yyline, yytext());
            }
          case 204: break;
          case 73: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("inicioChtml");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("CHTML : Inicio Documento");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        
        return new Symbol(simbolos.inicioChtml, yychar, yyline, yytext());
            }
          case 205: break;
          case 74: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("texto");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("texto: Inicio texto");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(TEXTO1);                            
        return new Symbol(simbolos.inicioTexto, yychar, yyline, yytext());
            }
          case 206: break;
          case 75: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("tabla");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("tabla: Inicio tabla");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(T1);                                    
        return new Symbol(simbolos.inicioTabla, yychar, yyline, yytext());
            }
          case 207: break;
          case 76: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("boton");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("boton: Inicio boton");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(BOTON1);                                    
        return new Symbol(simbolos.inicioBoton, yychar, yyline, yytext());
            }
          case 208: break;
          case 77: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("inicioPanel");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("panel: Declaracion panel");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
               
        yybegin(ELEMENTOS);        
        return new Symbol(simbolos.inicioPanel, yychar, yyline, yytext());
            }
          case 209: break;
          case 78: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("fondo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fondo : declaracion fondo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
       
        return new Symbol(simbolos.fondo, yychar, yyline, yytext());
            }
          case 210: break;
          case 79: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("ancho");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("ancho : Anchura objeto");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.ancho, yychar, yyline, yytext());
            }
          case 211: break;
          case 80: 
            { Interfaz.addChtml("click",yyline,yychar,"click : evento",yytext());            
        return new Symbol(simbolos.click, yychar, yyline, yytext());
            }
          case 212: break;
          case 81: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("grupo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("grupo : grupo ccss");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.grupo, yychar, yyline, yytext());
            }
          case 213: break;
          case 82: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("click");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("click : Evento Click");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                            
        return new Symbol(simbolos.click, yychar, yyline, yytext());
            }
          case 214: break;
          case 83: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fil_t");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fil_t: Inicio fila");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo); 
        yybegin(T3);                                
        return new Symbol(simbolos.inicioFila, yychar, yyline, yytext());
            }
          case 215: break;
          case 84: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("ancho");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("ancho : Anchura objeto T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.ancho, yychar, yyline, yytext());
            }
          case 216: break;
          case 85: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("grupo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("grupo : grupo ccss T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.grupo, yychar, yyline, yytext());
            }
          case 217: break;
          case 86: 
            { cadena="";
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("boton");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("boton : Inicio boton");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);    
        yybegin(TB);                        
        return new Symbol(simbolos.inicioBoton, yychar, yyline, yytext());
            }
          case 218: break;
          case 87: 
            { Interfaz.addChtml("ancho",yyline,yychar,"ancho : Anchura objeto",yytext());                    
        return new Symbol(simbolos.ancho, yychar, yyline, yytext());
            }
          case 219: break;
          case 88: 
            { Interfaz.addChtml("grupo",yyline,yychar,"grupo : grupo ccss",yytext());                      
        return new Symbol(simbolos.grupo, yychar, yyline, yytext());
            }
          case 220: break;
          case 89: 
            { Interfaz.addChtml("valor",yyline,yychar,yytext() + "valor de opcion",yytext());                    
        return new Symbol(simbolos.valor, yychar, yyline, yytext());
            }
          case 221: break;
          case 90: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("imagen");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("imagen: Inicio imagen");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(IMAGEN1);                                    
        return new Symbol(simbolos.inicioImagen, yychar, yyline, yytext());
            }
          case 222: break;
          case 91: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("enlace");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("enlace: Inicio enlace");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(ENLACE1);                                    
        return new Symbol(simbolos.inicioEnlace, yychar, yyline, yytext());
            }
          case 223: break;
          case 92: 
            { yybegin(CUERPO);
        System.out.println("Saltar a estado CUERPO");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("cuerpo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("cuerpo : Inicio cuerpo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);        	        
        return new Symbol(simbolos.inicioCuerpo, yychar, yyline, yytext());
            }
          case 224: break;
          case 93: 
            { Interfaz.addChtml("inicioOpcion",yyline,yychar,"Opcion: Inico Opcion",yytext()); 
        yybegin(CAJA1);                                       
        return new Symbol(simbolos.inicioOpcion, yychar, yyline, yytext());
            }
          case 225: break;
          case 94: 
            { yybegin(TITULO1);
        System.out.println("Saltar a estado CUERPO");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("titulo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("titulo : Inicio titulo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);        	        
        return new Symbol(simbolos.inicioTitulo, yychar, yyline, yytext());
            }
          case 226: break;
          case 95: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("path");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("path : Direccion a imagen");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                          
        return new Symbol(simbolos.path, yychar, yyline, yytext());
            }
          case 227: break;
          case 96: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("imagen");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("imagen : Inicio imagen");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);    
        yybegin(TI);
        cadena="";                        
        return new Symbol(simbolos.inicioImagen, yychar, yyline, yytext());
            }
          case 228: break;
          case 97: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finCeldaCabecera");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("finCeldaCabecera : Fin cabecera");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);    
        yybegin(T4);  
        System.out.println("SALTAR A T4"); 
        cadena = "";                              
        return new Symbol(simbolos.finCelda, yychar, yyline, yytext());
            }
          case 229: break;
          case 98: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finCelda");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("finCelda : Fin Celda");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(T4);       
        System.out.println("SALTAR A T4");  
        cadena = "";                         
        return new Symbol(simbolos.finCeldaCabecera, yychar, yyline, yytext());
            }
          case 230: break;
          case 99: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("path");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("path : Direccion a imagen TI2");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                          
        return new Symbol(simbolos.path, yychar, yyline, yytext());
            }
          case 231: break;
          case 100: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("inicioCajaArea");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("inicioCajaArea: Inicio caja area de texto");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(TA1);                                    
        return new Symbol(simbolos.inicioCajaArea, yychar, yyline, yytext());
            }
          case 232: break;
          case 101: 
            { Interfaz.addChtml("inicioSpinner",yyline,yychar,"spinner: Inico Spinner",yytext()); 
        yybegin(TA1);                                       
        return new Symbol(simbolos.inicioSpinner, yychar, yyline, yytext());
            }
          case 233: break;
          case 102: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finCjs");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-cjs : finCJs");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
             
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.finCjs, yychar, yyline, yytext());
            }
          case 234: break;
          case 103: 
            { Interfaz.addChtml("finCajaOpciones",yyline,yychar,"fin-caja: Fin caja Opciones",yytext());                                              
        return new Symbol(simbolos.finCajaOpciones, yychar, yyline, yytext());
            }
          case 235: break;
          case 104: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("pathComillas");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("Path: Ruta a archivo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
               
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.pathComillas, yychar, yyline, yytext());
            }
          case 236: break;
          case 105: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finCcss");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-CCSS : fin etiqueta CCSS");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
             
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.finCcss, yychar, yyline, yytext());
            }
          case 237: break;
          case 106: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("alineado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("alineado : Alineación objeto");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.alineado, yychar, yyline, yytext());
            }
          case 238: break;
          case 107: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("path");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("path : Direccion a imagen");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.pathComillas, yychar, yyline, yytext());
            }
          case 239: break;
          case 108: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("alineado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("alineado : Alineación objeto T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.alineado, yychar, yyline, yytext());
            }
          case 240: break;
          case 109: 
            { Interfaz.addChtml("alineado",yyline,yychar,"alineado : Alineación objeto",yytext());                    
        return new Symbol(simbolos.alineado, yychar, yyline, yytext());
            }
          case 241: break;
          case 110: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("finChtml");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("FIN-CHTML : Fin Documento");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        
        return new Symbol(simbolos.finChtml, yychar, yyline, yytext());
            }
          case 242: break;
          case 111: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-texto");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-texto: Fin texto");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                                    
        return new Symbol(simbolos.finTexto, yychar, yyline, yytext());
            }
          case 243: break;
          case 112: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-boton");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-boton: Fin boton");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                                 
        return new Symbol(simbolos.finBoton, yychar, yyline, yytext());
            }
          case 244: break;
          case 113: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finPanel");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-panel: Cierre panel");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                          
        return new Symbol(simbolos.finPanel, yychar, yyline, yytext());
            }
          case 245: break;
          case 114: 
            { Interfaz.addChtml("salto",yyline,yychar,"salto: salto :v",yytext());                                              
        return new Symbol(simbolos.salto, yychar, yyline, yytext());
            }
          case 246: break;
          case 115: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("valorAlineado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("valorAlineado : Alineación");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.valorAlineado, yychar, yyline, yytext());
            }
          case 247: break;
          case 116: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-tabla");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-tabla: Fin tabla");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);  
        yybegin(YYINITIAL);
        return new Symbol(simbolos.finTabla, yychar, yyline, yytext());
            }
          case 248: break;
          case 117: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("fin-fil_t");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-fil_t : Fin Fila");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);   
        yybegin(T2);     	        
        return new Symbol(simbolos.finFila, yychar, yyline, yytext());
            }
          case 249: break;
          case 118: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("valorAlineado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("valorAlineado : Alineación T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.valorAlineado, yychar, yyline, yytext());
            }
          case 250: break;
          case 119: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-boton");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-boton: Fin boton TB3");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);  
        cadena = "";          
        return new Symbol(simbolos.finBoton, yychar, yyline, yytext());
            }
          case 251: break;
          case 120: 
            { Interfaz.addChtml("valorAlineado",yyline,yychar, yytext() +" : Alineación",yytext());                    
        return new Symbol(simbolos.valorAlineado, yychar, yyline, yytext());
            }
          case 252: break;
          case 121: 
            { yybegin(ENCABEZADO1);
        System.out.println("Saltar a estado ENCABEZADO1");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("inicioEncabezado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("encabezado : Inicio encabezado");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);        	        
        return new Symbol(simbolos.inicioEncabezado, yychar, yyline, yytext());
            }
          case 253: break;
          case 122: 
            { Interfaz.addChtml("inicioCaja",yyline,yychar,"caja_texto: Inico caja texto",yytext()); 
        yybegin(TA1);                                       
        return new Symbol(simbolos.inicioCaja, yychar, yyline, yytext());
            }
          case 254: break;
          case 123: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-enlace");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-enlace: Fin enlace");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                                 
        return new Symbol(simbolos.finEnlace, yychar, yyline, yytext());
            }
          case 255: break;
          case 124: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("fin-cuerpo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-cuerpo : Fin cuerpo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);        	        
        return new Symbol(simbolos.finCuerpo, yychar, yyline, yytext());
            }
          case 256: break;
          case 125: 
            { Interfaz.addChtml("finOpcion",yyline,yychar,"fin-opcion: Fin Opcion",yytext());                                              
        return new Symbol(simbolos.finOpcion, yychar, yyline, yytext());
            }
          case 257: break;
          case 126: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("fin-titulo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-titulo : Fin titulo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);        	        
        return new Symbol(simbolos.finTitulo, yychar, yyline, yytext());
            }
          case 258: break;
          case 127: 
            { yybegin(YYINITIAL); 
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-imagen");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-imagen: Fin imagen");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                                    
        return new Symbol(simbolos.finImagen, yychar, yyline, yytext());
            }
          case 259: break;
          case 128: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-imagen");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-imagen: Fin imagen TI2");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);      
        cadena = "";                              
        return new Symbol(simbolos.finImagen, yychar, yyline, yytext());
            }
          case 260: break;
          case 129: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finCajaArea");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("finCajaArea: Fin caja area de texto");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                                           
        return new Symbol(simbolos.finCajaArea, yychar, yyline, yytext());
            }
          case 261: break;
          case 130: 
            { Interfaz.addChtml("finSpinner",yyline,yychar,"fin-spinner: Fin Spinner",yytext());                                              
        return new Symbol(simbolos.finSpinner, yychar, yyline, yytext());
            }
          case 262: break;
          case 131: 
            { Interfaz.addChtml("finCaja",yyline,yychar,"fin-caja_texto: Fin caja texto",yytext());                                            
        return new Symbol(simbolos.finCaja, yychar, yyline, yytext());
            }
          case 263: break;
          case 132: 
            { yybegin(YYINITIAL);
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("finEncabezado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("FIN-ENCABEZADO : Fin Encabezado");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        
        return new Symbol(simbolos.finEncabezado, yychar, yyline, yytext());
            }
          case 264: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
