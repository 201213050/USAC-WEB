/* The following code was generated by JFlex 1.6.1 */

package Source.CHTML;
import java_cup.runtime.Symbol;
import java.util.ArrayList;
import Principal.Errores;
import Principal.Interfaz;
import Principal.tablaSimbolos;
/*
Directivas:
public: clase publica
cup: compatibilidad con cup
full: extender el alfabeto con todos los valores de 8 bits
line: agrega la variable int yyline, para indicar la fila del lexema
char: agrega la variable int yychar, indica el indice del primer caracter del lexema
ignorecase: validar, indistitntamente si la letra es mayuscula o minuscula
eofval: especifica un valor de retorno al final del archivo
*/





/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>chtml.l</tt>
 */
public class Scanner implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int COMENTARIO = 2;
  public static final int ENCABEZADO1 = 4;
  public static final int ENCABEZADO2 = 6;
  public static final int CUERPO = 8;
  public static final int TITULO1 = 10;
  public static final int TITULO2 = 12;
  public static final int TITULO3 = 14;
  public static final int ELEMENTOS = 16;
  public static final int TEXTO1 = 18;
  public static final int TEXTO2 = 20;
  public static final int IMAGEN1 = 22;
  public static final int IMAGEN2 = 24;
  public static final int BOTON1 = 26;
  public static final int BOTON2 = 28;
  public static final int ENLACE1 = 30;
  public static final int ENLACE2 = 32;
  public static final int T1 = 34;
  public static final int T2 = 36;
  public static final int T3 = 38;
  public static final int T4 = 40;
  public static final int T5 = 42;
  public static final int T6 = 44;
  public static final int T7 = 46;
  public static final int TB = 48;
  public static final int TB2 = 50;
  public static final int TI = 52;
  public static final int TI2 = 54;
  public static final int TB3 = 56;
  public static final int TA1 = 58;
  public static final int TA2 = 60;
  public static final int CAJA1 = 62;
  public static final int CAJA2 = 64;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7, 
     8,  8,  9,  9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 
    14, 14, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 
    23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 14, 14, 29, 29, 
    30, 30
  };

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = {
     5,  5,  5,  5,  5,  5,  5,  5,  5,  1,  2, 50,  1,  1,  5,  5, 
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5, 
     1,  5,  7, 17,  5,  5,  5,  5, 10, 11, 12,  5,  5, 13,  4, 18, 
     3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  6, 47, 33, 46, 34,  5, 
     5, 27, 38, 28, 26, 24, 37, 41, 29, 20, 42, 49, 36, 35, 30, 32, 
    39, 22, 25, 44, 31, 23, 45, 14, 40, 14, 21,  5, 15,  5,  5, 16, 
     5, 27, 38, 28, 26, 24, 37, 41, 29, 20, 42, 49, 36, 35, 30, 32, 
    39, 22, 25, 44, 31, 23, 45, 14, 40, 14, 21,  5,  5,  5,  5,  5, 
     5,  5,  5,  5,  5, 50,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5, 
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5, 
     5,  9,  5,  5,  5,  5,  5,  5,  5,  9,  5,  5,  5,  9,  5,  5, 
     5,  9,  5,  9,  5,  5,  5,  5,  5,  5,  9,  5,  5,  5,  5,  5, 
     5,  5,  5,  8,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5, 
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5, 
     5,  5,  5,  8,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5, 
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5
  };

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\37\0\1\1\1\2\1\3\5\1\1\4\1\5\4\1"+
    "\1\6\1\7\1\6\1\1\1\10\1\11\4\1\1\12"+
    "\1\13\1\1\1\14\1\15\2\1\1\16\2\1\1\17"+
    "\1\20\1\21\10\1\1\22\1\1\1\23\1\24\3\1"+
    "\1\25\1\1\1\26\10\1\1\27\3\1\1\30\2\1"+
    "\1\31\1\32\1\33\2\1\1\34\1\1\1\35\1\36"+
    "\1\37\2\1\1\40\1\1\1\36\1\41\5\1\1\42"+
    "\1\1\1\43\1\44\1\45\1\1\1\46\3\1\1\47"+
    "\1\50\1\1\1\51\2\1\1\52\1\53\1\1\1\54"+
    "\1\55\2\1\1\56\5\1\1\57\2\1\1\60\1\61"+
    "\1\62\52\0\2\63\5\0\1\64\14\0\1\63\21\0"+
    "\1\65\1\66\11\0\1\67\30\0\2\70\31\0\1\71"+
    "\4\0\1\72\10\0\1\73\4\0\1\74\15\0\1\75"+
    "\26\0\1\76\26\0\1\77\17\0\1\100\4\0\1\101"+
    "\5\0\1\102\1\103\1\0\1\104\1\105\1\0\1\106"+
    "\2\0\1\107\1\110\1\0\1\111\1\112\10\0\1\113"+
    "\2\0\1\114\2\0\1\113\1\115\2\0\1\116\2\0"+
    "\1\113\2\0\1\117\3\0\1\120\1\0\1\121\1\116"+
    "\1\122\1\123\1\124\2\0\1\125\1\126\10\0\1\127"+
    "\1\130\2\0\1\131\2\0\1\132\1\133\2\0\1\134"+
    "\1\0\1\135\1\0\1\136\10\0\1\137\1\140\7\0"+
    "\1\141\1\142\1\143\10\0\1\144\1\145\10\0\1\146"+
    "\4\0\1\147\2\0\2\150\1\151\1\147\1\151\2\0"+
    "\1\147\1\0\2\152\1\151\3\0\1\153\5\0\1\154"+
    "\1\0\1\155\2\0\1\156\7\0\1\157\2\0\1\160"+
    "\1\161\1\162\1\0\1\163\1\164\2\0\1\165\14\0"+
    "\1\166\15\0\1\167\10\0\1\170\1\171\1\172\1\0"+
    "\1\173\12\0\1\174\12\0\1\175\4\0\1\176\36\0"+
    "\1\177\7\0\1\200\1\0\1\201\5\0\2\202\1\203"+
    "\1\202\7\0\1\204\6\0\2\205\5\0\1\206\1\207"+
    "\1\0\1\210\1\211\1\0\1\212\3\0\1\213\1\0"+
    "\1\214\1\215\1\0\1\216\1\0\1\217\1\0\1\220"+
    "\1\221\1\222\1\223\1\224\2\0\1\225\2\0\1\226"+
    "\1\0\1\227\1\0\1\230\2\0\1\231\1\232\5\0"+
    "\1\233\1\234";

  private static int [] zzUnpackAction() {
    int [] result = new int[758];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\64\0\150\0\234\0\320\0\u0104\0\u0138\0\u016c"+
    "\0\u01a0\0\u01d4\0\u0208\0\u023c\0\u0270\0\u02a4\0\u02d8\0\u030c"+
    "\0\u0340\0\u0374\0\u03a8\0\u03dc\0\u0410\0\u0444\0\u0478\0\u04ac"+
    "\0\u04e0\0\u0514\0\u0548\0\u057c\0\u05b0\0\u05e4\0\u0618\0\u064c"+
    "\0\u064c\0\u064c\0\u0680\0\u06b4\0\u06e8\0\u071c\0\u0750\0\u0784"+
    "\0\u064c\0\u07b8\0\u07ec\0\u0820\0\u0854\0\u064c\0\u064c\0\u0888"+
    "\0\u08bc\0\u064c\0\u064c\0\u08f0\0\u0924\0\u0958\0\u098c\0\u09c0"+
    "\0\u064c\0\u09f4\0\u064c\0\u064c\0\u0a28\0\u0a5c\0\u064c\0\u0a90"+
    "\0\u0ac4\0\u064c\0\u064c\0\u0af8\0\u0b2c\0\u0b60\0\u0b94\0\u0bc8"+
    "\0\u0bfc\0\u0c30\0\u0c64\0\u0c98\0\u064c\0\u0ccc\0\u064c\0\u064c"+
    "\0\u0d00\0\u0d34\0\u0d68\0\u064c\0\u0d9c\0\u064c\0\u0dd0\0\u0e04"+
    "\0\u0e38\0\u0e6c\0\u0ea0\0\u0ed4\0\u0f08\0\u0f3c\0\u064c\0\u0f70"+
    "\0\u0fa4\0\u0fd8\0\u100c\0\u1040\0\u1074\0\u064c\0\u064c\0\u064c"+
    "\0\u10a8\0\u10dc\0\u064c\0\u1110\0\u064c\0\u1144\0\u064c\0\u1178"+
    "\0\u11ac\0\u064c\0\u11e0\0\u1214\0\u064c\0\u1248\0\u127c\0\u12b0"+
    "\0\u12e4\0\u1318\0\u064c\0\u134c\0\u064c\0\u064c\0\u064c\0\u1380"+
    "\0\u13b4\0\u13e8\0\u141c\0\u1450\0\u064c\0\u064c\0\u1484\0\u064c"+
    "\0\u14b8\0\u14ec\0\u1520\0\u064c\0\u1554\0\u1588\0\u064c\0\u15bc"+
    "\0\u15f0\0\u064c\0\u1624\0\u1658\0\u168c\0\u16c0\0\u16f4\0\u064c"+
    "\0\u1728\0\u175c\0\u064c\0\u064c\0\u064c\0\u1790\0\u17c4\0\u17f8"+
    "\0\u182c\0\u1860\0\u1894\0\u18c8\0\u18fc\0\u1930\0\u1964\0\u1998"+
    "\0\u19cc\0\u1a00\0\u1a34\0\u1a68\0\u1a9c\0\u1ad0\0\u1b04\0\u1b38"+
    "\0\u1b6c\0\u1ba0\0\u1bd4\0\u1c08\0\u1c3c\0\u1c70\0\u1ca4\0\u1cd8"+
    "\0\u1d0c\0\u1d40\0\u1d74\0\u1da8\0\u1ddc\0\u1e10\0\u1e44\0\u1e78"+
    "\0\u1eac\0\u1ee0\0\u1f14\0\u1f48\0\u0b94\0\u0b60\0\u1f7c\0\u064c"+
    "\0\u0b94\0\u1fb0\0\u1fe4\0\u2018\0\u204c\0\u2080\0\u064c\0\u20b4"+
    "\0\u20e8\0\u211c\0\u2150\0\u2184\0\u21b8\0\u21ec\0\u2220\0\u2254"+
    "\0\u0e38\0\u0e04\0\u2288\0\u0e38\0\u22bc\0\u22f0\0\u2324\0\u2358"+
    "\0\u238c\0\u23c0\0\u0fd8\0\u23f4\0\u2428\0\u245c\0\u2490\0\u24c4"+
    "\0\u24f8\0\u252c\0\u2560\0\u2594\0\u25c8\0\u064c\0\u064c\0\u25fc"+
    "\0\u2630\0\u2664\0\u2698\0\u26cc\0\u2700\0\u2734\0\u2768\0\u279c"+
    "\0\u064c\0\u27d0\0\u2804\0\u2838\0\u286c\0\u28a0\0\u28d4\0\u2908"+
    "\0\u293c\0\u2970\0\u29a4\0\u14ec\0\u29d8\0\u2a0c\0\u2a40\0\u2a74"+
    "\0\u2aa8\0\u2adc\0\u2b10\0\u2b44\0\u2b78\0\u2bac\0\u2be0\0\u2c14"+
    "\0\u2c48\0\u064c\0\u0b94\0\u2c7c\0\u2cb0\0\u2ce4\0\u2d18\0\u2d4c"+
    "\0\u2d80\0\u2db4\0\u2de8\0\u2e1c\0\u2e50\0\u2e84\0\u2eb8\0\u2eec"+
    "\0\u2f20\0\u2f54\0\u2f88\0\u2fbc\0\u2ff0\0\u3024\0\u3058\0\u308c"+
    "\0\u30c0\0\u30f4\0\u3128\0\u315c\0\u064c\0\u3190\0\u31c4\0\u31f8"+
    "\0\u322c\0\u064c\0\u3260\0\u3294\0\u32c8\0\u32fc\0\u3330\0\u3364"+
    "\0\u3398\0\u33cc\0\u064c\0\u3400\0\u3434\0\u3468\0\u349c\0\u064c"+
    "\0\u34d0\0\u3504\0\u3538\0\u356c\0\u35a0\0\u35d4\0\u3608\0\u363c"+
    "\0\u3670\0\u36a4\0\u36d8\0\u370c\0\u3740\0\u064c\0\u3774\0\u37a8"+
    "\0\u37dc\0\u3810\0\u3844\0\u3878\0\u38ac\0\u38e0\0\u3914\0\u3948"+
    "\0\u397c\0\u39b0\0\u39e4\0\u3a18\0\u3a4c\0\u3a80\0\u3ab4\0\u3ae8"+
    "\0\u3b1c\0\u3b50\0\u3b84\0\u3bb8\0\u064c\0\u3bec\0\u3c20\0\u3c54"+
    "\0\u3c88\0\u3cbc\0\u3cf0\0\u3d24\0\u3d58\0\u3d8c\0\u3dc0\0\u3df4"+
    "\0\u3e28\0\u3e5c\0\u3e90\0\u3ec4\0\u3ef8\0\u3f2c\0\u3f60\0\u3f94"+
    "\0\u3fc8\0\u3ffc\0\u4030\0\u064c\0\u4064\0\u4098\0\u40cc\0\u4100"+
    "\0\u4134\0\u4168\0\u419c\0\u41d0\0\u4204\0\u4238\0\u426c\0\u42a0"+
    "\0\u42d4\0\u4308\0\u433c\0\u4370\0\u43a4\0\u43d8\0\u440c\0\u4440"+
    "\0\u064c\0\u4474\0\u44a8\0\u44dc\0\u4510\0\u4544\0\u064c\0\u064c"+
    "\0\u4578\0\u064c\0\u064c\0\u45ac\0\u064c\0\u45e0\0\u4614\0\u064c"+
    "\0\u064c\0\u4648\0\u064c\0\u064c\0\u467c\0\u46b0\0\u46e4\0\u4718"+
    "\0\u474c\0\u4780\0\u47b4\0\u47e8\0\u0b94\0\u481c\0\u4850\0\u064c"+
    "\0\u4884\0\u48b8\0\u064c\0\u064c\0\u48ec\0\u4920\0\u0e38\0\u4954"+
    "\0\u4988\0\u0e38\0\u49bc\0\u49f0\0\u064c\0\u4a24\0\u4a58\0\u4a8c"+
    "\0\u064c\0\u4ac0\0\u064c\0\u064c\0\u064c\0\u064c\0\u064c\0\u4af4"+
    "\0\u4b28\0\u064c\0\u064c\0\u4b5c\0\u4b90\0\u4bc4\0\u4bf8\0\u4c2c"+
    "\0\u4c60\0\u4c94\0\u4cc8\0\u064c\0\u064c\0\u4cfc\0\u4d30\0\u064c"+
    "\0\u4d64\0\u4d98\0\u064c\0\u064c\0\u4dcc\0\u4e00\0\u064c\0\u4e34"+
    "\0\u064c\0\u4e68\0\u064c\0\u4e9c\0\u4ed0\0\u4f04\0\u4f38\0\u4f6c"+
    "\0\u4fa0\0\u4fd4\0\u5008\0\u0b94\0\u064c\0\u503c\0\u5070\0\u50a4"+
    "\0\u50d8\0\u510c\0\u5140\0\u5174\0\u064c\0\u51a8\0\u064c\0\u51dc"+
    "\0\u5210\0\u5244\0\u5278\0\u52ac\0\u52e0\0\u5314\0\u5348\0\u064c"+
    "\0\u064c\0\u537c\0\u53b0\0\u53e4\0\u5418\0\u544c\0\u5480\0\u54b4"+
    "\0\u54e8\0\u064c\0\u551c\0\u5550\0\u5584\0\u55b8\0\u0b94\0\u55ec"+
    "\0\u5620\0\u064c\0\u0b94\0\u0b94\0\u064c\0\u064c\0\u5654\0\u5688"+
    "\0\u0e38\0\u56bc\0\u064c\0\u0e38\0\u0e38\0\u56f0\0\u5724\0\u5758"+
    "\0\u064c\0\u578c\0\u57c0\0\u57f4\0\u5828\0\u585c\0\u064c\0\u5890"+
    "\0\u064c\0\u58c4\0\u58f8\0\u064c\0\u592c\0\u5960\0\u5994\0\u59c8"+
    "\0\u59fc\0\u5a30\0\u5a64\0\u0b94\0\u5a98\0\u5acc\0\u0b94\0\u0b94"+
    "\0\u064c\0\u5b00\0\u064c\0\u064c\0\u5b34\0\u5b68\0\u064c\0\u5b9c"+
    "\0\u5bd0\0\u5c04\0\u5c38\0\u5c6c\0\u5ca0\0\u5cd4\0\u5d08\0\u5d3c"+
    "\0\u5d70\0\u5da4\0\u5dd8\0\u064c\0\u5e0c\0\u5e40\0\u5e74\0\u5ea8"+
    "\0\u5edc\0\u5f10\0\u5f44\0\u5f78\0\u5fac\0\u5fe0\0\u6014\0\u6048"+
    "\0\u607c\0\u60b0\0\u60e4\0\u6118\0\u614c\0\u6180\0\u61b4\0\u61e8"+
    "\0\u621c\0\u6250\0\u064c\0\u064c\0\u064c\0\u6284\0\u62b8\0\u62ec"+
    "\0\u6320\0\u6354\0\u6388\0\u63bc\0\u63f0\0\u6424\0\u6458\0\u648c"+
    "\0\u64c0\0\u064c\0\u64f4\0\u6528\0\u655c\0\u6590\0\u65c4\0\u65f8"+
    "\0\u662c\0\u6660\0\u6694\0\u66c8\0\u064c\0\u66fc\0\u6730\0\u6764"+
    "\0\u6798\0\u064c\0\u67cc\0\u6800\0\u6834\0\u6868\0\u689c\0\u68d0"+
    "\0\u6904\0\u6938\0\u696c\0\u69a0\0\u69d4\0\u6a08\0\u6a3c\0\u6a70"+
    "\0\u6aa4\0\u6ad8\0\u6b0c\0\u6b40\0\u6b74\0\u6ba8\0\u6bdc\0\u6c10"+
    "\0\u6c44\0\u6c78\0\u6cac\0\u6ce0\0\u6d14\0\u6d48\0\u6d7c\0\u6db0"+
    "\0\u6de4\0\u6e18\0\u6e4c\0\u6e80\0\u6eb4\0\u6ee8\0\u6f1c\0\u6f50"+
    "\0\u064c\0\u6f84\0\u064c\0\u6fb8\0\u6fec\0\u7020\0\u7054\0\u7088"+
    "\0\u064c\0\u0b94\0\u064c\0\u0e38\0\u70bc\0\u70f0\0\u7124\0\u7158"+
    "\0\u718c\0\u71c0\0\u71f4\0\u064c\0\u7228\0\u725c\0\u7290\0\u72c4"+
    "\0\u72f8\0\u732c\0\u064c\0\u0b94\0\u7360\0\u7394\0\u73c8\0\u73fc"+
    "\0\u7430\0\u064c\0\u7464\0\u7498\0\u064c\0\u064c\0\u74cc\0\u064c"+
    "\0\u7500\0\u7534\0\u7568\0\u064c\0\u759c\0\u064c\0\u064c\0\u75d0"+
    "\0\u064c\0\u7604\0\u064c\0\u7638\0\u064c\0\u064c\0\u064c\0\u064c"+
    "\0\u064c\0\u766c\0\u76a0\0\u064c\0\u76d4\0\u7708\0\u064c\0\u773c"+
    "\0\u064c\0\u7770\0\u064c\0\u77a4\0\u77d8\0\u064c\0\u064c\0\u780c"+
    "\0\u7840\0\u7874\0\u78a8\0\u78dc\0\u064c\0\u064c";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[758];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\40\1\41\1\42\20\40\2\43\3\40\1\44\3\40"+
    "\1\45\2\40\1\46\1\47\1\50\1\51\2\40\1\52"+
    "\1\53\1\54\3\40\2\55\5\40\2\0\1\56\1\57"+
    "\1\42\11\56\1\40\1\60\4\56\1\40\41\56\1\40"+
    "\1\57\1\42\36\40\1\61\1\62\17\40\2\0\1\40"+
    "\1\63\1\42\4\40\1\64\21\40\1\65\2\40\1\66"+
    "\2\40\1\67\1\40\1\70\1\71\2\40\1\72\10\40"+
    "\1\73\1\74\2\40\2\0\1\40\1\57\1\42\4\40"+
    "\1\75\31\40\1\76\1\77\2\40\1\100\10\40\1\73"+
    "\1\74\2\40\2\0\1\40\1\57\1\42\36\40\1\101"+
    "\1\102\17\40\2\0\2\103\1\42\11\103\1\40\5\103"+
    "\1\40\41\103\1\40\1\57\1\42\36\40\1\104\20\40"+
    "\2\0\1\40\1\57\1\42\4\40\1\105\1\106\5\40"+
    "\1\107\4\40\1\110\1\111\6\107\1\112\1\113\4\107"+
    "\1\114\1\115\6\107\1\116\1\107\1\40\2\107\1\117"+
    "\1\120\1\40\1\107\2\0\1\40\1\57\1\42\4\40"+
    "\1\105\13\40\2\121\6\40\1\122\5\40\1\123\1\124"+
    "\6\40\1\125\4\40\1\117\1\120\2\40\2\0\1\40"+
    "\1\126\1\42\20\126\1\40\27\126\1\40\4\126\1\40"+
    "\2\126\1\0\1\40\1\57\1\42\4\40\1\127\1\130"+
    "\5\40\1\131\4\40\1\110\1\132\4\131\1\133\1\131"+
    "\1\134\1\135\4\131\1\136\1\137\6\131\1\140\1\131"+
    "\1\40\2\131\1\117\1\120\1\40\1\131\2\0\1\40"+
    "\1\57\1\42\5\40\1\141\5\40\1\142\5\40\15\142"+
    "\1\143\1\40\2\142\1\144\5\142\1\40\2\142\3\40"+
    "\1\142\2\0\1\40\1\57\1\42\4\40\1\127\1\130"+
    "\5\40\1\131\4\40\1\110\1\132\4\131\1\133\1\131"+
    "\1\134\1\135\4\131\1\145\1\146\6\131\1\140\1\131"+
    "\1\40\2\131\1\117\1\120\1\40\1\131\2\0\1\40"+
    "\1\147\1\42\20\150\1\40\27\150\1\40\4\150\1\40"+
    "\2\150\1\0\1\40\1\57\1\42\4\40\1\127\13\40"+
    "\2\110\4\40\1\151\1\40\1\122\5\40\1\152\1\153"+
    "\6\40\1\125\4\40\1\117\1\120\2\40\2\0\1\40"+
    "\1\57\1\42\4\40\1\105\13\40\2\110\6\40\1\122"+
    "\5\40\1\154\1\155\6\40\1\125\4\40\1\117\1\120"+
    "\2\40\2\0\1\40\1\57\1\42\36\40\1\156\1\157"+
    "\2\40\1\160\14\40\2\0\1\40\1\57\1\42\4\40"+
    "\1\105\13\40\2\110\6\40\1\122\5\40\1\161\1\162"+
    "\6\40\1\125\4\40\1\117\1\120\2\40\2\0\1\40"+
    "\1\57\1\42\31\40\1\163\4\40\1\164\1\165\2\40"+
    "\1\166\14\40\2\0\1\40\1\57\1\42\4\40\1\167"+
    "\13\40\2\170\6\40\1\171\5\40\1\172\1\173\6\40"+
    "\1\174\4\40\1\175\1\176\2\40\2\0\1\40\1\147"+
    "\1\42\20\177\1\40\27\177\1\40\4\177\1\40\2\177"+
    "\1\0\1\40\1\57\1\42\20\40\2\200\14\40\1\201"+
    "\3\40\1\202\1\203\13\40\2\0\1\40\1\57\1\42"+
    "\4\40\1\127\1\130\5\40\1\131\4\40\1\110\1\132"+
    "\4\131\1\133\1\131\1\134\1\135\4\131\1\204\1\205"+
    "\6\131\1\140\1\131\1\40\2\131\1\117\1\120\1\40"+
    "\1\131\2\0\1\40\1\147\1\42\20\206\1\40\27\206"+
    "\1\40\4\206\1\40\2\206\1\0\1\40\1\57\1\42"+
    "\4\40\1\127\1\130\5\40\1\131\4\40\1\110\1\132"+
    "\4\131\1\133\1\131\1\134\1\135\4\131\1\207\1\210"+
    "\6\131\1\140\1\131\1\40\2\131\1\117\1\120\1\40"+
    "\1\131\2\0\1\40\1\57\1\42\5\40\1\211\5\40"+
    "\1\212\5\40\15\212\1\213\1\214\2\212\1\215\5\212"+
    "\1\40\2\212\3\40\1\212\2\0\1\40\1\57\1\42"+
    "\36\40\1\216\1\217\2\40\1\220\14\40\2\0\1\40"+
    "\1\57\1\42\4\40\1\105\13\40\2\110\6\40\1\122"+
    "\5\40\1\221\1\222\6\40\1\125\4\40\1\117\1\120"+
    "\2\40\2\0\1\40\1\57\1\42\4\40\1\223\1\106"+
    "\5\40\1\107\4\40\1\224\1\225\6\107\1\226\1\113"+
    "\4\107\1\227\1\230\6\107\1\231\1\107\1\40\1\107"+
    "\1\232\1\233\1\234\1\40\1\107\2\0\1\40\1\235"+
    "\1\42\20\235\1\40\27\235\1\40\4\235\1\40\2\235"+
    "\130\0\1\236\56\0\1\237\54\0\1\240\3\0\1\241"+
    "\1\0\1\242\56\0\1\243\2\0\1\244\77\0\1\245"+
    "\36\0\1\246\64\0\2\247\77\0\1\250\56\0\1\251"+
    "\63\0\1\252\13\0\1\253\36\0\1\254\63\0\1\255"+
    "\51\0\1\256\5\0\1\257\5\0\15\257\2\0\10\257"+
    "\1\0\2\257\3\0\1\257\31\0\1\260\70\0\1\261"+
    "\15\0\1\262\34\0\2\263\61\0\1\264\64\0\2\265"+
    "\42\0\1\266\4\0\1\267\5\0\1\270\2\0\1\271"+
    "\2\0\15\270\2\0\10\270\1\0\2\270\3\0\1\270"+
    "\24\0\1\272\101\0\1\273\45\0\1\274\63\0\1\275"+
    "\44\0\1\276\4\0\1\277\5\0\1\300\4\0\1\301"+
    "\1\302\5\300\1\303\1\300\1\304\4\300\2\0\10\300"+
    "\1\0\2\300\3\0\1\300\13\0\1\305\55\0\1\305"+
    "\4\0\1\306\1\0\1\307\2\0\2\305\1\0\1\305"+
    "\3\0\15\305\2\0\10\305\1\0\2\305\3\0\1\305"+
    "\34\0\1\310\34\0\1\305\4\0\1\306\1\0\1\307"+
    "\2\0\2\305\1\0\1\305\3\0\6\305\1\311\6\305"+
    "\2\0\10\305\1\0\2\305\3\0\1\305\5\0\1\305"+
    "\4\0\1\306\1\0\1\307\2\0\2\305\1\0\1\305"+
    "\3\0\12\305\1\312\2\305\2\0\1\305\1\313\6\305"+
    "\1\0\2\305\3\0\1\305\5\0\1\305\4\0\1\306"+
    "\1\0\1\307\2\0\2\305\1\0\1\305\3\0\15\305"+
    "\2\0\1\305\1\314\6\305\1\0\2\305\3\0\1\305"+
    "\24\0\1\315\44\0\1\305\4\0\1\306\1\0\1\307"+
    "\2\0\2\305\1\0\1\305\3\0\5\305\1\316\7\305"+
    "\2\0\10\305\1\0\2\305\3\0\1\305\34\0\1\317"+
    "\67\0\1\320\5\0\1\321\41\0\1\322\72\0\1\323"+
    "\35\0\1\276\4\0\1\324\5\0\1\325\4\0\1\301"+
    "\1\326\5\325\1\327\1\325\1\330\4\325\2\0\10\325"+
    "\1\0\2\325\3\0\1\325\13\0\1\331\55\0\1\331"+
    "\4\0\1\332\1\0\1\333\2\0\2\331\1\0\1\331"+
    "\3\0\15\331\2\0\10\331\1\0\2\331\3\0\1\331"+
    "\5\0\1\331\4\0\1\332\1\0\1\333\2\0\2\331"+
    "\1\0\1\331\3\0\6\331\1\334\6\331\2\0\10\331"+
    "\1\0\2\331\3\0\1\331\5\0\1\331\4\0\1\332"+
    "\1\0\1\333\2\0\2\331\1\0\1\331\3\0\3\331"+
    "\1\335\11\331\2\0\10\331\1\0\2\331\3\0\1\331"+
    "\5\0\1\331\4\0\1\332\1\0\1\333\2\0\2\331"+
    "\1\0\1\331\3\0\12\331\1\336\2\331\2\0\1\331"+
    "\1\337\6\331\1\0\2\331\3\0\1\331\5\0\1\331"+
    "\4\0\1\332\1\0\1\333\2\0\2\331\1\0\1\331"+
    "\3\0\15\331\2\0\1\331\1\340\6\331\1\0\2\331"+
    "\3\0\1\331\24\0\1\341\44\0\1\331\4\0\1\332"+
    "\1\0\1\333\2\0\2\331\1\0\1\331\3\0\5\331"+
    "\1\342\7\331\2\0\10\331\1\0\2\331\3\0\1\331"+
    "\13\0\1\343\60\0\1\344\77\0\1\345\47\0\1\344"+
    "\14\0\2\346\61\0\1\347\70\0\1\350\56\0\1\351"+
    "\63\0\1\352\63\0\1\353\64\0\2\354\61\0\1\355"+
    "\100\0\1\356\6\0\1\357\37\0\1\360\64\0\2\361"+
    "\42\0\1\362\4\0\1\363\5\0\1\364\4\0\1\365"+
    "\1\366\5\364\1\367\1\364\1\370\4\364\2\0\10\364"+
    "\1\0\2\364\3\0\1\364\34\0\1\371\67\0\1\372"+
    "\5\0\1\373\41\0\1\374\72\0\1\375\75\0\1\376"+
    "\42\0\1\377\64\0\2\u0100\77\0\1\u0101\45\0\1\u0102"+
    "\63\0\1\u0103\52\0\1\u0104\60\0\1\u0105\77\0\1\u0106"+
    "\47\0\1\u0105\14\0\2\u0107\61\0\1\u0108\64\0\2\u0109"+
    "\61\0\1\u010a\44\0\1\u010b\4\0\1\u010c\5\0\1\u010d"+
    "\4\0\1\u010e\1\u010f\5\u010d\1\u0110\1\u010d\1\u0111\4\u010d"+
    "\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d\34\0\1\u0112"+
    "\34\0\1\305\4\0\1\306\1\0\1\307\2\0\2\305"+
    "\1\0\1\305\3\0\6\305\1\u0113\6\305\2\0\10\305"+
    "\1\0\2\305\3\0\1\305\5\0\1\305\4\0\1\306"+
    "\1\0\1\307\2\0\2\305\1\0\1\305\3\0\12\305"+
    "\1\u0114\2\305\2\0\1\305\1\u0115\6\305\1\0\2\305"+
    "\3\0\1\305\24\0\1\u0116\44\0\1\305\4\0\1\306"+
    "\1\0\1\307\2\0\2\305\1\0\1\305\3\0\5\305"+
    "\1\u0117\7\305\2\0\10\305\1\0\2\305\3\0\1\305"+
    "\5\0\1\305\4\0\1\306\1\0\1\307\2\0\2\305"+
    "\1\0\1\305\3\0\7\305\1\u0118\5\305\2\0\10\305"+
    "\1\0\2\305\3\0\1\305\35\0\1\u0119\64\0\1\u011a"+
    "\7\0\1\u011b\47\0\1\u011c\105\0\1\u011d\50\0\1\u011e"+
    "\74\0\1\u011f\61\0\1\u0120\51\0\1\u0121\51\0\1\u0122"+
    "\77\0\1\u0123\64\0\1\u0124\62\0\1\u0125\71\0\1\u0126"+
    "\42\0\2\u0127\61\0\1\u0128\63\0\1\u0129\52\0\1\257"+
    "\60\0\1\u012a\114\0\1\u012b\77\0\2\u012c\62\0\2\u012d"+
    "\46\0\1\u012e\46\0\1\u012f\77\0\1\u0130\30\0\1\266"+
    "\1\u0131\2\0\1\u0132\65\0\1\270\55\0\1\270\3\0"+
    "\1\u0132\1\267\4\0\2\270\1\0\1\270\3\0\15\270"+
    "\2\0\10\270\1\0\2\270\3\0\1\270\5\0\1\u0133"+
    "\4\0\1\u0134\5\0\1\u0135\5\0\15\u0135\2\0\10\u0135"+
    "\1\0\2\u0135\3\0\1\u0135\24\0\1\u0136\77\0\1\u0137"+
    "\47\0\1\u0138\63\0\1\u0139\44\0\1\276\1\u013a\2\0"+
    "\1\u013b\65\0\1\300\55\0\1\300\3\0\1\u013b\1\277"+
    "\4\0\2\300\1\0\1\300\3\0\15\300\2\0\10\300"+
    "\1\0\2\300\3\0\1\300\27\0\1\u013c\41\0\1\300"+
    "\3\0\1\u013b\1\277\4\0\2\300\1\0\1\300\3\0"+
    "\1\300\1\u013d\13\300\2\0\10\300\1\0\2\300\3\0"+
    "\1\300\5\0\1\300\3\0\1\u013b\1\277\4\0\2\300"+
    "\1\0\1\300\3\0\4\300\1\u013e\10\300\2\0\10\300"+
    "\1\0\2\300\3\0\1\300\5\0\1\300\3\0\1\u013b"+
    "\1\277\4\0\2\300\1\0\1\300\3\0\4\300\1\u013f"+
    "\10\300\2\0\10\300\1\0\2\300\3\0\1\300\15\0"+
    "\1\u0140\53\0\1\305\4\0\1\306\1\0\1\307\2\0"+
    "\2\305\1\0\1\305\3\0\10\305\1\u0141\4\305\2\0"+
    "\10\305\1\0\2\305\3\0\1\305\5\0\1\305\4\0"+
    "\1\306\1\0\1\307\2\0\2\305\1\0\1\305\2\0"+
    "\1\u0142\1\u0143\12\305\1\u0144\1\305\2\0\10\305\1\0"+
    "\2\305\3\0\1\305\5\0\1\305\4\0\1\306\1\0"+
    "\1\307\2\0\2\305\1\0\1\305\2\0\1\u0145\1\u0146"+
    "\14\305\2\0\10\305\1\0\2\305\3\0\1\305\24\0"+
    "\1\u0147\44\0\1\305\4\0\1\306\1\0\1\307\2\0"+
    "\2\305\1\0\1\305\3\0\3\305\1\u0148\11\305\2\0"+
    "\10\305\1\0\2\305\3\0\1\305\36\0\1\u0149\52\0"+
    "\2\u0142\12\0\1\u014a\46\0\1\u014b\70\0\1\u014c\45\0"+
    "\1\325\55\0\1\300\2\0\1\u014d\1\u013b\1\277\4\0"+
    "\2\300\1\0\1\300\3\0\15\300\2\0\10\300\1\0"+
    "\2\300\3\0\1\300\5\0\1\300\2\0\1\u014d\1\u013b"+
    "\1\277\4\0\2\300\1\0\1\300\3\0\1\300\1\u013d"+
    "\13\300\2\0\10\300\1\0\2\300\3\0\1\300\5\0"+
    "\1\300\2\0\1\u014d\1\u013b\1\277\4\0\2\300\1\0"+
    "\1\300\3\0\4\300\1\u013e\10\300\2\0\10\300\1\0"+
    "\2\300\3\0\1\300\5\0\1\300\2\0\1\u014d\1\u013b"+
    "\1\277\4\0\2\300\1\0\1\300\3\0\4\300\1\u013f"+
    "\10\300\2\0\10\300\1\0\2\300\3\0\1\300\15\0"+
    "\1\u014e\53\0\1\331\4\0\1\332\1\0\1\333\2\0"+
    "\2\331\1\0\1\331\3\0\13\331\1\u014f\1\331\2\0"+
    "\10\331\1\0\2\331\3\0\1\331\5\0\1\331\4\0"+
    "\1\332\1\0\1\333\2\0\2\331\1\0\1\331\3\0"+
    "\10\331\1\u0150\4\331\2\0\10\331\1\0\2\331\3\0"+
    "\1\331\5\0\1\331\4\0\1\332\1\0\1\333\2\0"+
    "\2\331\1\0\1\331\2\0\1\u0142\1\u0151\12\331\1\u0152"+
    "\1\331\2\0\10\331\1\0\2\331\3\0\1\331\5\0"+
    "\1\331\4\0\1\332\1\0\1\333\2\0\2\331\1\0"+
    "\1\331\2\0\1\u0153\1\u0154\14\331\2\0\10\331\1\0"+
    "\2\331\3\0\1\331\24\0\1\u0155\44\0\1\331\4\0"+
    "\1\332\1\0\1\333\2\0\2\331\1\0\1\331\3\0"+
    "\3\331\1\u0156\11\331\2\0\10\331\1\0\2\331\3\0"+
    "\1\331\21\0\1\u0157\66\0\1\u0158\77\0\1\u0159\47\0"+
    "\1\u015a\100\0\1\u015b\46\0\1\u015c\63\0\1\u015d\63\0"+
    "\1\u015e\77\0\1\u015f\5\0\1\u0160\41\0\1\u0161\63\0"+
    "\1\u0162\77\0\1\u0163\30\0\1\362\1\u0164\2\0\1\u0165"+
    "\65\0\1\364\55\0\1\364\3\0\1\u0165\1\363\4\0"+
    "\2\364\1\0\1\364\3\0\15\364\2\0\10\364\1\0"+
    "\2\364\3\0\1\364\27\0\1\u0166\41\0\1\364\3\0"+
    "\1\u0165\1\363\4\0\2\364\1\0\1\364\3\0\1\364"+
    "\1\u0167\13\364\2\0\10\364\1\0\2\364\3\0\1\364"+
    "\5\0\1\364\3\0\1\u0165\1\363\4\0\2\364\1\0"+
    "\1\364\3\0\4\364\1\u0168\10\364\2\0\10\364\1\0"+
    "\2\364\3\0\1\364\5\0\1\364\3\0\1\u0165\1\363"+
    "\4\0\2\364\1\0\1\364\3\0\4\364\1\u0169\10\364"+
    "\2\0\10\364\1\0\2\364\3\0\1\364\36\0\1\u016a"+
    "\52\0\2\u016b\12\0\1\u016c\46\0\1\u016d\70\0\1\u016e"+
    "\67\0\1\u016f\52\0\1\u0170\77\0\1\u0171\64\0\1\u0172"+
    "\46\0\1\u0173\63\0\1\u0174\60\0\1\u0175\66\0\1\u0176"+
    "\77\0\1\u0177\47\0\1\u0178\77\0\1\u0179\47\0\1\u017a"+
    "\44\0\1\u010b\1\u017b\2\0\1\u017c\65\0\1\u010d\55\0"+
    "\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d"+
    "\3\0\15\u010d\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d"+
    "\27\0\1\u017d\41\0\1\u010d\3\0\1\u017c\1\u010c\4\0"+
    "\2\u010d\1\0\1\u010d\3\0\1\u010d\1\u017e\13\u010d\2\0"+
    "\10\u010d\1\0\2\u010d\3\0\1\u010d\5\0\1\u010d\3\0"+
    "\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0\4\u010d"+
    "\1\u017f\10\u010d\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d"+
    "\5\0\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d\1\0"+
    "\1\u010d\3\0\4\u010d\1\u0180\10\u010d\2\0\10\u010d\1\0"+
    "\2\u010d\3\0\1\u010d\5\0\1\305\4\0\1\306\1\0"+
    "\1\307\2\0\2\305\1\0\1\305\3\0\10\305\1\u0181"+
    "\4\305\2\0\10\305\1\0\2\305\3\0\1\305\5\0"+
    "\1\305\4\0\1\306\1\0\1\307\2\0\2\305\1\0"+
    "\1\305\2\0\1\u0182\1\u0183\12\305\1\u0184\1\305\2\0"+
    "\10\305\1\0\2\305\3\0\1\305\24\0\1\u0185\44\0"+
    "\1\305\4\0\1\306\1\0\1\307\2\0\2\305\1\0"+
    "\1\305\3\0\3\305\1\u0186\11\305\2\0\10\305\1\0"+
    "\2\305\3\0\1\305\5\0\1\305\4\0\1\306\1\0"+
    "\1\307\2\0\2\305\1\0\1\305\3\0\15\305\2\0"+
    "\1\305\1\u0187\6\305\1\0\2\305\3\0\1\305\53\0"+
    "\1\u0188\45\0\1\u0189\63\0\1\u018a\61\0\1\u018b\65\0"+
    "\1\u018c\73\0\1\u018d\57\0\1\u018e\70\0\1\u018f\42\0"+
    "\2\u0190\54\0\1\u0191\63\0\1\u0192\106\0\1\u0193\53\0"+
    "\1\u0194\72\0\1\u0195\62\0\1\u0196\67\0\1\u0197\36\0"+
    "\1\u0198\65\0\1\u0199\77\0\1\u019a\103\0\2\u019b\36\0"+
    "\1\u019c\51\0\1\u019d\63\0\1\u019e\51\0\1\u019f\63\0"+
    "\1\u0133\3\0\1\u01a0\1\u0134\5\0\1\u0135\5\0\15\u0135"+
    "\2\0\10\u0135\1\0\2\u0135\3\0\1\u0135\13\0\1\u0135"+
    "\55\0\1\u0135\3\0\1\u01a0\1\u0134\4\0\2\u0135\1\0"+
    "\1\u0135\3\0\15\u0135\2\0\10\u0135\1\0\2\u0135\3\0"+
    "\1\u0135\17\0\1\u01a1\100\0\1\u01a2\46\0\1\u01a3\63\0"+
    "\1\u01a4\51\0\1\u01a5\106\0\1\u01a6\40\0\1\300\3\0"+
    "\1\u013b\1\277\4\0\2\300\1\0\1\300\3\0\2\300"+
    "\1\u01a7\12\300\2\0\10\300\1\0\2\300\3\0\1\300"+
    "\5\0\1\300\3\0\1\u013b\1\277\4\0\2\300\1\0"+
    "\1\300\3\0\5\300\1\u01a8\7\300\2\0\10\300\1\0"+
    "\2\300\3\0\1\300\5\0\1\300\3\0\1\u013b\1\277"+
    "\4\0\2\300\1\0\1\300\3\0\12\300\1\u01a9\2\300"+
    "\2\0\10\300\1\0\2\300\3\0\1\300\5\0\1\305"+
    "\4\0\1\306\1\0\1\307\2\0\2\305\1\0\1\305"+
    "\3\0\11\305\1\u01aa\3\305\2\0\10\305\1\0\2\305"+
    "\3\0\1\305\40\0\1\u01ab\30\0\1\305\4\0\1\306"+
    "\1\0\1\307\2\0\2\305\1\0\1\305\3\0\12\305"+
    "\1\u01ac\2\305\2\0\10\305\1\0\2\305\3\0\1\305"+
    "\5\0\1\305\4\0\1\306\1\0\1\307\2\0\2\305"+
    "\1\0\1\305\3\0\14\305\1\u01ad\2\0\10\305\1\0"+
    "\2\305\3\0\1\305\36\0\1\u01ae\32\0\1\305\4\0"+
    "\1\306\1\0\1\307\2\0\2\305\1\0\1\305\3\0"+
    "\10\305\1\u01af\4\305\2\0\10\305\1\0\2\305\3\0"+
    "\1\305\17\0\1\u01b0\51\0\1\305\4\0\1\306\1\0"+
    "\1\307\2\0\2\305\1\0\1\305\3\0\15\305\2\0"+
    "\4\305\1\u01b1\3\305\1\0\2\305\3\0\1\305\37\0"+
    "\1\u01b2\66\0\1\u01b3\40\0\1\u01b4\115\0\1\u01b5\33\0"+
    "\1\u01b6\47\0\1\331\4\0\1\332\1\0\1\333\2\0"+
    "\2\331\1\0\1\331\3\0\7\331\1\u01b7\5\331\2\0"+
    "\10\331\1\0\2\331\3\0\1\331\5\0\1\331\4\0"+
    "\1\332\1\0\1\333\2\0\2\331\1\0\1\331\3\0"+
    "\11\331\1\u01b8\3\331\2\0\10\331\1\0\2\331\3\0"+
    "\1\331\5\0\1\331\4\0\1\332\1\0\1\333\2\0"+
    "\2\331\1\0\1\331\3\0\12\331\1\u01b9\2\331\2\0"+
    "\10\331\1\0\2\331\3\0\1\331\5\0\1\331\4\0"+
    "\1\332\1\0\1\333\2\0\2\331\1\0\1\331\3\0"+
    "\14\331\1\u01ba\2\0\10\331\1\0\2\331\3\0\1\331"+
    "\36\0\1\u01bb\32\0\1\331\4\0\1\332\1\0\1\333"+
    "\2\0\2\331\1\0\1\331\3\0\10\331\1\u01bc\4\331"+
    "\2\0\10\331\1\0\2\331\3\0\1\331\17\0\1\u01bd"+
    "\51\0\1\331\4\0\1\332\1\0\1\333\2\0\2\331"+
    "\1\0\1\331\3\0\15\331\2\0\4\331\1\u01be\3\331"+
    "\1\0\2\331\3\0\1\331\12\0\1\u01bf\5\0\1\u01c0"+
    "\5\0\15\u01c0\2\0\10\u01c0\1\0\2\u01c0\3\0\1\u01c0"+
    "\17\0\1\u01c1\63\0\1\u01c2\63\0\1\u01c3\101\0\1\u01c4"+
    "\45\0\1\u01c5\63\0\1\u01c6\63\0\1\u01c7\63\0\1\u01c8"+
    "\66\0\1\u01c9\60\0\1\u01ca\63\0\1\u01cb\63\0\1\u01cc"+
    "\51\0\1\u01cd\106\0\1\u01ce\40\0\1\364\3\0\1\u0165"+
    "\1\363\4\0\2\364\1\0\1\364\3\0\2\364\1\u01cf"+
    "\12\364\2\0\10\364\1\0\2\364\3\0\1\364\5\0"+
    "\1\364\3\0\1\u0165\1\363\4\0\2\364\1\0\1\364"+
    "\3\0\5\364\1\u01d0\7\364\2\0\10\364\1\0\2\364"+
    "\3\0\1\364\5\0\1\364\3\0\1\u0165\1\363\4\0"+
    "\2\364\1\0\1\364\3\0\12\364\1\u01d1\2\364\2\0"+
    "\10\364\1\0\2\364\3\0\1\364\37\0\1\u01d2\64\0"+
    "\1\u01d3\65\0\1\u01d4\40\0\1\u01d5\115\0\1\u01d6\65\0"+
    "\1\u01d7\27\0\1\u01d8\63\0\1\u01d9\106\0\1\u01da\40\0"+
    "\1\u01db\63\0\1\u01dc\56\0\1\u01dd\5\0\1\u01de\5\0"+
    "\15\u01de\2\0\10\u01de\1\0\2\u01de\3\0\1\u01de\17\0"+
    "\1\u01df\63\0\1\u01e0\63\0\1\u01e1\63\0\1\u01e2\63\0"+
    "\1\u01e3\51\0\1\u01e4\106\0\1\u01e5\40\0\1\u010d\3\0"+
    "\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0\2\u010d"+
    "\1\u01e6\12\u010d\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d"+
    "\5\0\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d\1\0"+
    "\1\u010d\3\0\5\u010d\1\u01e7\7\u010d\2\0\10\u010d\1\0"+
    "\2\u010d\3\0\1\u010d\5\0\1\u010d\3\0\1\u017c\1\u010c"+
    "\4\0\2\u010d\1\0\1\u010d\3\0\12\u010d\1\u01e8\2\u010d"+
    "\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d\5\0\1\305"+
    "\4\0\1\306\1\0\1\307\2\0\2\305\1\0\1\305"+
    "\3\0\11\305\1\u01e9\3\305\2\0\10\305\1\0\2\305"+
    "\3\0\1\305\40\0\1\u01ea\30\0\1\305\4\0\1\306"+
    "\1\0\1\307\2\0\2\305\1\0\1\305\3\0\12\305"+
    "\1\u01eb\2\305\2\0\10\305\1\0\2\305\3\0\1\305"+
    "\5\0\1\305\4\0\1\306\1\0\1\307\2\0\2\305"+
    "\1\0\1\305\3\0\14\305\1\u01ec\2\0\10\305\1\0"+
    "\2\305\3\0\1\305\17\0\1\u01ed\51\0\1\305\4\0"+
    "\1\306\1\0\1\307\2\0\2\305\1\0\1\305\3\0"+
    "\15\305\2\0\4\305\1\u01ee\3\305\1\0\2\305\3\0"+
    "\1\305\5\0\1\305\4\0\1\306\1\0\1\307\2\0"+
    "\2\305\1\0\1\305\3\0\14\305\1\u01ef\2\0\10\305"+
    "\1\0\2\305\3\0\1\305\32\0\1\u01f0\101\0\1\u01f1"+
    "\51\0\1\u01f2\76\0\1\u01f3\34\0\1\u01f4\107\0\1\u01f5"+
    "\57\0\1\u01f6\56\0\1\u01f7\70\0\1\u01f8\53\0\1\u01f9"+
    "\3\0\1\u01fa\2\0\1\u01fb\1\u01fc\5\0\1\u01fd\1\u01fe"+
    "\3\0\2\u01ff\45\0\1\u0200\71\0\1\u0201\57\0\1\u0202"+
    "\61\0\1\u0203\35\0\1\u0204\5\0\1\u0205\5\0\15\u0205"+
    "\2\0\10\u0205\1\0\2\u0205\3\0\1\u0205\46\0\1\u0206"+
    "\47\0\1\u0207\3\0\1\u0208\2\0\1\u0209\27\0\1\u019f"+
    "\3\0\1\u0132\114\0\1\u020a\26\0\1\u01a5\3\0\1\u013b"+
    "\103\0\1\u020b\37\0\1\300\3\0\1\u013b\1\277\4\0"+
    "\2\300\1\0\1\300\3\0\3\300\1\u020c\11\300\2\0"+
    "\10\300\1\0\2\300\3\0\1\300\5\0\1\300\3\0"+
    "\1\u013b\1\277\4\0\2\300\1\0\1\300\3\0\4\300"+
    "\1\u020d\10\300\2\0\10\300\1\0\2\300\3\0\1\300"+
    "\5\0\1\300\3\0\1\u013b\1\277\4\0\2\300\1\0"+
    "\1\300\3\0\13\300\1\u020e\1\300\2\0\10\300\1\0"+
    "\2\300\3\0\1\300\5\0\1\305\4\0\1\306\1\0"+
    "\1\307\2\0\2\305\1\0\1\305\3\0\14\305\1\u020f"+
    "\2\0\10\305\1\0\2\305\3\0\1\305\32\0\1\u0210"+
    "\36\0\1\305\4\0\1\306\1\0\1\307\2\0\2\305"+
    "\1\0\1\305\3\0\4\305\1\u0211\10\305\2\0\10\305"+
    "\1\0\2\305\3\0\1\305\62\0\2\u0212\5\0\1\305"+
    "\4\0\1\306\1\0\1\307\2\0\2\305\1\0\1\305"+
    "\3\0\15\305\2\0\10\305\1\0\2\305\2\0\1\u0212"+
    "\1\u0213\5\0\1\305\4\0\1\306\1\0\1\307\2\0"+
    "\2\305\1\0\1\305\3\0\14\305\1\u0214\2\0\10\305"+
    "\1\0\2\305\3\0\1\305\42\0\1\u0215\63\0\1\u0216"+
    "\33\0\1\u0217\5\0\1\u0218\5\0\15\u0218\2\0\10\u0218"+
    "\1\0\2\u0218\3\0\1\u0218\5\0\1\331\4\0\1\332"+
    "\1\0\1\333\2\0\2\331\1\0\1\331\3\0\14\331"+
    "\1\u0219\2\0\10\331\1\0\2\331\3\0\1\331\5\0"+
    "\1\331\4\0\1\332\1\0\1\333\2\0\2\331\1\0"+
    "\1\331\3\0\4\331\1\u021a\10\331\2\0\10\331\1\0"+
    "\2\331\3\0\1\331\62\0\2\u021b\5\0\1\331\4\0"+
    "\1\332\1\0\1\333\2\0\2\331\1\0\1\331\3\0"+
    "\15\331\2\0\10\331\1\0\2\331\2\0\1\u021b\1\u021c"+
    "\5\0\1\331\4\0\1\332\1\0\1\333\2\0\2\331"+
    "\1\0\1\331\3\0\14\331\1\u021d\2\0\10\331\1\0"+
    "\2\331\3\0\1\331\13\0\1\u01c0\55\0\1\u01c0\1\u021e"+
    "\3\0\1\u01bf\4\0\2\u01c0\1\u0157\1\u01c0\3\0\15\u01c0"+
    "\2\0\10\u01c0\1\0\2\u01c0\3\0\1\u01c0\25\0\2\u021f"+
    "\76\0\1\u0220\63\0\1\u0221\71\0\1\u0222\21\0\1\u01cd"+
    "\3\0\1\u0165\103\0\1\u0223\37\0\1\364\3\0\1\u0165"+
    "\1\363\4\0\2\364\1\0\1\364\3\0\3\364\1\u0224"+
    "\11\364\2\0\10\364\1\0\2\364\3\0\1\364\5\0"+
    "\1\364\3\0\1\u0165\1\363\4\0\2\364\1\0\1\364"+
    "\3\0\4\364\1\u0225\10\364\2\0\10\364\1\0\2\364"+
    "\3\0\1\364\5\0\1\364\3\0\1\u0165\1\363\4\0"+
    "\2\364\1\0\1\364\3\0\13\364\1\u0226\1\364\2\0"+
    "\10\364\1\0\2\364\3\0\1\364\42\0\1\u0227\53\0"+
    "\1\u0228\73\0\1\u0229\53\0\1\u022a\67\0\1\u022b\65\0"+
    "\1\u022c\36\0\1\u01de\55\0\1\u01de\1\u022d\3\0\1\u01dd"+
    "\4\0\2\u01de\1\u0175\1\u01de\3\0\15\u01de\2\0\10\u01de"+
    "\1\0\2\u01de\3\0\1\u01de\25\0\2\u022e\105\0\1\u022f"+
    "\20\0\1\u01e4\3\0\1\u017c\103\0\1\u0230\37\0\1\u010d"+
    "\3\0\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0"+
    "\3\u010d\1\u0231\11\u010d\2\0\10\u010d\1\0\2\u010d\3\0"+
    "\1\u010d\5\0\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d"+
    "\1\0\1\u010d\3\0\4\u010d\1\u0232\10\u010d\2\0\10\u010d"+
    "\1\0\2\u010d\3\0\1\u010d\5\0\1\u010d\3\0\1\u017c"+
    "\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0\13\u010d\1\u0233"+
    "\1\u010d\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d\5\0"+
    "\1\305\4\0\1\306\1\0\1\307\2\0\2\305\1\0"+
    "\1\305\3\0\14\305\1\u0234\2\0\10\305\1\0\2\305"+
    "\3\0\1\305\32\0\1\u0235\36\0\1\305\4\0\1\306"+
    "\1\0\1\307\2\0\2\305\1\0\1\305\3\0\4\305"+
    "\1\u0236\10\305\2\0\10\305\1\0\2\305\3\0\1\305"+
    "\5\0\1\305\4\0\1\306\1\0\1\307\2\0\2\305"+
    "\1\0\1\305\3\0\14\305\1\u0237\2\0\10\305\1\0"+
    "\2\305\3\0\1\305\5\0\1\305\4\0\1\306\1\0"+
    "\1\307\2\0\2\305\1\0\1\305\3\0\5\305\1\u0238"+
    "\7\305\2\0\10\305\1\0\2\305\3\0\1\305\40\0"+
    "\1\u0239\55\0\1\u023a\63\0\1\u023b\73\0\1\u023c\62\0"+
    "\1\u023d\44\0\1\u023e\101\0\1\u023f\63\0\1\u0240\54\0"+
    "\1\u0241\3\0\1\u0242\1\0\1\u0243\56\0\1\u0244\102\0"+
    "\1\u0245\54\0\1\u0246\56\0\1\u0247\77\0\1\u0248\31\0"+
    "\1\u0249\76\0\1\u024a\44\0\1\u0205\55\0\1\u0205\1\u024b"+
    "\3\0\1\u0204\4\0\2\u0205\1\u0199\1\u0205\3\0\15\u0205"+
    "\2\0\10\u0205\1\0\2\u0205\3\0\1\u0205\42\0\1\u024c"+
    "\61\0\1\u024d\61\0\1\u024e\15\0\1\u024f\34\0\2\u0250"+
    "\62\0\2\u0251\42\0\1\300\3\0\1\u013b\1\277\4\0"+
    "\2\300\1\0\1\300\2\0\1\u0251\1\u0252\14\300\2\0"+
    "\10\300\1\0\2\300\3\0\1\300\5\0\1\300\3\0"+
    "\1\u013b\1\277\4\0\2\300\1\0\1\300\3\0\10\300"+
    "\1\u0253\4\300\2\0\10\300\1\0\2\300\3\0\1\300"+
    "\5\0\1\300\3\0\1\u013b\1\277\4\0\2\300\1\0"+
    "\1\300\3\0\5\300\1\u0254\7\300\2\0\10\300\1\0"+
    "\2\300\3\0\1\300\35\0\1\u0255\33\0\1\305\4\0"+
    "\1\306\1\0\1\307\2\0\2\305\1\0\1\305\3\0"+
    "\7\305\1\u0256\5\305\2\0\10\305\1\0\2\305\3\0"+
    "\1\305\13\0\1\u0218\55\0\1\u0218\1\u0257\3\0\1\u0217"+
    "\4\0\2\u0218\1\u01b6\1\u0218\3\0\15\u0218\2\0\10\u0218"+
    "\1\0\2\u0218\3\0\1\u0218\5\0\1\331\4\0\1\332"+
    "\1\0\1\333\2\0\2\331\1\0\1\331\3\0\7\331"+
    "\1\u0258\5\331\2\0\10\331\1\0\2\331\3\0\1\331"+
    "\12\0\1\u0259\5\0\1\u025a\5\0\15\u025a\2\0\10\u025a"+
    "\1\0\2\u025a\3\0\1\u025a\45\0\1\u025b\53\0\1\u025c"+
    "\53\0\2\u025d\62\0\2\u025e\42\0\1\364\3\0\1\u0165"+
    "\1\363\4\0\2\364\1\0\1\364\2\0\1\u025e\1\u025f"+
    "\14\364\2\0\10\364\1\0\2\364\3\0\1\364\5\0"+
    "\1\364\3\0\1\u0165\1\363\4\0\2\364\1\0\1\364"+
    "\3\0\10\364\1\u0260\4\364\2\0\10\364\1\0\2\364"+
    "\3\0\1\364\5\0\1\364\3\0\1\u0165\1\363\4\0"+
    "\2\364\1\0\1\364\3\0\5\364\1\u0261\7\364\2\0"+
    "\10\364\1\0\2\364\3\0\1\364\35\0\1\u0262\66\0"+
    "\1\u0263\64\0\1\u0264\6\0\1\u0265\25\0\1\u0266\5\0"+
    "\1\u0267\5\0\15\u0267\2\0\10\u0267\1\0\2\u0267\3\0"+
    "\1\u0267\45\0\1\u0268\60\0\1\u0269\46\0\2\u026a\42\0"+
    "\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d"+
    "\2\0\1\u026a\1\u026b\14\u010d\2\0\10\u010d\1\0\2\u010d"+
    "\3\0\1\u010d\5\0\1\u010d\3\0\1\u017c\1\u010c\4\0"+
    "\2\u010d\1\0\1\u010d\3\0\10\u010d\1\u026c\4\u010d\2\0"+
    "\10\u010d\1\0\2\u010d\3\0\1\u010d\5\0\1\u010d\3\0"+
    "\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0\5\u010d"+
    "\1\u026d\7\u010d\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d"+
    "\35\0\1\u026e\33\0\1\305\4\0\1\306\1\0\1\307"+
    "\2\0\2\305\1\0\1\305\3\0\7\305\1\u026f\5\305"+
    "\2\0\10\305\1\0\2\305\3\0\1\305\27\0\1\u0270"+
    "\66\0\1\u0271\66\0\1\u0272\74\0\1\u0273\47\0\1\u0274"+
    "\105\0\1\u0275\50\0\1\u0276\74\0\1\u0277\47\0\1\u0278"+
    "\66\0\1\u0279\62\0\1\u027a\50\0\2\u027b\104\0\1\u027c"+
    "\47\0\1\u027d\42\0\1\u027e\5\0\1\u027f\5\0\15\u027f"+
    "\2\0\10\u027f\1\0\2\u027f\3\0\1\u027f\36\0\1\u0280"+
    "\102\0\2\u0281\62\0\2\u0282\46\0\1\u0283\54\0\1\u0284"+
    "\36\0\1\300\3\0\1\u013b\1\277\4\0\2\300\1\0"+
    "\1\300\3\0\4\300\1\u0285\10\300\2\0\10\300\1\0"+
    "\2\300\3\0\1\300\5\0\1\300\3\0\1\u013b\1\277"+
    "\4\0\2\300\1\0\1\300\3\0\11\300\1\u0286\3\300"+
    "\2\0\10\300\1\0\2\300\3\0\1\300\5\0\1\300"+
    "\3\0\1\u013b\1\277\4\0\2\300\1\0\1\300\3\0"+
    "\7\300\1\u0287\5\300\2\0\10\300\1\0\2\300\3\0"+
    "\1\300\34\0\1\u0288\34\0\1\305\4\0\1\306\1\0"+
    "\1\307\2\0\2\305\1\0\1\305\3\0\6\305\1\u0289"+
    "\6\305\2\0\10\305\1\0\2\305\3\0\1\305\12\0"+
    "\1\u028a\5\0\1\u028b\5\0\15\u028b\2\0\10\u028b\1\0"+
    "\2\u028b\3\0\1\u028b\5\0\1\331\4\0\1\332\1\0"+
    "\1\333\2\0\2\331\1\0\1\331\3\0\6\331\1\u028c"+
    "\6\331\2\0\10\331\1\0\2\331\3\0\1\331\13\0"+
    "\1\u025a\55\0\1\u025a\4\0\1\u0259\4\0\2\u025a\1\0"+
    "\1\u025a\3\0\15\u025a\2\0\10\u025a\1\0\2\u025a\3\0"+
    "\1\u025a\35\0\1\u028d\76\0\1\u028e\61\0\1\u028f\47\0"+
    "\1\u0290\36\0\1\364\3\0\1\u0165\1\363\4\0\2\364"+
    "\1\0\1\364\3\0\4\364\1\u0291\10\364\2\0\10\364"+
    "\1\0\2\364\3\0\1\364\5\0\1\364\3\0\1\u0165"+
    "\1\363\4\0\2\364\1\0\1\364\3\0\11\364\1\u0292"+
    "\3\364\2\0\10\364\1\0\2\364\3\0\1\364\5\0"+
    "\1\364\3\0\1\u0165\1\363\4\0\2\364\1\0\1\364"+
    "\3\0\7\364\1\u0293\5\364\2\0\10\364\1\0\2\364"+
    "\3\0\1\364\34\0\1\u0294\42\0\1\u0267\55\0\1\u0267"+
    "\4\0\1\u0266\4\0\2\u0267\1\0\1\u0267\3\0\15\u0267"+
    "\2\0\10\u0267\1\0\2\u0267\3\0\1\u0267\35\0\1\u0295"+
    "\67\0\1\u0296\54\0\1\u0297\36\0\1\u010d\3\0\1\u017c"+
    "\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0\4\u010d\1\u0298"+
    "\10\u010d\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d\5\0"+
    "\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d"+
    "\3\0\11\u010d\1\u0299\3\u010d\2\0\10\u010d\1\0\2\u010d"+
    "\3\0\1\u010d\5\0\1\u010d\3\0\1\u017c\1\u010c\4\0"+
    "\2\u010d\1\0\1\u010d\3\0\7\u010d\1\u029a\5\u010d\2\0"+
    "\10\u010d\1\0\2\u010d\3\0\1\u010d\34\0\1\u029b\34\0"+
    "\1\305\4\0\1\306\1\0\1\307\2\0\2\305\1\0"+
    "\1\305\3\0\6\305\1\u029c\6\305\2\0\10\305\1\0"+
    "\2\305\3\0\1\305\35\0\1\u029d\100\0\1\u029e\46\0"+
    "\1\u029f\61\0\1\u02a0\65\0\1\u02a1\73\0\1\u02a2\57\0"+
    "\1\u02a3\47\0\2\u02a4\77\0\1\u02a5\53\0\1\u02a6\71\0"+
    "\1\u02a7\50\0\2\u02a8\50\0\1\u027f\55\0\1\u027f\3\0"+
    "\1\u02a9\1\u027e\4\0\2\u027f\1\0\1\u027f\3\0\15\u027f"+
    "\2\0\10\u027f\1\0\2\u027f\3\0\1\u027f\35\0\1\u02aa"+
    "\103\0\2\u02ab\36\0\1\u02ac\65\0\1\u02ad\35\0\1\300"+
    "\3\0\1\u013b\1\277\4\0\2\300\1\0\1\300\3\0"+
    "\5\300\1\u02ae\7\300\2\0\10\300\1\0\2\300\3\0"+
    "\1\300\5\0\1\300\3\0\1\u013b\1\277\4\0\2\300"+
    "\1\0\1\300\3\0\7\300\1\u02af\5\300\2\0\10\300"+
    "\1\0\2\300\3\0\1\300\5\0\1\300\3\0\1\u013b"+
    "\1\277\4\0\2\300\1\0\1\300\3\0\6\300\1\u02b0"+
    "\6\300\2\0\10\300\1\0\2\300\3\0\1\300\42\0"+
    "\1\u02b1\26\0\1\305\4\0\1\306\1\0\1\307\2\0"+
    "\2\305\1\0\1\305\3\0\14\305\1\u02b2\2\0\10\305"+
    "\1\0\2\305\3\0\1\305\13\0\1\u028b\55\0\1\u028b"+
    "\3\0\1\u02b3\1\u028a\4\0\2\u028b\1\0\1\u028b\3\0"+
    "\15\u028b\2\0\10\u028b\1\0\2\u028b\3\0\1\u028b\5\0"+
    "\1\331\4\0\1\332\1\0\1\333\2\0\2\331\1\0"+
    "\1\331\3\0\14\331\1\u02b4\2\0\10\331\1\0\2\331"+
    "\3\0\1\331\53\0\1\u02b5\56\0\1\u02b6\37\0\1\u02b7"+
    "\74\0\1\u02b8\35\0\1\364\3\0\1\u0165\1\363\4\0"+
    "\2\364\1\0\1\364\3\0\5\364\1\u02b9\7\364\2\0"+
    "\10\364\1\0\2\364\3\0\1\364\5\0\1\364\3\0"+
    "\1\u0165\1\363\4\0\2\364\1\0\1\364\3\0\7\364"+
    "\1\u02ba\5\364\2\0\10\364\1\0\2\364\3\0\1\364"+
    "\5\0\1\364\3\0\1\u0165\1\363\4\0\2\364\1\0"+
    "\1\364\3\0\6\364\1\u02bb\6\364\2\0\10\364\1\0"+
    "\2\364\3\0\1\364\42\0\1\u02bc\74\0\1\u02bd\52\0"+
    "\1\u02be\54\0\1\u02bf\35\0\1\u010d\3\0\1\u017c\1\u010c"+
    "\4\0\2\u010d\1\0\1\u010d\3\0\5\u010d\1\u02c0\7\u010d"+
    "\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d\5\0\1\u010d"+
    "\3\0\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0"+
    "\7\u010d\1\u02c1\5\u010d\2\0\10\u010d\1\0\2\u010d\3\0"+
    "\1\u010d\5\0\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d"+
    "\1\0\1\u010d\3\0\6\u010d\1\u02c2\6\u010d\2\0\10\u010d"+
    "\1\0\2\u010d\3\0\1\u010d\42\0\1\u02c3\26\0\1\305"+
    "\4\0\1\306\1\0\1\307\2\0\2\305\1\0\1\305"+
    "\3\0\14\305\1\u02c4\2\0\10\305\1\0\2\305\3\0"+
    "\1\305\34\0\1\u02c5\70\0\1\u02c6\60\0\1\u02c7\76\0"+
    "\1\u02c8\34\0\1\u02c9\107\0\1\u02ca\57\0\1\u02cb\63\0"+
    "\1\u02cc\61\0\1\u02cd\71\0\1\u02ce\55\0\1\u02cf\63\0"+
    "\1\u02d0\73\0\1\u02d1\61\0\1\u02d2\51\0\1\u02d3\34\0"+
    "\1\300\3\0\1\u013b\1\277\4\0\2\300\1\0\1\300"+
    "\3\0\6\300\1\u0286\6\300\2\0\10\300\1\0\2\300"+
    "\3\0\1\300\5\0\1\300\3\0\1\u02d4\1\277\4\0"+
    "\2\300\1\0\1\300\3\0\15\300\2\0\10\300\1\0"+
    "\2\300\3\0\1\300\5\0\1\300\3\0\1\u013b\1\277"+
    "\4\0\2\300\1\0\1\300\3\0\14\300\1\u02af\2\0"+
    "\10\300\1\0\2\300\3\0\1\300\32\0\1\u02d5\66\0"+
    "\1\u02d6\67\0\1\u02d7\56\0\1\u02d8\34\0\1\364\3\0"+
    "\1\u0165\1\363\4\0\2\364\1\0\1\364\3\0\6\364"+
    "\1\u0292\6\364\2\0\10\364\1\0\2\364\3\0\1\364"+
    "\5\0\1\364\3\0\1\u02d9\1\363\4\0\2\364\1\0"+
    "\1\364\3\0\15\364\2\0\10\364\1\0\2\364\3\0"+
    "\1\364\5\0\1\364\3\0\1\u0165\1\363\4\0\2\364"+
    "\1\0\1\364\3\0\14\364\1\u02ba\2\0\10\364\1\0"+
    "\2\364\3\0\1\364\32\0\1\u02da\71\0\1\u02db\57\0"+
    "\1\u02dc\34\0\1\u010d\3\0\1\u017c\1\u010c\4\0\2\u010d"+
    "\1\0\1\u010d\3\0\6\u010d\1\u0299\6\u010d\2\0\10\u010d"+
    "\1\0\2\u010d\3\0\1\u010d\5\0\1\u010d\3\0\1\u02dd"+
    "\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0\15\u010d\2\0"+
    "\10\u010d\1\0\2\u010d\3\0\1\u010d\5\0\1\u010d\3\0"+
    "\1\u017c\1\u010c\4\0\2\u010d\1\0\1\u010d\3\0\14\u010d"+
    "\1\u02c1\2\0\10\u010d\1\0\2\u010d\3\0\1\u010d\42\0"+
    "\1\u02de\63\0\1\u02df\53\0\1\u02e0\73\0\1\u02e1\62\0"+
    "\1\u02e2\44\0\1\u02e3\101\0\1\u02e4\55\0\1\u02e5\63\0"+
    "\1\u02e6\73\0\1\u02e7\56\0\1\u02e8\66\0\1\u02e9\60\0"+
    "\1\u02ea\66\0\1\u02eb\60\0\1\u02ec\60\0\1\u02ed\66\0"+
    "\1\u02ee\61\0\1\u02ef\57\0\1\u02f0\45\0\1\u02d4\63\0"+
    "\1\u02d9\63\0\1\u02dd\124\0\1\u02f1\46\0\1\u02f2\67\0"+
    "\1\u02f3\56\0\1\u02f4\71\0\1\u02f5\63\0\1\u02f6\23\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[30992];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\37\0\3\11\6\1\1\11\4\1\2\11\2\1\2\11"+
    "\5\1\1\11\1\1\2\11\2\1\1\11\2\1\2\11"+
    "\11\1\1\11\1\1\2\11\3\1\1\11\1\1\1\11"+
    "\10\1\1\11\6\1\3\11\2\1\1\11\1\1\1\11"+
    "\1\1\1\11\2\1\1\11\2\1\1\11\5\1\1\11"+
    "\1\1\3\11\5\1\2\11\1\1\1\11\3\1\1\11"+
    "\2\1\1\11\2\1\1\11\5\1\1\11\2\1\3\11"+
    "\52\0\1\11\1\1\5\0\1\11\14\0\1\1\21\0"+
    "\2\11\11\0\1\11\30\0\1\11\1\1\31\0\1\11"+
    "\4\0\1\11\10\0\1\11\4\0\1\11\15\0\1\11"+
    "\26\0\1\11\26\0\1\11\17\0\1\1\4\0\1\11"+
    "\5\0\2\11\1\0\2\11\1\0\1\11\2\0\2\11"+
    "\1\0\2\11\10\0\1\1\2\0\1\11\2\0\2\11"+
    "\2\0\1\1\2\0\1\1\2\0\1\11\3\0\1\11"+
    "\1\0\5\11\2\0\2\11\10\0\2\11\2\0\1\11"+
    "\2\0\2\11\2\0\1\11\1\0\1\11\1\0\1\11"+
    "\10\0\1\1\1\11\7\0\1\11\1\1\1\11\10\0"+
    "\2\11\10\0\1\11\4\0\1\1\2\0\1\11\2\1"+
    "\2\11\2\0\1\1\1\0\1\11\2\1\3\0\1\11"+
    "\5\0\1\11\1\0\1\11\2\0\1\11\7\0\1\1"+
    "\2\0\2\1\1\11\1\0\2\11\2\0\1\11\14\0"+
    "\1\11\15\0\1\1\10\0\3\11\1\0\1\1\12\0"+
    "\1\11\12\0\1\11\4\0\1\11\36\0\1\1\7\0"+
    "\1\11\1\0\1\11\5\0\1\11\1\1\1\11\1\1"+
    "\7\0\1\11\6\0\1\11\1\1\5\0\1\11\1\1"+
    "\1\0\2\11\1\0\1\11\3\0\1\11\1\0\2\11"+
    "\1\0\1\11\1\0\1\11\1\0\5\11\2\0\1\11"+
    "\2\0\1\11\1\0\1\11\1\0\1\11\2\0\2\11"+
    "\5\0\2\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[758];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
	public static String urlAuxliar="";
	public static Boolean fin=false;
	public static String txt_temporal="";
	public static int linea=0;
	public static int columna=0;



    public static int flagInicio = 0;
    public String cadena = "";
    public String estado="";


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Scanner(java.io.Reader in) {
    this.zzReader = in;
  }



  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
          { 	return new Symbol(simbolos.EOF,new String("Fin del archivo"));
    /*({letra}":"("\\"({linea})+)+)*/
 }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { System.out.println("Caracter ilegal: " + yytext()+" Linea : "+yyline +" Columna: "+yychar); 
			Errores errorLexico=new Errores();
			errorLexico.setTipo("Lexico");
			errorLexico.setLinea(yyline);
			errorLexico.setColumna(yychar);
			errorLexico.setDescripcion("Caracter Ilegal: "+yytext());
			Interfaz.erroresLexicos.add(errorLexico);
			//Proyecto1_Compiladores.listaLexico.add(errorLexico);
			//Menu.listaLexico=Proyecto1_Compiladores.listaLexico;
            }
          case 157: break;
          case 2: 
            { System.out.println("Salto de linea");
            }
          case 158: break;
          case 3: 
            { yychar=0;
            }
          case 159: break;
          case 4: 
            { cadena = "";
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : Menor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        System.out.println("*****************************************************************");
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 160: break;
          case 5: 
            { cadena = "";
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	        
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 161: break;
          case 6: 
            { System.out.print(yytext());
            }
          case 162: break;
          case 7: 
            { 
            }
          case 163: break;
          case 8: 
            { yybegin(ENCABEZADO2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        
        
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 164: break;
          case 9: 
            { cadena = "";
            }
          case 165: break;
          case 10: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : Menor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
       
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 166: break;
          case 11: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);


        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 167: break;
          case 12: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("asignacion");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("= : Asignacion");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                
        Interfaz.tablaSimbolos_.add(simbolo);
             
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.asignacion, yychar, yyline, yytext());
            }
          case 168: break;
          case 13: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("puntoComa");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("; : Punto coma");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
            
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.puntoComa, yychar, yyline, yytext());
            }
          case 169: break;
          case 14: 
            { yybegin(YYINITIAL);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        
        
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 170: break;
          case 15: 
            { yybegin(TITULO2);                           
        System.out.println("Saltar a estado TITULO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        
        
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 171: break;
          case 16: 
            { if(!yytext().equals("<"))
        {
            if(yytext().equals("\n"))
            {
                cadena  = cadena + "\\n";
            }
            else
            {
                cadena  = cadena + yytext();            
            }
            
        }
        else  
        {           
            yybegin(ENCABEZADO2);
            Interfaz.auxContador++;                                
            //Generamos la entrada en la tabla de simbolos.
            tablaSimbolos simbolo=new tablaSimbolos();
            simbolo.setTipo("cadena");
            simbolo.setLinea(yyline);
            simbolo.setColumna(yychar);
            simbolo.setDescripcion("Cadena : cadena de texto");
            simbolo.setIndex(Interfaz.auxContador);
            if(cadena.equals("")){cadena=" ";} simbolo.setValor(cadena);                 
            Interfaz.tablaSimbolos_.add(simbolo);
            yypushback(1);	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 
        }
            }
          case 172: break;
          case 17: 
            { yybegin(ENCABEZADO2);  
        System.out.println("----------------------------------------------Saliendo de titulo3");                         
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : Menor que titulo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 173: break;
          case 18: 
            { yybegin(YYINITIAL);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 174: break;
          case 19: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("asignacion");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("= : Asignacion");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                
        Interfaz.tablaSimbolos_.add(simbolo);
                             
        return new Symbol(simbolos.asignacion, yychar, yyline, yytext());
            }
          case 175: break;
          case 20: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("puntoComa");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("; : Punto coma");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                    
        return new Symbol(simbolos.puntoComa, yychar, yyline, yytext());
            }
          case 176: break;
          case 21: 
            { yybegin(TEXTO2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 177: break;
          case 22: 
            { System.out.print(yytext());
        if(!yytext().equals("<"))
        {
            if(yytext().equals("\n"))
            {
                cadena  = cadena + "\\n";
            }
            else
            {
                cadena  = cadena + yytext();            
            }
            
        }
        else  
        {

            //cadena = cadena + yytext();
            
            yybegin(YYINITIAL);
            Interfaz.auxContador++;                                
            //Generamos la entrada en la tabla de simbolos.
            tablaSimbolos simbolo=new tablaSimbolos();
            simbolo.setTipo("cadena");
            simbolo.setLinea(yyline);
            simbolo.setColumna(yychar);
            simbolo.setDescripcion("Cadena : cadena de texto");
            simbolo.setIndex(Interfaz.auxContador);
            if(cadena.equals("")){cadena=" ";} simbolo.setValor(cadena);                 
            Interfaz.tablaSimbolos_.add(simbolo);
            yypushback(1);	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 

        }
            }
          case 178: break;
          case 23: 
            { yybegin(IMAGEN2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 179: break;
          case 24: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : MenorQue fin Imagen");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 180: break;
          case 25: 
            { yybegin(BOTON2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 181: break;
          case 26: 
            { cadena  = cadena + yytext();
            }
          case 182: break;
          case 27: 
            { if(!yytext().equals("<"))
        {
            if(yytext().equals("\n"))
            {
                cadena  = cadena + "\\n";
            }
            else
            {
                cadena  = cadena + yytext();            
            }
            
        }
        else 
        {

            //cadena = cadena + yytext();
            
            yybegin(YYINITIAL);
            Interfaz.auxContador++;                                
            //Generamos la entrada en la tabla de simbolos.
            tablaSimbolos simbolo=new tablaSimbolos();
            simbolo.setTipo("cadena");
            simbolo.setLinea(yyline);
            simbolo.setColumna(yychar);
            simbolo.setDescripcion("Cadena : cadena de texto");
            simbolo.setIndex(Interfaz.auxContador);
            if(cadena.equals("")){cadena=" ";} simbolo.setValor(cadena);                 
            Interfaz.tablaSimbolos_.add(simbolo);
            yypushback(1);	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 

        }
            }
          case 183: break;
          case 28: 
            { yybegin(ENLACE2);                           
        System.out.println("Saltar a estado ENLACE2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 184: break;
          case 29: 
            { yybegin(T2);  
        cadena = "";                         
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 185: break;
          case 30: 
            { cadena = "";
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : Menor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 186: break;
          case 31: 
            { cadena = "";
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        System.out.println("*****************************************************************");
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 187: break;
          case 32: 
            { cadena = "";
        yybegin(T4);                           
        System.out.println("Saltar a estado t4");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 188: break;
          case 33: 
            { cadena = "";
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que T4");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	        
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 189: break;
          case 34: 
            { cadena = "";
        yybegin(T6);                           
        System.out.println("Saltar a T6");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que T5");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 190: break;
          case 35: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("asignacion");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("= : Asignacion T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                
        Interfaz.tablaSimbolos_.add(simbolo);
                             
        return new Symbol(simbolos.asignacion, yychar, yyline, yytext());
            }
          case 191: break;
          case 36: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("puntoComa");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("; : Punto coma T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                    
        return new Symbol(simbolos.puntoComa, yychar, yyline, yytext());
            }
          case 192: break;
          case 37: 
            { if(!yytext().equals("<"))
        {
            if(yytext().equals("\n"))
            {
                cadena  = cadena + "\\n";
            }
            else
            {
                cadena  = cadena + yytext();            
            }
            
        }
        else 
        {

            //cadena = cadena + yytext();
            
            yybegin(T7);
            Interfaz.auxContador++;                                
            //Generamos la entrada en la tabla de simbolos.
            tablaSimbolos simbolo=new tablaSimbolos();
            simbolo.setTipo("cadena");
            simbolo.setLinea(yyline);
            simbolo.setColumna(yychar);
            simbolo.setDescripcion("Cadena : cadena de texto");
            simbolo.setIndex(Interfaz.auxContador);
            if(cadena.equals("")){cadena=" ";} simbolo.setValor(cadena);                 
            Interfaz.tablaSimbolos_.add(simbolo);
            yypushback(1);	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 

        }
            }
          case 193: break;
          case 38: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : MenorQue T7");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 194: break;
          case 39: 
            { yybegin(TB2);  
        cadena = "";                         
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 195: break;
          case 40: 
            { if(!yytext().equals("<"))
        {
            if(yytext().equals("\n"))
            {
                cadena  = cadena + "\\n";
            }
            else
            {
                cadena  = cadena + yytext();            
            }
            
        }
        else  
        {

            //cadena = cadena + yytext();
            
            yybegin(TB3);
            Interfaz.auxContador++;                                
            //Generamos la entrada en la tabla de simbolos.
            tablaSimbolos simbolo=new tablaSimbolos();
            simbolo.setTipo("cadena");
            simbolo.setLinea(yyline);
            simbolo.setColumna(yychar);
            simbolo.setDescripcion("Cadena : cadena de texto");
            simbolo.setIndex(Interfaz.auxContador);
            if(cadena.equals("")){cadena=" ";} simbolo.setValor(cadena);                 
            Interfaz.tablaSimbolos_.add(simbolo);
            yypushback(1);	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 

        }
            }
          case 196: break;
          case 41: 
            { cadena = "";
        yybegin(TI2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 197: break;
          case 42: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : MenorQue inicio TI2");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 198: break;
          case 43: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : mayorQue fin Imagen TI2");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        yybegin(T6); 
        cadena = "";               
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 199: break;
          case 44: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("menorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("< : MenorQue inicio TB3");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.menorQue, yychar, yyline, yytext());
            }
          case 200: break;
          case 45: 
            { cadena="";
        yybegin(T6);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que TB3");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 201: break;
          case 46: 
            { yybegin(TA2);                           
        System.out.println("Saltar a estado ENCABEZADO2");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("mayorQue");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("> : Mayor que");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 202: break;
          case 47: 
            { yybegin(CAJA2);                           
        Interfaz.addChtml("mayorQue",yyline,yychar,"> : Mayor que",yytext());                
        return new Symbol(simbolos.mayorQue, yychar, yyline, yytext());
            }
          case 203: break;
          case 48: 
            { Interfaz.addChtml("asignacion",yyline,yychar,"= : Asignacion",yytext());                      
        return new Symbol(simbolos.asignacion, yychar, yyline, yytext());
            }
          case 204: break;
          case 49: 
            { Interfaz.addChtml("puntoComa",yyline,yychar,"; : Punto coma",yytext());            
        return new Symbol(simbolos.puntoComa, yychar, yyline, yytext());
            }
          case 205: break;
          case 50: 
            { if(!yytext().equals("<"))
        {
            if(yytext().equals("\n"))
            {
                cadena  = cadena + "\\n";
            }
            else
            {
                cadena  = cadena + yytext();            
            }
            
        }
        else 
        {
            yybegin(YYINITIAL);
            yypushback(1);
            Interfaz.addChtml("cadena",yyline,yychar,"Cadena : cadena de texto",yytext()); 	                
            return new Symbol(simbolos.cadena, yychar, yyline, cadena); 
        }
            }
          case 206: break;
          case 51: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id Ccss");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id : Identificador grupo ccss");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.idCcss, yychar, yyline, yytext());
            }
          case 207: break;
          case 52: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id Ccss");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id : Identificador grupo ccss");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                            
        return new Symbol(simbolos.idCcss, yychar, yyline, yytext());
            }
          case 208: break;
          case 53: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("ct");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("ct: Inicio Celda");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(T5); 
        cadena = "";   
        System.out.println("SALTAR A T5");                                
        return new Symbol(simbolos.inicioCelda, yychar, yyline, yytext());
            }
          case 209: break;
          case 54: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("cb");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("cb: Inicio Celda cabecera");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(T5);   
        System.out.println("SALTAR A T5");
        cadena = "";
        return new Symbol(simbolos.inicioCeldaCabecera, yychar, yyline, yytext());
            }
          case 210: break;
          case 55: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id Ccss");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id : Identificador grupo ccss T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                            
        return new Symbol(simbolos.idCcss, yychar, yyline, yytext());
            }
          case 211: break;
          case 56: 
            { Interfaz.addChtml("idCcss",yyline,yychar,"id : Identificador grupo ccss",yytext());                    
        return new Symbol(simbolos.idCcss, yychar, yyline, yytext());
            }
          case 212: break;
          case 57: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("inicioCjs");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("CJS : Inicio etiqueta CJS");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
              
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.inicioCjs, yychar, yyline, yytext());
            }
          case 213: break;
          case 58: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id: Posible nombre de color.");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
               
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.id, yychar, yyline, yytext());
            }
          case 214: break;
          case 59: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id: Posible nombre de color.");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);

        return new Symbol(simbolos.id, yychar, yyline, yytext());
            }
          case 215: break;
          case 60: 
            { Interfaz.addChtml("metodo",yyline,yychar, yytext() +" : llamada a metodo",yytext());            
        return new Symbol(simbolos.metodo, yychar, yyline, yytext());
            }
          case 216: break;
          case 61: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("metodo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("metodo : Llamada a metodo");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.metodo, yychar, yyline, yytext());
            }
          case 217: break;
          case 62: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("id");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("id: Posible nombre de color. T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);

        return new Symbol(simbolos.id, yychar, yyline, yytext());
            }
          case 218: break;
          case 63: 
            { Interfaz.addChtml("id",yyline,yychar,"id: Posible nombre de color.",yytext());
        return new Symbol(simbolos.id, yychar, yyline, yytext());
            }
          case 219: break;
          case 64: 
            { Interfaz.addChtml("inicioCajaOpciones",yyline,yychar,"caja: Inico Caja opciones",yytext()); 
        yybegin(ELEMENTOS);                                       
        return new Symbol(simbolos.inicioCajaOpciones, yychar, yyline, yytext());
            }
          case 220: break;
          case 65: 
            { estado="YYINITIAL";
        yybegin(COMENTARIO);
            }
          case 221: break;
          case 66: 
            { switch(estado)
                {
                    case "COMENTARIO":
                        yybegin(COMENTARIO);	
                        break;
                    case "ENCABEZADO1":
                        yybegin(ENCABEZADO1);	
                        break;                    
                    case "ENCABEZADO2":
                        yybegin(ENCABEZADO2);	
                        break;                    
                    case "CUERPO":
                        yybegin(CUERPO);	
                        break;                    
                    case "TITULO1":
                        yybegin(TITULO1);	
                        break;                    
                    case "TITULO2":
                        yybegin(TITULO2);	
                        break;                    
                    case "TITULO3":
                        yybegin(TITULO3);	
                        break;                    
                    case "ELEMENTOS":
                        yybegin(ELEMENTOS);	
                        break;
                    case "TEXTO1":
                        yybegin(TEXTO1);	
                        break;
                    case "TEXTO2":
                        yybegin(TEXTO2);	
                        break;
                    case "IMAGEN1":
                        yybegin(IMAGEN1);	
                        break;
                    case "IMAGEN2":
                        yybegin(IMAGEN2);	
                        break;
                    case "BOTON1":
                        yybegin(BOTON1);	
                        break;
                    case "BOTON2":
                        yybegin(BOTON2);	
                        break;
                    case "ENLACE1":
                        yybegin(ENLACE1);	
                        break;
                    case "ENLACE2":
                        yybegin(ENLACE2);	
                        break;
                    case "T1":
                        yybegin(T1);	
                        break;
                    case  "T2":
                        yybegin(T2);	
                        break;
                    case "T3":
                        yybegin(T3);	
                        break;
                    case "T4":
                        yybegin(T4);	
                        break;
                    case "T5":
                        yybegin(T5);	
                        break;
                    case "T6":
                        yybegin(T6);	
                        break;
                    case "T7":
                        yybegin(T7);	
                        break;
                    case "TB":
                        yybegin(TB);	
                        break;
                    case "TB2":
                        yybegin(TB2);	
                        break;
                    case "TI":
                        yybegin(TI);	
                        break;
                        
                    case "TI2":
                        yybegin(TI2);	
                        break;
                    case "TB3":
                        yybegin(TB3);	
                        break;
                    case "TA1":
                        yybegin(TA1);	
                        break;
                    case "TA2":
                        yybegin(TA2);	
                        break;
                    case "CAJA1":
                        yybegin(CAJA1);	
                        break;
                    case "CAJA2":
                        yybegin(CAJA2);	
                        break;
                    case "YYINITIAL":
                        yybegin(YYINITIAL);	
                        break;                        
                }
            }
          case 222: break;
          case 67: 
            { estado="ENCABEZADO1";
        yybegin(COMENTARIO);
            }
          case 223: break;
          case 68: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("ruta");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("ruta : Declaración ruta archivo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
               
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.ruta, yychar, yyline, yytext());
            }
          case 224: break;
          case 69: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("inicioCcss");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("CCSS : Inicio etiqueta CCSS");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
              
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.inicioCcss, yychar, yyline, yytext());
            }
          case 225: break;
          case 70: 
            { estado="ENCABEZADO2";
        yybegin(COMENTARIO);
            }
          case 226: break;
          case 71: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("rgb");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("rgb: Posible nombre de color.");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
               
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.rgb, yychar, yyline, yytext());
            }
          case 227: break;
          case 72: 
            { estado="CUERPO";
        yybegin(COMENTARIO);
            }
          case 228: break;
          case 73: 
            { estado="TITULO1";
        yybegin(COMENTARIO);
            }
          case 229: break;
          case 74: 
            { estado="TITULO3";
        yybegin(COMENTARIO);
            }
          case 230: break;
          case 75: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("alto");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("alto : Altura objeto");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.alto, yychar, yyline, yytext());
            }
          case 231: break;
          case 76: 
            { estado="ELEMENTOS";
        yybegin(COMENTARIO);
            }
          case 232: break;
          case 77: 
            { estado="TEXTO1";
        yybegin(COMENTARIO);
            }
          case 233: break;
          case 78: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("ruta");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("ruta : Declaración ruta archivo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
               
        return new Symbol(simbolos.ruta, yychar, yyline, yytext());
            }
          case 234: break;
          case 79: 
            { estado="IMAGEN1";
        yybegin(COMENTARIO);
            }
          case 235: break;
          case 80: 
            { estado="IMAGEN2";
        yybegin(COMENTARIO);
            }
          case 236: break;
          case 81: 
            { estado="BOTON1";
        yybegin(COMENTARIO);
            }
          case 237: break;
          case 82: 
            { estado="ENLACE1";
        yybegin(COMENTARIO);
            }
          case 238: break;
          case 83: 
            { estado="T1";
        yybegin(COMENTARIO);
            }
          case 239: break;
          case 84: 
            { estado="T2";
        yybegin(COMENTARIO);
            }
          case 240: break;
          case 85: 
            { estado="T3";
        yybegin(COMENTARIO);
            }
          case 241: break;
          case 86: 
            { estado="T4";
        yybegin(COMENTARIO);
            }
          case 242: break;
          case 87: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("alto");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("alto : Altura objeto T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.alto, yychar, yyline, yytext());
            }
          case 243: break;
          case 88: 
            { estado="T5";
        yybegin(COMENTARIO);
            }
          case 244: break;
          case 89: 
            { estado="T7";
        yybegin(COMENTARIO);
            }
          case 245: break;
          case 90: 
            { estado="TB";
        yybegin(COMENTARIO);
            }
          case 246: break;
          case 91: 
            { estado="TI";
        yybegin(COMENTARIO);
            }
          case 247: break;
          case 92: 
            { estado="TI2";
        yybegin(COMENTARIO);
            }
          case 248: break;
          case 93: 
            { estado="TB3";
        yybegin(COMENTARIO);
            }
          case 249: break;
          case 94: 
            { estado="TA1";
        yybegin(COMENTARIO);
            }
          case 250: break;
          case 95: 
            { Interfaz.addChtml("alto",yyline,yychar,"alto : Altura objeto",yytext());                    
        return new Symbol(simbolos.alto, yychar, yyline, yytext());
            }
          case 251: break;
          case 96: 
            { estado="CAJA1";
        yybegin(COMENTARIO);
            }
          case 252: break;
          case 97: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("inicioChtml");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("CHTML : Inicio Documento");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        
        return new Symbol(simbolos.inicioChtml, yychar, yyline, yytext());
            }
          case 253: break;
          case 98: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("texto");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("texto: Inicio texto");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(TEXTO1);                            
        return new Symbol(simbolos.inicioTexto, yychar, yyline, yytext());
            }
          case 254: break;
          case 99: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("tabla");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("tabla: Inicio tabla");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(T1);                                    
        return new Symbol(simbolos.inicioTabla, yychar, yyline, yytext());
            }
          case 255: break;
          case 100: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("boton");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("boton: Inicio boton");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(BOTON1);                                    
        return new Symbol(simbolos.inicioBoton, yychar, yyline, yytext());
            }
          case 256: break;
          case 101: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("inicioPanel");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("panel: Declaracion panel");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
               
        yybegin(ELEMENTOS);        
        return new Symbol(simbolos.inicioPanel, yychar, yyline, yytext());
            }
          case 257: break;
          case 102: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("fondo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fondo : declaracion fondo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
       
        return new Symbol(simbolos.fondo, yychar, yyline, yytext());
            }
          case 258: break;
          case 103: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("ancho");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("ancho : Anchura objeto");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.ancho, yychar, yyline, yytext());
            }
          case 259: break;
          case 104: 
            { Interfaz.addChtml("click",yyline,yychar,"click : evento",yytext());            
        return new Symbol(simbolos.click, yychar, yyline, yytext());
            }
          case 260: break;
          case 105: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("grupo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("grupo : grupo ccss");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.grupo, yychar, yyline, yytext());
            }
          case 261: break;
          case 106: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("click");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("click : Evento Click");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                            
        return new Symbol(simbolos.click, yychar, yyline, yytext());
            }
          case 262: break;
          case 107: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fil_t");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fil_t: Inicio fila");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo); 
        yybegin(T3);                                
        return new Symbol(simbolos.inicioFila, yychar, yyline, yytext());
            }
          case 263: break;
          case 108: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("ancho");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("ancho : Anchura objeto T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.ancho, yychar, yyline, yytext());
            }
          case 264: break;
          case 109: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("grupo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("grupo : grupo ccss T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.grupo, yychar, yyline, yytext());
            }
          case 265: break;
          case 110: 
            { cadena="";
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("boton");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("boton : Inicio boton");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);    
        yybegin(TB);                        
        return new Symbol(simbolos.inicioBoton, yychar, yyline, yytext());
            }
          case 266: break;
          case 111: 
            { Interfaz.addChtml("ancho",yyline,yychar,"ancho : Anchura objeto",yytext());                    
        return new Symbol(simbolos.ancho, yychar, yyline, yytext());
            }
          case 267: break;
          case 112: 
            { Interfaz.addChtml("grupo",yyline,yychar,"grupo : grupo ccss",yytext());                      
        return new Symbol(simbolos.grupo, yychar, yyline, yytext());
            }
          case 268: break;
          case 113: 
            { Interfaz.addChtml("valor",yyline,yychar,yytext() + "valor de opcion",yytext());                    
        return new Symbol(simbolos.valor, yychar, yyline, yytext());
            }
          case 269: break;
          case 114: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("imagen");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("imagen: Inicio imagen");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(IMAGEN1);                                    
        return new Symbol(simbolos.inicioImagen, yychar, yyline, yytext());
            }
          case 270: break;
          case 115: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("enlace");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("enlace: Inicio enlace");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(ENLACE1);                                    
        return new Symbol(simbolos.inicioEnlace, yychar, yyline, yytext());
            }
          case 271: break;
          case 116: 
            { yybegin(CUERPO);
        System.out.println("Saltar a estado CUERPO");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("cuerpo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("cuerpo : Inicio cuerpo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);        	        
        return new Symbol(simbolos.inicioCuerpo, yychar, yyline, yytext());
            }
          case 272: break;
          case 117: 
            { Interfaz.addChtml("inicioOpcion",yyline,yychar,"Opcion: Inico Opcion",yytext()); 
        yybegin(CAJA1);                                       
        return new Symbol(simbolos.inicioOpcion, yychar, yyline, yytext());
            }
          case 273: break;
          case 118: 
            { yybegin(TITULO1);
        System.out.println("Saltar a estado CUERPO");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("titulo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("titulo : Inicio titulo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);        	        
        return new Symbol(simbolos.inicioTitulo, yychar, yyline, yytext());
            }
          case 274: break;
          case 119: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("path");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("path : Direccion a imagen");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                          
        return new Symbol(simbolos.path, yychar, yyline, yytext());
            }
          case 275: break;
          case 120: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("imagen");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("imagen : Inicio imagen");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);    
        yybegin(TI);
        cadena="";                        
        return new Symbol(simbolos.inicioImagen, yychar, yyline, yytext());
            }
          case 276: break;
          case 121: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finCeldaCabecera");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("finCeldaCabecera : Fin cabecera");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);    
        yybegin(T4);  
        System.out.println("SALTAR A T4"); 
        cadena = "";                              
        return new Symbol(simbolos.finCelda, yychar, yyline, yytext());
            }
          case 277: break;
          case 122: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finCelda");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("finCelda : Fin Celda");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(T4);       
        System.out.println("SALTAR A T4");  
        cadena = "";                         
        return new Symbol(simbolos.finCeldaCabecera, yychar, yyline, yytext());
            }
          case 278: break;
          case 123: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("path");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("path : Direccion a imagen TI2");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                          
        return new Symbol(simbolos.path, yychar, yyline, yytext());
            }
          case 279: break;
          case 124: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("inicioCajaArea");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("inicioCajaArea: Inicio caja area de texto");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
        yybegin(TA1);                                    
        return new Symbol(simbolos.inicioCajaArea, yychar, yyline, yytext());
            }
          case 280: break;
          case 125: 
            { Interfaz.addChtml("inicioSpinner",yyline,yychar,"spinner: Inico Spinner",yytext()); 
        yybegin(TA1);                                       
        return new Symbol(simbolos.inicioSpinner, yychar, yyline, yytext());
            }
          case 281: break;
          case 126: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finCjs");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-cjs : finCJs");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
             
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.finCjs, yychar, yyline, yytext());
            }
          case 282: break;
          case 127: 
            { Interfaz.addChtml("finCajaOpciones",yyline,yychar,"fin-caja: Fin caja Opciones",yytext());                                              
        return new Symbol(simbolos.finCajaOpciones, yychar, yyline, yytext());
            }
          case 283: break;
          case 128: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("pathComillas");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("Path: Ruta a archivo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
               
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.pathComillas, yychar, yyline, yytext());
            }
          case 284: break;
          case 129: 
            { Interfaz.auxContador++;
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finCcss");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-CCSS : fin etiqueta CCSS");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
             
        
        //Nos movemos al estado auxiliar para declaracion cjs
        return new Symbol(simbolos.finCcss, yychar, yyline, yytext());
            }
          case 285: break;
          case 130: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("alineado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("alineado : Alineación objeto");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.alineado, yychar, yyline, yytext());
            }
          case 286: break;
          case 131: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("path");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("path : Direccion a imagen");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.pathComillas, yychar, yyline, yytext());
            }
          case 287: break;
          case 132: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("alineado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("alineado : Alineación objeto T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.alineado, yychar, yyline, yytext());
            }
          case 288: break;
          case 133: 
            { Interfaz.addChtml("alineado",yyline,yychar,"alineado : Alineación objeto",yytext());                    
        return new Symbol(simbolos.alineado, yychar, yyline, yytext());
            }
          case 289: break;
          case 134: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("finChtml");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("FIN-CHTML : Fin Documento");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        
        return new Symbol(simbolos.finChtml, yychar, yyline, yytext());
            }
          case 290: break;
          case 135: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-texto");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-texto: Fin texto");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                                    
        return new Symbol(simbolos.finTexto, yychar, yyline, yytext());
            }
          case 291: break;
          case 136: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-boton");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-boton: Fin boton");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                                 
        return new Symbol(simbolos.finBoton, yychar, yyline, yytext());
            }
          case 292: break;
          case 137: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finPanel");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-panel: Cierre panel");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                          
        return new Symbol(simbolos.finPanel, yychar, yyline, yytext());
            }
          case 293: break;
          case 138: 
            { Interfaz.addChtml("salto",yyline,yychar,"salto: salto :v",yytext());                                              
        return new Symbol(simbolos.salto, yychar, yyline, yytext());
            }
          case 294: break;
          case 139: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("valorAlineado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("valorAlineado : Alineación");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.valorAlineado, yychar, yyline, yytext());
            }
          case 295: break;
          case 140: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-tabla");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-tabla: Fin tabla");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);  
        yybegin(YYINITIAL);
        return new Symbol(simbolos.finTabla, yychar, yyline, yytext());
            }
          case 296: break;
          case 141: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("fin-fil_t");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-fil_t : Fin Fila");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);   
        yybegin(T2);     	        
        return new Symbol(simbolos.finFila, yychar, yyline, yytext());
            }
          case 297: break;
          case 142: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("valorAlineado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("valorAlineado : Alineación T5");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);
                            
        return new Symbol(simbolos.valorAlineado, yychar, yyline, yytext());
            }
          case 298: break;
          case 143: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-boton");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-boton: Fin boton TB3");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);  
        cadena = "";          
        return new Symbol(simbolos.finBoton, yychar, yyline, yytext());
            }
          case 299: break;
          case 144: 
            { Interfaz.addChtml("valorAlineado",yyline,yychar, yytext() +" : Alineación",yytext());                    
        return new Symbol(simbolos.valorAlineado, yychar, yyline, yytext());
            }
          case 300: break;
          case 145: 
            { yybegin(ENCABEZADO1);
        System.out.println("Saltar a estado ENCABEZADO1");
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("inicioEncabezado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("encabezado : Inicio encabezado");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);        	        
        return new Symbol(simbolos.inicioEncabezado, yychar, yyline, yytext());
            }
          case 301: break;
          case 146: 
            { Interfaz.addChtml("inicioCaja",yyline,yychar,"caja_texto: Inico caja texto",yytext()); 
        yybegin(TA1);                                       
        return new Symbol(simbolos.inicioCaja, yychar, yyline, yytext());
            }
          case 302: break;
          case 147: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-enlace");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-enlace: Fin enlace");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                                 
        return new Symbol(simbolos.finEnlace, yychar, yyline, yytext());
            }
          case 303: break;
          case 148: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("fin-cuerpo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-cuerpo : Fin cuerpo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);        	        
        return new Symbol(simbolos.finCuerpo, yychar, yyline, yytext());
            }
          case 304: break;
          case 149: 
            { Interfaz.addChtml("finOpcion",yyline,yychar,"fin-opcion: Fin Opcion",yytext());                                              
        return new Symbol(simbolos.finOpcion, yychar, yyline, yytext());
            }
          case 305: break;
          case 150: 
            { Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("fin-titulo");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-titulo : Fin titulo");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);        	        
        return new Symbol(simbolos.finTitulo, yychar, yyline, yytext());
            }
          case 306: break;
          case 151: 
            { yybegin(YYINITIAL); 
        //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-imagen");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-imagen: Fin imagen");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                                    
        return new Symbol(simbolos.finImagen, yychar, yyline, yytext());
            }
          case 307: break;
          case 152: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("fin-imagen");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("fin-imagen: Fin imagen TI2");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);      
        cadena = "";                              
        return new Symbol(simbolos.finImagen, yychar, yyline, yytext());
            }
          case 308: break;
          case 153: 
            { //Generamos la entrada en la tabla de simbolos
        tablaSimbolos simbolo = new tablaSimbolos();
        simbolo.setTipo("finCajaArea");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("finCajaArea: Fin caja area de texto");
        simbolo.setIndex(Interfaz.auxContador++);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);                                           
        return new Symbol(simbolos.finCajaArea, yychar, yyline, yytext());
            }
          case 309: break;
          case 154: 
            { Interfaz.addChtml("finSpinner",yyline,yychar,"fin-spinner: Fin Spinner",yytext());                                              
        return new Symbol(simbolos.finSpinner, yychar, yyline, yytext());
            }
          case 310: break;
          case 155: 
            { Interfaz.addChtml("finCaja",yyline,yychar,"fin-caja_texto: Fin caja texto",yytext());                                            
        return new Symbol(simbolos.finCaja, yychar, yyline, yytext());
            }
          case 311: break;
          case 156: 
            { yybegin(YYINITIAL);
        Interfaz.auxContador++;                                
        //Generamos la entrada en la tabla de simbolos.
        tablaSimbolos simbolo=new tablaSimbolos();
        simbolo.setTipo("finEncabezado");
        simbolo.setLinea(yyline);
        simbolo.setColumna(yychar);
        simbolo.setDescripcion("FIN-ENCABEZADO : Fin Encabezado");
        simbolo.setIndex(Interfaz.auxContador);
        simbolo.setValor(yytext());                 
        Interfaz.tablaSimbolos_.add(simbolo);	
        
        return new Symbol(simbolos.finEncabezado, yychar, yyline, yytext());
            }
          case 312: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
